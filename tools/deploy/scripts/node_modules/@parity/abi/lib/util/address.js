"use strict";
// Copyright 2015-2019 Parity Technologies (UK) Ltd.
// This file is part of Parity.
//
// SPDX-License-Identifier: MIT
Object.defineProperty(exports, "__esModule", { value: true });
var js_sha3_1 = require("js-sha3");
/**
 * Verify that an address has a valid checksum.
 *
 * @param address - The Ethereum address to verify.
 */
exports.isChecksumValid = function (address) {
    var _address = address.replace('0x', '');
    var hash = js_sha3_1.keccak_256(_address.toLowerCase());
    for (var n = 0; n < 40; n++) {
        var char = _address[n];
        var isLower = char !== char.toUpperCase();
        var isUpper = char !== char.toLowerCase();
        var hashval = parseInt(hash[n], 16);
        if ((hashval > 7 && isLower) || (hashval <= 7 && isUpper)) {
            return false;
        }
    }
    return true;
};
/**
 * Verify that an address is a valid Ethereum address.
 *
 * @param address - The address to verify.
 */
exports.isAddress = function (address) {
    if (address && address.length === 42) {
        if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {
            return false;
        }
        else if (/^(0x)?[0-9a-f]{40}$/.test(address) ||
            /^(0x)?[0-9A-F]{40}$/.test(address)) {
            return true;
        }
        return exports.isChecksumValid(address);
    }
    return false;
};
/**
 * Convert an Ethereum address to its checksum-valid version.
 *
 * @param address - The address to convert.
 */
exports.toChecksumAddress = function (address) {
    var _address = (address || '').toLowerCase();
    if (!exports.isAddress(_address)) {
        return '';
    }
    var hash = js_sha3_1.keccak_256(_address.slice(-40));
    var result = '0x';
    for (var n = 0; n < 40; n++) {
        result = "" + result + (parseInt(hash[n], 16) > 7
            ? _address[n + 2].toUpperCase()
            : _address[n + 2]);
    }
    return result;
};
