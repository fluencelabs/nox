import BigNumber from 'bignumber.js';
/**
 * Pad an address with zeros on the left.
 *
 * @param input - The input address to pad.
 */
export declare const padAddress: (input: string) => string;
/**
 * Pad a boolean with zeros on the left.
 *
 * @param input - The input address to pad.
 */
export declare const padBool: (input: string | boolean) => string;
/**
 * Pad a u32 with zeros on the left.
 *
 * @param input - The input address to pad.
 */
export declare const padU32: (input: BigNumber.Value) => string;
/**
 * Convert an input string to bytes.
 *
 * @param input - The input string to convert.
 */
export declare const stringToBytes: (input: string | number[]) => number[];
/**
 * Pad bytes with zeros on the left.
 *
 * @param input - The input bytes to pad.
 */
export declare const padBytes: (input: string | number[]) => string;
/**
 * Pad fixed bytes.
 *
 * @param input - Input bytes to pad.
 */
export declare const padFixedBytes: (input: string | number[]) => string;
/**
 * Pad string.
 *
 * @param input - String to pad.
 */
export declare const padString: (input: string) => string;
