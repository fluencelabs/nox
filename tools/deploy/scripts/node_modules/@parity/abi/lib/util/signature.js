"use strict";
// Copyright 2015-2019 Parity Technologies (UK) Ltd.
// This file is part of Parity.
//
// SPDX-License-Identifier: MIT
Object.defineProperty(exports, "__esModule", { value: true });
var js_sha3_1 = require("js-sha3");
var format_1 = require("../spec/paramType/format");
/**
 * Get event signature.
 */
exports.eventSignature = function (eventName, params) {
    if (params === void 0) { params = []; }
    var _a = exports.parseName(eventName), strName = _a.strName, name = _a.name;
    var types = (params || []).map(format_1.fromParamType).join(',');
    var id = strName + "(" + types + ")";
    var signature = strName ? js_sha3_1.keccak_256(id) : '';
    return { id: id, name: name, signature: signature };
};
/**
 * Get method signature.
 *
 * @param methodName - The method name.
 * @param params - The list of params
 */
exports.methodSignature = function (methodName, params) {
    if (params === void 0) { params = []; }
    var _a = exports.eventSignature(methodName, params), id = _a.id, name = _a.name, signature = _a.signature;
    return { id: id, name: name, signature: signature.substr(0, 8) };
};
/**
 * Parse name.
 *
 * @param name - Name to parse.
 */
exports.parseName = function (name) {
    var strName = "" + (name || '');
    var index = strName.indexOf('(');
    if (index === -1) {
        return { strName: strName, name: name };
    }
    var trimmedName = strName.slice(0, index);
    return {
        strName: trimmedName,
        name: trimmedName
    };
};
