"use strict";
// Copyright 2015-2019 Parity Technologies (UK) Ltd.
// This file is part of Parity.
//
// SPDX-License-Identifier: MIT
Object.defineProperty(exports, "__esModule", { value: true });
var sliceAs_1 = require("./sliceAs");
describe('util/sliceAs', function () {
    var MAX_INT = 'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';
    describe('asAddress', function () {
        it('correctly returns the last 0x40 characters', function () {
            var address = '1111111111222222222233333333334444444444';
            expect(sliceAs_1.asAddress("000000000000000000000000" + address)).toEqual("0x" + address);
        });
    });
    describe('asBool', function () {
        it('correctly returns true', function () {
            expect(sliceAs_1.asBool('0000000000000000000000000000000000000000000000000000000000000001')).toBe(true);
        });
        it('correctly returns false', function () {
            expect(sliceAs_1.asBool('0000000000000000000000000000000000000000000000000000000000000000')).toBe(false);
        });
    });
    describe('asI32', function () {
        it('correctly decodes positive numbers', function () {
            expect(sliceAs_1.asI32('000000000000000000000000000000000000000000000000000000000000007b').toString()).toEqual('123');
        });
        it('correctly decodes negative numbers', function () {
            expect(sliceAs_1.asI32('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85').toString()).toEqual('-123');
        });
    });
    describe('asU32', function () {
        it('returns a maxium U32', function () {
            expect(sliceAs_1.asU32(MAX_INT).toString(16)).toEqual(MAX_INT);
        });
    });
});
