"use strict";
// Copyright 2015-2019 Parity Technologies (UK) Ltd.
// This file is part of Parity.
//
// SPDX-License-Identifier: MIT
Object.defineProperty(exports, "__esModule", { value: true });
var constructor_1 = require("./constructor");
var param_1 = require("./param");
var token_1 = require("../token");
describe('spec/Constructor', function () {
    var inputsArr = [
        { name: 'boolin', type: 'bool' },
        { name: 'stringin', type: 'string' }
    ];
    var bool = new param_1.default('boolin', 'bool');
    var baseString = new param_1.default('stringin', 'string');
    var inputs = [bool, baseString];
    var cr = new constructor_1.default({ inputs: inputsArr, type: 'constructor' });
    describe('constructor', function () {
        it('stores the inputs as received', function () {
            expect(cr.inputs).toEqual(inputs);
        });
        it('matches empty inputs with []', function () {
            expect(new constructor_1.default({}).inputs).toEqual([]);
        });
    });
    describe('inputParamTypes', function () {
        it('retrieves the input types as received', function () {
            expect(cr.inputParamTypes()).toEqual([bool.kind, baseString.kind]);
        });
    });
    describe('encodeCall', function () {
        it('encodes correctly', function () {
            var result = cr.encodeCall([
                new token_1.default('bool', true),
                new token_1.default('string', 'jacogr')
            ]);
            expect(result).toEqual('0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000066a61636f67720000000000000000000000000000000000000000000000000000');
        });
    });
});
