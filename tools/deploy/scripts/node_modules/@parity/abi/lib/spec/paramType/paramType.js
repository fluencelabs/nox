"use strict";
// Copyright 2015-2019 Parity Technologies (UK) Ltd.
// This file is part of Parity.
//
// SPDX-License-Identifier: MIT
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = require("./types");
var ParamType = /** @class */ (function () {
    function ParamType(type, subtype, length, indexed) {
        if (subtype === void 0) { subtype = undefined; }
        if (length === void 0) { length = 0; }
        if (indexed === void 0) { indexed = false; }
        ParamType.validateType(type);
        this._type = type;
        this._subtype = subtype;
        this._length = length;
        this._indexed = indexed;
    }
    ParamType.validateType = function (type) {
        if (types_1.default.some(function (_type) { return type === _type; })) {
            return true;
        }
        throw new Error("Invalid type " + type + " received for ParamType");
    };
    Object.defineProperty(ParamType.prototype, "type", {
        get: function () {
            return this._type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ParamType.prototype, "subtype", {
        get: function () {
            return this._subtype;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ParamType.prototype, "length", {
        get: function () {
            return this._length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ParamType.prototype, "indexed", {
        get: function () {
            return this._indexed;
        },
        enumerable: true,
        configurable: true
    });
    return ParamType;
}());
exports.default = ParamType;
