"use strict";
// Copyright 2015-2019 Parity Technologies (UK) Ltd.
// This file is part of Parity.
//
// SPDX-License-Identifier: MIT
Object.defineProperty(exports, "__esModule", { value: true });
var decoder_1 = require("../decoder/decoder");
var encoder_1 = require("../encoder/encoder");
var signature_1 = require("../util/signature");
var param_1 = require("./param");
var Func = /** @class */ (function () {
    function Func(abi) {
        this._abi = abi;
        this._constant = !!abi.constant;
        this._payable = abi.payable || false;
        this._inputs = param_1.default.toParams(abi.inputs || []);
        this._outputs = param_1.default.toParams(abi.outputs || []);
        var _a = signature_1.methodSignature(abi.name, this.inputParamTypes()), id = _a.id, name = _a.name, signature = _a.signature;
        this._id = id;
        this._name = name;
        this._signature = signature;
    }
    Object.defineProperty(Func.prototype, "abi", {
        get: function () {
            return this._abi;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Func.prototype, "constant", {
        get: function () {
            return this._constant;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Func.prototype, "id", {
        get: function () {
            return this._id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Func.prototype, "inputs", {
        get: function () {
            return this._inputs;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Func.prototype, "name", {
        get: function () {
            return this._name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Func.prototype, "outputs", {
        get: function () {
            return this._outputs;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Func.prototype, "payable", {
        get: function () {
            return !!this._payable;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Func.prototype, "signature", {
        get: function () {
            return this._signature;
        },
        enumerable: true,
        configurable: true
    });
    Func.prototype.decodeInput = function (data) {
        return decoder_1.default.decode(this.inputParamTypes(), data);
    };
    Func.prototype.decodeOutput = function (data) {
        return decoder_1.default.decode(this.outputParamTypes(), data);
    };
    Func.prototype.encodeCall = function (tokens) {
        return "" + this._signature + encoder_1.default.encode(tokens);
    };
    Func.prototype.inputParamTypes = function () {
        return this._inputs.map(function (input) { return input.kind; });
    };
    Func.prototype.outputParamTypes = function () {
        return this._outputs.map(function (output) { return output.kind; });
    };
    return Func;
}());
exports.default = Func;
