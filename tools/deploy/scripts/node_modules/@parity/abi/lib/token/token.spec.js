"use strict";
// Copyright 2015-2019 Parity Technologies (UK) Ltd.
// This file is part of Parity.
//
// SPDX-License-Identifier: MIT
Object.defineProperty(exports, "__esModule", { value: true });
var token_1 = require("./token");
describe('token/token', function () {
    describe('validateType', function () {
        it('validates address', function () {
            expect(token_1.default.validateType('address')).toBe(true);
        });
        it('validates fixedArray', function () {
            expect(token_1.default.validateType('fixedArray')).toBe(true);
        });
        it('validates array', function () {
            expect(token_1.default.validateType('array')).toBe(true);
        });
        it('validates fixedBytes', function () {
            expect(token_1.default.validateType('fixedBytes')).toBe(true);
        });
        it('validates bytes', function () {
            expect(token_1.default.validateType('bytes')).toBe(true);
        });
        it('validates bool', function () {
            expect(token_1.default.validateType('bool')).toBe(true);
        });
        it('validates int', function () {
            expect(token_1.default.validateType('int')).toBe(true);
        });
        it('validates uint', function () {
            expect(token_1.default.validateType('uint')).toBe(true);
        });
        it('validates string', function () {
            expect(token_1.default.validateType('string')).toBe(true);
        });
        it('throws an error on invalid types', function () {
            expect(function () { return token_1.default.validateType('noMatch'); }).toThrow(/noMatch/);
        });
    });
    describe('constructor', function () {
        it('throws an error on invalid types', function () {
            expect(function () { return new token_1.default('noMatch', '1'); }).toThrow(/noMatch/);
        });
        it('sets the type of the object', function () {
            expect(new token_1.default('bool', '1').type).toEqual('bool');
        });
        it('sets the value of the object', function () {
            expect(new token_1.default('bool', '1').value).toEqual('1');
        });
    });
});
