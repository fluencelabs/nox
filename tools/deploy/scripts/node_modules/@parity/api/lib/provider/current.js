"use strict";
// Copyright 2015-2018 Parity Technologies (UK) Ltd.
// This file is part of Parity.
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Parity is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// Parity is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// You should have received a copy of the GNU General Public License
// along with Parity.  If not, see <http://www.gnu.org/licenses/>.
var JsonRpcEncoder = require('../transport/jsonRpcEncoder');
var Current = /** @class */ (function (_super) {
    __extends(Current, _super);
    function Current(currentProvider) {
        var _this = _super.call(this) || this;
        _this._currentProvider = currentProvider;
        return _this;
    }
    Current.prototype.send = function (method, params, callback) {
        this._currentProvider.sendAsync(this.encodeObject(method, params), function (error, result) {
            if (error) {
                callback(error);
            }
            else if (result && result.result !== undefined) {
                callback(null, result.result);
            }
            else {
                callback(null, result);
            }
        });
    };
    Object.defineProperty(Current.prototype, "isParity", {
        get: function () {
            return !!this._currentProvider.isParity;
        },
        enumerable: true,
        configurable: true
    });
    return Current;
}(JsonRpcEncoder));
module.exports = Current;
