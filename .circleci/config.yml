jdk: &jdk
  image: circleci/openjdk:8-jdk-node

just_jdk: &jdk_image
  docker:
    - *jdk

rc: &rc
  restore_cache:
    keys:
      - sbtcache003-{{ checksum "build.sbt" }}

sc: &sc
  save_cache:
    paths:
      - ~/.m2
      - ~/.ivy2
      - ~/.sbt
      - bootstrap/node_modules
      - ~/.cargo
      - ~/.rustup
    key: sbtcache003-{{ checksum "build.sbt" }}

rustup: &rustup
  - run: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly-2019-03-10
      ~/.cargo/bin/rustup toolchain install nightly-2019-03-10 # in case some other toolchain was already installed
      ~/.cargo/bin/rustup target add wasm32-unknown-unknown --toolchain nightly-2019-03-10

version: 2
jobs:
  sbt all tests:
    <<: *jdk_image
    resource_class: medium+
    steps:
      - checkout
      - <<: *rc
      - <<: *rustup
      - run: PATH="$PATH:$HOME/.cargo/bin:" SBT_OPTS="-XX:MaxMetaspaceSize=4096M -Xms5120M -Xmx5120M -Xss6M" sbt -v clean test:compile
      - run: PATH="$PATH:$HOME/.cargo/bin:" SBT_OPTS="-XX:MaxMetaspaceSize=4096M -Xms5120M -Xmx5120M -Xss6M" sbt -v test
      - <<: *sc

  backend sdk:
    docker:
      - image: circleci/rust:latest
    environment:
      RUST_BACKTRACE: 1
      RUST_TEST_THREADS: 1
    steps:
      - checkout
      - restore_cache:
          keys:
            - backendsdk-{{ checksum "backend-sdk/Cargo.toml" }}
      - run: | #TODO: enable 'stable' and 'beta' once `allocator_api` becomes stable
          cd backend-sdk/
          rustup toolchain install nightly-2019-03-10
          rustup default nightly-2019-03-10
          rustup override set nightly-2019-03-10
          rustup target add wasm32-unknown-unknown
          rustup component add rustfmt
          rustup component add clippy
          cargo fmt --all -- --check --color always
          cargo build -v --target wasm32-unknown-unknown --all-features
          cargo test -v --all-features
          cargo clippy -v --target wasm32-unknown-unknown
      - save_cache:
          paths:
            - ~/.cargo
            - ~/.rustup
          key: backendsdk-{{ checksum "backend-sdk/Cargo.toml" }}

  smart contract:
    docker:
      - image: circleci/node:10.15
    steps:
      - checkout
      - restore_cache:
          keys:
            - contract-cache-{{ checksum "bootstrap/package-lock.json" }}
      - run: |
          cd bootstrap
          npm install &>/dev/null
          npm run ganache &>/dev/null
          npm test
      - save_cache:
          paths:
            - bootstrap/node_modules
          key: contract-cache-{{ checksum "bootstrap/package-lock.json" }}

  js sdk:
    docker:
      - image: circleci/node:10.15
    steps:
      - checkout
      - restore_cache:
          keys:
            - fluence-js-{{ checksum "fluence-js/package-lock.json" }}
      - run: |
          cd bootstrap
          npm install
          cd ..
          cd fluence-js
          npm install
          npm test
      - save_cache:
          paths:
            - fluence-js/node_modules
          key: fluence-js-{{ checksum "fluence-js/package-lock.json" }}

workflows:
  version: 2
  fluence:
    jobs:
      - sbt all tests
      - smart contract
      - js sdk
      - backend sdk

