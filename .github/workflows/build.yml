name: "Build nox binary"

on:
  workflow_call:
    inputs:
      ref:
        description: "git ref to checkout to"
        type: string
        default: "master"
      cargo-dependencies:
        description: "Cargo dependencies map"
        type: string
        default: "null"
    outputs:
      nox-sha:
        description: "nox sha256 hash"
        value: ${{ jobs.build.outputs.sha256 }}

jobs:
  build:
    name: "Build nox (${{ matrix.arch }})"
    runs-on: builder
    timeout-minutes: 60

    env: ${{ matrix.env }}

    outputs:
      sha256: "${{ steps.sha.outputs.sha256 }}"

    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
            env:
              RUSTFLAGS: "-D warnings --cfg tokio_unstable"
              SCCACHE_GHA_ENABLED: "true"
              RUSTC_WRAPPER: "sccache"
          - arch: aarch64
            env:
              RUSTFLAGS: "-D warnings --cfg tokio_unstable"
              SCCACHE_GHA_ENABLED: "true"
              RUSTC_WRAPPER: "sccache"
              CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
              CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
              CXX_aarch64_unknown_linux_gnu: aarch64-linux-gnu-g++

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: fluencelabs/nox
          ref: ${{ inputs.ref }}

      - name: Get PR labels
        id: labels
        uses: joerick/pr-labels-action@v1.0.9

      - name: Set profile
        id: profile
        run: |
          if [[ -n "$GITHUB_PR_LABEL_PROFILING" ]]; then
            echo "profile=profiling" >> $GITHUB_OUTPUT
            echo "flags=--profile=profiling --features particle-node/dhat-heap" >> $GITHUB_OUTPUT
          else
            echo "profile=release" >> $GITHUB_OUTPUT
            echo "flags=--profile=release" >> $GITHUB_OUTPUT
          fi

      - name: Setup Rust toolchain
        uses: moonrepo/setup-rust@v1
        with:
          inherit-toolchain: true
          bins: sccache
          cache: false

      - uses: Swatinem/rust-cache@v2

      - name: Set dependencies
        if: inputs.cargo-dependencies != 'null'
        uses: fluencelabs/github-actions/cargo-set-dependency@main
        with:
          dependencies: ${{ inputs.cargo-dependencies }}

      - name: Generate snapshot version
        id: version
        uses: fluencelabs/github-actions/generate-snapshot-id@main

      - name: Set version
        id: snapshot
        uses: fluencelabs/github-actions/cargo-publish-snapshot@main
        with:
          id: ${{ steps.version.outputs.id }}
          publish: false

      - name: Run cargo build
        run: cargo build ${{ steps.profile.outputs.flags }} -p nox --target ${{ matrix.arch }}-unknown-linux-gnu

      - name: Upload nox binary
        uses: actions/upload-artifact@v3
        with:
          name: nox-${{ matrix.arch }}
          path: target/${{ matrix.arch }}-unknown-linux-gnu/${{ steps.profile.outputs.profile }}/nox

      - name: Setup tmate session
        if: failure()
        uses: mxschmitt/action-tmate@v3
