name: Build Docker image
on:
  push:
  workflow_dispatch:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    ### extract branch name
      - name: Extract branch name
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
        id: extract_branch

      # extract branch name on pull request
      - name: Extract branch name
        if: github.event_name == 'pull_request'
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
    ###

      - name: Debug
        run: echo "Current branch is ${{ env.BRANCH_NAME }}"

      - uses: actions/checkout@v2

    ### Prepare cargo & toolchains
      - name: Cache Cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-stable-cargo-registry-
      - name: Cache Cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-stable-cargo-index-
      - name: Cache Cargo build
        uses: actions/cache@v1
        with:
          path: target/debug
          key: ${{ runner.os }}-stable-debug-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-stable-debug-target-

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly

    ### Update & build
      - uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: update
          args: -p libp2p

      - name: Build particle-server
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: build
          args: --release

#      - uses: icepuma/rust-action@master
#        with:
#          args: cargo update -p libp2p && cargo +nightly build --release

    ### Prepare docker & login to Dockerhub
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

    ### Build and push docker image
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: fluencelabs/fluence:${{ env.BRANCH_NAME }}
          build-args: |
            local_exe=./target/release/particle-server
            exe=particle-server
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
