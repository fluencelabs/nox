name: "e2e"

on:
  pull_request:
    paths-ignore:
      - "**.md"
      - ".github/**"
      - "!.github/workflows/e2e.yml"
      - "!.github/workflows/snapshot.yml"
      - "!.github/workflows/container.yml"
      - "!.github/workflows/build.yml"
    types:
      - "labeled"
      - "synchronize"
      - "opened"
      - "reopened"
  push:
    branches:
      - "master"
    paths-ignore:
      - "**.md"
      - ".github/**"
      - "!.github/workflows/e2e.yml"
      - "!.github/workflows/snapshot.yml"
      - "!.github/workflows/container.yml"
      - "!.github/workflows/build.yml"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  rust-peer:
    if: >
      github.event_name == 'push' ||
      (
        contains(github.event.pull_request.labels.*.name, 'e2e') &&
        !github.event.pull_request.head.repo.fork
      )
    uses: ./.github/workflows/build.yml
    with:
      ref: ${{ github.ref }}

  rust-peer-flavours:
    name: "rust-peer"
    needs: rust-peer
    strategy:
      matrix:
        flavour:
          - ipfs
          - rich

    uses: ./.github/workflows/container.yml
    with:
      image-name: "docker.fluence.dev/rust-peer"
      flavour: "${{ matrix.flavour }}"

  rust-peer-snapshot:
    name: "rust-peer"
    needs: rust-peer
    uses: ./.github/workflows/container.yml
    with:
      image-name: "docker.fluence.dev/rust-peer"
      flavour: "minimal"

  rust-peer-arm-snapshot:
    name: "rust-peer"
    needs: rust-peer
    uses: ./.github/workflows/container.yml
    with:
      image-name: "docker.fluence.dev/rust-peer"
      flavour: "minimal"
      arch: aarch64

  js-client:
    needs:
      - rust-peer-snapshot
    uses: fluencelabs/js-client/.github/workflows/tests.yml@master
    with:
      rust-peer-image: "${{ needs.rust-peer-snapshot.outputs.rust-peer-image }}"

  aqua-playground:
    needs:
      - rust-peer-snapshot
    uses: fluencelabs/aqua-playground/.github/workflows/tests.yml@master
    with:
      rust-peer-image: "${{ needs.rust-peer-snapshot.outputs.rust-peer-image }}"

  registry:
    needs:
      - rust-peer-snapshot
    uses: fluencelabs/registry/.github/workflows/tests.yml@main
    with:
      rust-peer-image: "${{ needs.rust-peer-snapshot.outputs.rust-peer-image }}"

  fluence-cli:
    needs:
      - rust-peer-snapshot
    uses: fluencelabs/fluence-cli/.github/workflows/tests.yml@main
    with:
      rust-peer-image: "${{ needs.rust-peer-snapshot.outputs.rust-peer-image }}"
