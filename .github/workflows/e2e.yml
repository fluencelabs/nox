name: "e2e"

on:
  pull_request:
    paths-ignore:
      - "!**.md"
  push:
    branches:
      - "master"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  rust-peer:
    uses: ./.github/workflows/snapshot.yml
    with:
      image-name: "docker.fluence.dev/rust-peer"
      ref: ${{ github.ref }}

  rust-peer-flavours:
    name: "rust-peer"

    needs: rust-peer

    strategy:
      matrix:
        flavour:
          - ipfs
          - rich

    uses: ./.github/workflows/container.yml
    with:
      image-name: "docker.fluence.dev/rust-peer"
      flavour: "${{ matrix.flavour }}"
      rust-peer-sha: "${{ needs.rust-peer.outputs.rust-peer-sha }}"

  js-client:
    needs:
      - rust-peer
    uses: fluencelabs/js-client/.github/workflows/tests.yml@master
    with:
      rust-peer-image: "${{ needs.rust-peer.outputs.rust-peer-image }}"

  aqua-playground:
    needs:
      - rust-peer
    uses: fluencelabs/aqua-playground/.github/workflows/tests.yml@master
    with:
      rust-peer-image: "${{ needs.rust-peer.outputs.rust-peer-image }}"

  registry:
    needs:
      - rust-peer
    uses: fluencelabs/registry/.github/workflows/tests.yml@main
    with:
      rust-peer-image: "${{ needs.rust-peer.outputs.rust-peer-image }}"

  fluence-cli:
    needs:
      - rust-peer
    uses: fluencelabs/fluence-cli/.github/workflows/tests.yml@main
    with:
      rust-peer-image: "${{ needs.rust-peer.outputs.rust-peer-image }}"

  status:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - fluence-cli
      - registry
      - aqua-playground

    steps:
      - uses: lwhiteley/dependent-jobs-result-check@v1
        id: status
        with:
          statuses: failure,cancelled,skipped
          dependencies: ${{ toJSON(needs) }}

      - name: Log output
        run: |
          echo "statuses:" "${{ steps.status.outputs.statuses }}"
          echo "jobs:" "${{ steps.status.outputs.jobs }}"
          echo "found any?:" "${{ steps.status.outputs.found }}"

      - name: Fail run
        if: fromJSON(steps.status.outputs.found)
        run: exit 1
