name: "release-please"

on:
  push:
    branches:
      - "master"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"

jobs:
  release-please:
    runs-on: ubuntu-latest

    outputs:
      releases-created: ${{ steps.release.outputs.releases_created }}
      rust-peer-release-created: ${{ steps.release.outputs['rust-peer--release_created'] }}
      rust-peer-tag-name: ${{ steps.release.outputs['rust-peer--tag_name'] }}

    steps:
      - name: Run release-please
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          token: ${{ secrets.FLUENCEBOT_RELEASE_PLEASE_PAT }}
          command: manifest
          config-file: .github/release-please/config.json
          manifest-file: .github/release-please/manifest.json

      - name: Show output from release-please
        if: steps.release.outputs.releases_created
        env:
          RELEASE_PLEASE_OUTPUT: ${{ toJSON(steps.release.outputs) }}
        run: echo "${RELEASE_PLEASE_OUTPUT}" | jq

  crates:
    if: needs.release-please.outputs.releases-created
    runs-on: builder
    needs:
      - release-please

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Import secrets
        uses: hashicorp/vault-action@v2.4.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/crates.io/fluencebot token | CARGO_REGISTRY_TOKEN

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Build particle-node
        run: cargo build --release -p particle-node

      - name: Install cargo-workspaces
        uses: baptiste0928/cargo-install@v1.3.0
        with:
          crate: cargo-workspaces

      - name: Publish to crates.io
        run: |
          cargo ws publish \
            --no-git-commit \
            --allow-dirty \
            --from-git \
            --skip-published \
            --yes

      - name: Rename particle-node to rust-peer
        working-directory: ./target/release/
        run: mv particle-node rust-peer

      - name: Calculate SHA256
        id: sha
        working-directory: ./target/release/
        run: |
          du -hs rust-peer
          sha256sum rust-peer | tee | rust-peer_SHA256_SUMS
          sha=($(sha256sum rust-peer))
          echo "sha256=${sha}" >> $GITHUB_OUTPUT

      - name: Upload rust-peer binary
        if: needs.release-please.outputs.rust-peer-release-created
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./target/release/rust-peer
            ./target/release/rust-peer_SHA256_SUMS
          tag_name: ${{ needs.release-please.outputs.rust-peer-tag-name }}

      - name: Update version in node-distro repo
        if: needs.release-please.outputs.rust-peer-release-created
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: update_fluence
          repo: fluencelabs/node-distro
          ref: main
          token: ${{ secrets.PERSONAL_TOKEN }}
          inputs: '{
            "version": "${{ needs.release-please.rust-peer-tag-name }}",
            "url": "https://github.com/fluencelabs/rust-peer/releases/download/${{ needs.release-please.rust-peer-tag-name }}/rust-peer",
            "sha256": "${{ steps.sha.outputs.sha256 }}"
          }'
