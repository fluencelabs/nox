name: Publish snapshot

on:
  workflow_call:
    inputs:
      ref:
        description: "GitHub ref to checkout to"
        type: string
        default: "master"
      image-name:
        description: "Docker image name"
        type: string
        default: "docker.fluence.dev/rust-peer"
      cargo-dependencies:
        description: "Cargo dependencies map"
        type: string
    outputs:
      rust-peer-image:
        description: "rust-peer snapshot image"
        value: ${{ jobs.container.outputs.rust-peer-image }}
      rust-peer-sha:
        description: "rust-peer sha256 hash"
        value: ${{ jobs.build.outputs.sha256 }}

jobs:
  build:
    name: "Build"
    runs-on: builder
    timeout-minutes: 60

    outputs:
      sha256: "${{ steps.sha.outputs.sha256 }}"

    steps:
      - name: Checkout rust-peer
        uses: actions/checkout@v3
        with:
          repository: fluencelabs/rust-peer
          ref: ${{ inputs.ref }}

      - name: Get PR labels
        id: labels
        uses: joerick/pr-labels-action@v1.0.7

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Set profile
        id: profile
        run: |
          if [[ -n "$GITHUB_PR_LABEL_PROFILING" ]]; then
            echo "profile=profiling" >> $GITHUB_OUTPUT
          else
            echo "profile=release" >> $GITHUB_OUTPUT
          fi

      - name: Set dependencies
        if: inputs.cargo-dependencies != ''
        uses: fluencelabs/github-actions/cargo-set-dependency@main
        with:
          dependencies: ${{ inputs.cargo-dependencies }}

      - name: Generate snapshot version
        id: version
        uses: fluencelabs/github-actions/generate-snapshot-id@main

      - name: Set version
        id: snapshot
        uses: fluencelabs/github-actions/cargo-publish-snapshot@main
        with:
          id: ${{ steps.version.outputs.id }}
          publish: false

      - name: Run cargo build
        run: cargo build --profile ${{ steps.profile.outputs.profile }} -p particle-node

      - name: Calculate SHA256
        id: sha
        working-directory: ./target/${{ steps.profile.outputs.profile }}
        run: |
          # Calculate sha256
          du -hs particle-node
          sha256sum particle-node
          sha=($(sha256sum particle-node))
          echo "sha256=${sha}" >> $GITHUB_OUTPUT

      - name: Upload rust-peer binary
        uses: actions/upload-artifact@v3
        with:
          name: rust-peer
          path: target/${{ steps.profile.outputs.profile }}/particle-node

  container:
    needs: build
    uses: ./.github/workflows/container.yml
    with:
      image-name: "docker.fluence.dev/rust-peer"
      flavour: "minimal"
      rust-peer-sha: "${{ needs.build.outputs.sha256 }}"
