name: "publish-branch"

on:
  push:
    branches-ignore:
      - master
      - main

concurrency:
  group: "publish-branch-${{ github.run_id }}"
  cancel-in-progress: true

jobs:
  publish:
    name: "Publish branch"
    runs-on: builder
    defaults:
      run:
        shell: bash

    steps:
### Setup
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set branch name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

#      - uses: actions/cache@v2
#        with:
#          path: |
#            ~/.cargo/registry
#            ~/.cargo/git
#          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: echo azaza > /tmp/folex_artifact

      - uses: actions/upload-artifact@v3
        with:
          name: folex-artifact
          path: /tmp/folex_artifact

      - name: Get binary URL
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const list = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });
            console.dir(list);
            throw list;

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

### Build
      - name: Set version in particle-node/Cargo.toml to ${{ env.BRANCH_NAME }}_${{ github.run_number }}
        run: |
          VERSION="0.0.${{ github.run_number }}"-"$(echo ${{ env.BRANCH_NAME }} | sed -e 's/[^a-zA-Z0-9-]/-/g')"
          sed -i 's/^version = ".*"/version = "'${VERSION}'"/' ./particle-node/Cargo.toml

      - name: Build particle-node
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release -p particle-node

### Update version in node-distro
      - name: Get binary URL
        id: package-url
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |  
            try {
                let assets = await github.repos.listReleaseAssets({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: "${{ steps.release.outputs.id }}",
                });
                console.dir(assets);
                let package = assets.data.find((a) => a.name === 'particle-node');
                let url = package.browser_download_url;
                console.log("URL: " + url);
                return url;
            } catch (e) {
              console.log("Err: " + e);
              throw e;
            }

      - name: Update version in node-distro
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: update_fluence
          repo: fluencelabs/node-distro
          ref: 'main'
          token: ${{ secrets.PERSONAL_TOKEN }}
          inputs: '{ 
            "container_tag": "${{ env.BRANCH_NAME }}",
            "version": "${{ env.BRANCH_NAME }}_${{ github.run_number }}",
            "url": "${{ steps.package-url.outputs.result }}",
            "sha256": "${{ env.SHA256 }}"
          }'


