var searchIndex = JSON.parse('{\
"air_interpreter_fs":{"doc":"","t":"FF","n":["air_interpreter_path","write_default_air_interpreter"],"q":[[0,"air_interpreter_fs"],[2,"std::path"],[3,"std::path"]],"d":["",""],"i":[0,0],"f":[[1,2],[1,[[4,[3]]]]],"c":[],"p":[[3,"Path",2],[3,"PathBuf",2],[15,"tuple"],[6,"Result",3]],"b":[]},\
"aquamarine":{"doc":"","t":"GIDEDNNNQNNDEQNDNDDNDNDNNNNDDDDNNLLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMMLLLLLLLLLLLLLLLLLLLLKLMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMMMKLLLLLLLLLMMLLLLLLLLLLLLLLMMMMMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMMMMMMMMM","n":["AVMRunner","AquaRuntime","AquamarineApi","AquamarineApiError","AquamarineBackend","AquamarineDied","AquamarineQueueFull","CleanupData","Config","CreateAnomalyDir","CreateDataStore","DataStoreConfig","DataStoreError","Error","ExecutionTimedOut","InterpretationStats","OneshotCancelled","ParticleDataStore","ParticleEffects","ParticleExpired","Plumber","ReadData","RemoteRoutingEffects","SerializeAnomaly","SignatureVerificationFailed","StoreData","VaultError","VmConfig","VmPoolConfig","WasmBackendConfig","WasmtimeWasmBackend","WorkerIsNotActive","WriteAnomaly","add_service","add_service","air_interpreter","air_size_limit","anomaly_data_store","anomaly_dir","async_wasm_stack","batch_cleanup_data","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call_requests","call_result_size_limit","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_runtime","create_worker_pool","current_peer_id","data_file","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug_info","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detect_anomaly","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","epoch_interruption_duration","execute","execution_timeout","failed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","hard_limit_enabled","increment_epoch","ingest","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize","interpretation_time","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_effects","into_particle_id","max_heap_size","max_wasm_stack","memory_delta","memory_stats","new","new","new","new","new","new","new","new","new_async","new_data","new_data_len","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","next_peers","next_peers","particle","particle_data_store","particle_size_limit","particles_anomaly_dir","particles_dir","particles_vault_dir","poll","poll","pool_size","read_data","references","references","references","references","references","references","references","references","references","references","references","references","references","references","remove_service","remove_service","remove_worker_pool","save_anomaly_data","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","source","start","store_data","success","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vault","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wasm_backtrace","err","particle_id","particle_id","particle_id","particle_id","particle_id","particle_id","particle_id","timeout","worker_id"],"q":[[0,"aquamarine"],[437,"aquamarine::AquamarineApiError"],[447,"alloc::string"],[448,"particle_execution::particle_function"],[449,"std::collections::hash::map"],[450,"core::option"],[451,"particle_execution::particle_function"],[452,"std::path"],[453,"libp2p_identity::peer_id"],[454,"alloc::vec"],[455,"avm_interface::particle_parameters"],[456,"avm_interface::call_service_result"],[457,"fluence_keypair::key_pair"],[458,"alloc::boxed"],[459,"core::pin"],[460,"core::convert"],[461,"core::marker"],[462,"core::task::wake"],[463,"core::result"],[464,"types::peer_scope"],[465,"core::fmt"],[466,"core::fmt"],[467,"avm_interface::raw_outcome"],[468,"particle_protocol::particle"],[469,"core::fmt"],[470,"system_interface::fs::fd_flags"],[471,"std::io::error"],[472,"types::peer_scope"],[473,"alloc::sync"],[474,"alloc::rc"],[475,"avm_server::runner"],[476,"tokio::sync::mpsc::bounded"],[477,"peer_metrics::particle_executor"],[478,"peer_metrics::vm_pool"],[479,"health"],[480,"workers::workers"],[481,"workers::key_storage"],[482,"workers::scope"],[483,"workers::workers"],[484,"marine_wasmtime_backend"],[485,"marine_wasm_backend_traits::errors"],[486,"system_interface::fs::fd_flags"],[487,"core::task::wake"],[488,"libipld_core::raw"],[489,"anyhow"],[490,"std::io"],[491,"cid::cid"],[492,"core::iter::traits::collect"],[493,"core::error"],[494,"tokio::runtime::task::join"],[495,"core::any"]],"d":["","","","","","","","","","","","","","","","Performance stats about particle’s interpretation","","","Effects produced by particle execution. Currently the only …","","","","","","","","","","","","","","","","","Path to AIR interpreter .wasm file (aquamarine.wasm)","Maximum AIR script size in bytes.","","Returns $ANOMALY_DATA_STORE/$particle_id/$timestamp","Configures the size of the stacks used for asynchronous …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Instruction to execute host calls","Maximum call result size in bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures whether DWARF debug information will be emitted …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enables the epoch interruption mechanism.","Send particle to the interpreters pool","Timeout of a particle execution","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","A knob to enable/disable hard limits behavior in AquaVM.","","Receives and ingests incoming particle: creates a new …","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum heap size in bytes available for the interpreter.","Configures the maximum amount of stack space available for …","","Return current size of memory. Use only for diagnostics …","","","","","","","","","","New particle data","","","","","","","","","","","","","","","","Instruction to send particle to these peers","","","","Maximum particle size in bytes.","Dir to store particles data of AquaVM performance anomalies","Dir for the interpreter to persist particle data to merge …","Dir to store directories shared between services in the …","","","Number of VMs to create","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures whether the errors from the VM should collect …","","","","","","","","","",""],"i":[0,0,0,0,0,44,44,45,7,45,45,0,0,7,44,0,44,0,0,44,0,45,0,45,44,45,45,0,0,0,0,44,45,1,9,26,26,11,11,29,11,63,1,25,9,26,27,28,44,29,11,45,30,31,32,63,1,25,9,26,27,28,44,29,11,45,30,31,32,7,30,26,25,9,26,27,28,29,11,30,31,32,25,9,26,27,28,29,11,30,31,32,7,1,26,11,63,1,25,9,26,27,28,44,29,11,45,30,31,32,29,29,63,1,25,9,26,27,28,44,29,11,45,30,31,32,63,1,25,9,26,27,28,44,29,11,45,30,31,32,11,63,1,25,9,26,27,28,44,29,11,45,30,31,32,30,29,9,27,31,26,27,28,44,44,29,11,45,45,30,31,32,63,1,25,9,26,27,28,44,29,11,45,45,30,31,32,63,1,25,9,26,27,28,44,29,11,45,30,31,32,26,25,1,63,1,25,9,26,27,28,44,29,11,45,30,31,32,11,31,63,1,25,9,26,27,28,44,29,11,45,30,31,32,63,1,25,9,26,27,28,44,29,11,45,30,31,32,25,9,26,27,28,44,29,11,45,30,31,32,63,1,25,9,26,27,28,44,29,11,45,30,31,32,7,44,26,29,31,7,63,1,25,9,26,27,28,11,25,30,31,63,1,25,9,26,27,28,44,29,11,45,30,31,32,30,32,32,11,26,28,28,28,63,1,27,11,63,1,25,9,26,27,28,44,29,11,45,30,31,32,1,9,1,11,63,1,25,9,26,27,28,44,29,11,45,30,31,32,45,63,11,31,25,9,26,27,28,29,11,30,31,32,44,45,63,1,25,9,26,27,28,44,29,11,45,30,31,32,63,1,25,9,26,27,28,44,29,11,45,30,31,32,63,1,25,9,26,27,28,44,29,11,45,30,31,32,63,1,25,9,26,27,28,44,29,11,45,30,31,32,11,63,1,25,9,26,27,28,44,29,11,45,30,31,32,29,80,81,82,83,84,85,80,86,84,86],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1,-2]],2,[4,[2,3]],[5,[3]]],6,7,8],[[9,2,[4,[2,3]]],[[0,[10]]]],0,0,0,[[11,12,12,[14,[13]]],15],0,[[11,[17,[[6,[2,16,[17,[13]],2]]]]],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,-3,-4,18,19,20],[[22,[[21,[10]]]]],[],[[23,[2]],24],[[23,[[17,[13]]]],24],[[23,[[17,[13]]]],24]],0,0,[25,25],[9,9],[26,26],[27,27],[28,28],[29,29],[11,11],[30,30],[31,31],[32,32],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[25,33],[[34,[-1]]],[]],[[[1,[-1,-2]],35,36],6,7,8],0,[[11,12,12,[14,[13]]],15],[37,[[34,[6,38]]]],[37,[[34,[6,38]]]],[37,[[34,[6,38]]]],[37,[[34,[6,38]]]],[37,[[34,[6,38]]]],[37,[[34,[6,38]]]],[37,[[34,[6,38]]]],[37,[[34,[6,38]]]],[37,[[34,[6,38]]]],[37,[[34,[6,38]]]],[37,[[34,[6,38]]]],[37,[[34,[6,38]]]],[37,[[34,[6,38]]]],[37,[[34,[6,38]]]],0,[[],29],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[[11,39,36,40],41],[36,6],[36,6],[36,6],[36,6],[36,6],[36,6],[36,6],[36,6],[36,6],[36,6],[36,6],[36,6],[36,6],[36,6],[[],30],0,[[9,42,[5,[3]]],[[0,[10]]]],0,[[],31],[[26,37],43],[[27,37],43],[[28,37],43],[[44,37],43],[[44,37],43],[[29,37],[[34,[6,38]]]],[[11,37],43],[[45,37],43],[[45,37],43],[[30,37],43],[[31,37],43],[[32,37],43],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[46,45],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[34,[47,48]]],[]],[-1,[[34,[47,48]]],[]],[-1,[[34,[47,48]]],[]],[-1,[[34,[47,48]]],[]],[-1,[[34,[47,48]]],[]],[-1,[[34,[47,48]]],[]],[-1,[[34,[47,48]]],[]],[-1,[[34,[47,48]]],[]],[-1,[[34,[47,48]]],[]],[-1,[[34,[47,48]]],[]],[-1,[[34,[47,48]]],[]],[-1,[[34,[47,48]]],[]],[-1,[[34,[47,48]]],[]],[-1,[[34,[47,48]]],[]],0,[25,6],[[[1,[-1,-2]],42,[5,[3]],49],6,7,8],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[11,[[34,[6,45]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1]]],[[21,[50]]],[]],[[[21,[-1]]],[[21,[50]]],[]],[[[21,[-1]]],[[21,[50]]],[]],[[[21,[-1]]],[[21,[50]]],[]],[[[21,[-1]]],[[21,[50]]],[]],[[[21,[-1]]],[[21,[50]]],[]],[[[21,[-1]]],[[21,[50]]],[]],[[[21,[-1]]],[[21,[50]]],[]],[[[21,[-1]]],[[21,[50]]],[]],[[[21,[-1]]],[[21,[50]]],[]],[[[21,[-1]]],[[21,[50]]],[]],[[[21,[-1]]],[[21,[50]]],[]],[[[21,[-1]]],[[21,[50]]],[]],[[[21,[-1]]],[[21,[50]]],[]],[[[51,[-1]]],[[51,[50]]],[]],[[[51,[-1]]],[[51,[50]]],[]],[[[51,[-1]]],[[51,[50]]],[]],[[[51,[-1]]],[[51,[50]]],[]],[[[51,[-1]]],[[51,[50]]],[]],[[[51,[-1]]],[[51,[50]]],[]],[[[51,[-1]]],[[51,[50]]],[]],[[[51,[-1]]],[[51,[50]]],[]],[[[51,[-1]]],[[51,[50]]],[]],[[[51,[-1]]],[[51,[50]]],[]],[[[51,[-1]]],[[51,[50]]],[]],[[[51,[-1]]],[[51,[50]]],[]],[[[52,[-1]]],[[52,[50]]],[]],[[[52,[-1]]],[[52,[50]]],[]],[[[52,[-1]]],[[52,[50]]],[]],[[[52,[-1]]],[[52,[50]]],[]],[[[52,[-1]]],[[52,[50]]],[]],[[[52,[-1]]],[[52,[50]]],[]],[[[52,[-1]]],[[52,[50]]],[]],[[[52,[-1]]],[[52,[50]]],[]],[[[52,[-1]]],[[52,[50]]],[]],[[[52,[-1]]],[[52,[50]]],[]],[[[52,[-1]]],[[52,[50]]],[]],[[[52,[-1]]],[[52,[50]]],[]],[[[52,[-1]]],[[52,[50]]],[]],[[[52,[-1]]],[[52,[50]]],[]],[[[34,[40]],2],30],[44,[[5,[2]]]],0,0,0,[-1,53,[]],[[27,29,28,-1,[54,[[34,[32,44]]]],[5,[55]],[5,[56]],[5,[57]],[51,[58]],[51,[59]],60,[62,[61]]],[[64,[[6,[[63,[-2,-1]],9]]]]],8,7],[[[0,[-1]],[51,[11]],-2,[5,[55]],[51,[58]],[51,[59]],60,25],[[1,[-1,-2]]],7,8],[65,[[34,[25,66]]]],[[[54,[0]],39],9],[[16,15,[5,[67]],[5,[67]],[5,[67]],[5,[67]],41],26],[[36,39],27],[15,28],[[15,15,15],11],[[],[[34,[25,66]]]],0,0,[[-1,47],[[34,[[68,[-2]],48]]],[],69],[[-1,47],[[34,[[68,[-2]],48]]],[],69],[[-1,47],[[34,[[68,[-2]],48]]],[],69],[[-1,47],[[34,[[68,[-2]],48]]],[],69],[[-1,47],[[34,[[68,[-2]],48]]],[],69],[[-1,47],[[34,[[68,[-2]],48]]],[],69],[[-1,47],[[34,[[68,[-2]],48]]],[],69],[[-1,47],[[34,[[68,[-2]],48]]],[],69],[[-1,47],[[34,[[68,[-2]],48]]],[],69],[[-1,47],[[34,[[68,[-2]],48]]],[],69],[[-1,47],[[34,[[68,[-2]],48]]],[],69],[[-1,47],[[34,[[68,[-2]],48]]],[],69],[[-1,47],[[34,[[68,[-2]],48]]],[],69],[[-1,47],[[34,[[68,[-2]],48]]],[],69],0,0,0,0,0,0,0,0,[[[63,[-1,-2]],70],[[71,[6]]],7,8],[[[1,[-1,-2]],70],[[71,[[34,[32,44]]]]],7,8],0,[[11,12,12,[14,[13]]],[[34,[[17,[13]],45]]]],[[72,-1,-2],[[34,[6,73]]],74,[[76,[75]]]],[[72,-1,-2],[[34,[6,73]]],74,[[76,[75]]]],[[72,-1,-2],[[34,[6,73]]],74,[[76,[75]]]],[[72,-1,-2],[[34,[6,73]]],74,[[76,[75]]]],[[72,-1,-2],[[34,[6,73]]],74,[[76,[75]]]],[[72,-1,-2],[[34,[6,73]]],74,[[76,[75]]]],[[72,-1,-2],[[34,[6,73]]],74,[[76,[75]]]],[[72,-1,-2],[[34,[6,73]]],74,[[76,[75]]]],[[72,-1,-2],[[34,[6,73]]],74,[[76,[75]]]],[[72,-1,-2],[[34,[6,73]]],74,[[76,[75]]]],[[72,-1,-2],[[34,[6,73]]],74,[[76,[75]]]],[[72,-1,-2],[[34,[6,73]]],74,[[76,[75]]]],[[72,-1,-2],[[34,[6,73]]],74,[[76,[75]]]],[[72,-1,-2],[[34,[6,73]]],74,[[76,[75]]]],[[[1,[-1,-2]],2],6,7,8],[[9,2],[[0,[10]]]],[[[1,[-1,-2]],35],6,7,8],[[11,12,[14,[13]],19,18,[14,[13]],40,39,36],[[34,[6,45]]]],[[-1,[68,[-2]]],[[34,[6,48]]],[],69],[[-1,[68,[-2]]],[[34,[6,48]]],[],69],[[-1,[68,[-2]]],[[34,[6,48]]],[],69],[[-1,[68,[-2]]],[[34,[6,48]]],[],69],[[-1,[68,[-2]]],[[34,[6,48]]],[],69],[[-1,[68,[-2]]],[[34,[6,48]]],[],69],[[-1,[68,[-2]]],[[34,[6,48]]],[],69],[[-1,[68,[-2]]],[[34,[6,48]]],[],69],[[-1,[68,[-2]]],[[34,[6,48]]],[],69],[[-1,[68,[-2]]],[[34,[6,48]]],[],69],[[-1,[68,[-2]]],[[34,[6,48]]],[],69],[[-1,[68,[-2]]],[[34,[6,48]]],[],69],[[-1,[68,[-2]]],[[34,[6,48]]],[],69],[[-1,[68,[-2]]],[[34,[6,48]]],[],69],[45,[[5,[77]]]],[[[63,[-1,-2]]],[[78,[6]]],7,8],[[11,[14,[13]],12,12,[14,[13]]],[[34,[6,45]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,79,[]],[-1,79,[]],[-1,79,[]],[-1,79,[]],[-1,79,[]],[-1,79,[]],[-1,79,[]],[-1,79,[]],[-1,79,[]],[-1,79,[]],[-1,79,[]],[-1,79,[]],[-1,79,[]],[-1,79,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Plumber",0],[3,"String",447],[4,"ServiceFunction",448],[3,"HashMap",449],[4,"Option",450],[15,"tuple"],[8,"AquaRuntime",0],[8,"ParticleFunctionStatic",448],[3,"AquamarineApi",0],[8,"Future",451],[3,"ParticleDataStore",0],[15,"str"],[15,"u8"],[15,"slice"],[3,"PathBuf",452],[3,"PeerId",453],[3,"Vec",454],[3,"ParticleParameters",455],[6,"CallResults",456],[4,"KeyPair",457],[3,"Box",458],[3,"Pin",459],[8,"Into",460],[8,"Send",461],[3,"WasmtimeWasmBackend",0],[3,"VmConfig",0],[3,"VmPoolConfig",0],[3,"DataStoreConfig",0],[3,"WasmBackendConfig",0],[3,"ParticleEffects",0],[3,"InterpretationStats",0],[3,"RemoteRoutingEffects",0],[3,"Waker",462],[4,"Result",463],[3,"WorkerId",464],[15,"usize"],[3,"Formatter",465],[3,"Error",465],[3,"Duration",466],[3,"RawAVMOutcome",467],[15,"bool"],[3,"ExtendedParticle",468],[6,"Result",465],[4,"AquamarineApiError",0],[4,"DataStoreError",0],[4,"VaultError",469],[3,"FdFlags",470],[3,"Error",471],[4,"PeerScope",464],[8,"Any",472],[3,"Arc",473],[3,"Rc",474],[3,"AVMMemoryStats",475],[3,"Sender",476],[3,"ParticleExecutorMetrics",477],[3,"VmPoolMetrics",478],[3,"HealthCheckRegistry",479],[3,"Workers",480],[3,"KeyStorage",481],[3,"PeerScopes",482],[4,"Event",480],[3,"Receiver",476],[3,"AquamarineBackend",0],[6,"Result",483],[3,"WasmtimeConfig",484],[4,"WasmBackendError",485],[15,"u64"],[3,"SetFdFlags",470],[8,"AsFilelike",486],[3,"Context",462],[4,"Poll",487],[3,"RawCodec",488],[3,"Error",489],[8,"Read",490],[3,"Cid",491],[8,"Extend",492],[8,"Error",493],[3,"JoinHandle",494],[3,"TypeId",472],[13,"SignatureVerificationFailed",437],[13,"ParticleExpired",437],[13,"OneshotCancelled",437],[13,"AquamarineDied",437],[13,"ExecutionTimedOut",437],[13,"AquamarineQueueFull",437],[13,"WorkerIsNotActive",437]],"b":[[163,"impl-Display-for-AquamarineApiError"],[164,"impl-Debug-for-AquamarineApiError"],[167,"impl-Display-for-DataStoreError"],[168,"impl-Debug-for-DataStoreError"]]},\
"async_unlock":{"doc":"This crate describes functions to work with async_std’s …","t":"FF","n":["unlock","unlock_f"],"q":[[0,"async_unlock"],[2,"tokio::sync::mutex"],[3,"core::ops::function"]],"d":["Performs computation on a value inside Mutex, unlocking …","Performs async computation on a value inside Mutex This …"],"i":[0,0],"f":[[[[1,[-1]],-2],-3,[],2,[]],[[[1,[-1]],-2],-3,[],2,[]]],"c":[],"p":[[3,"Mutex",2],[8,"FnOnce",3]],"b":[]},\
"chain_connector":{"doc":"","t":"NNDEAIDENAANNNNNNDNNNAGRNNNDNNNNNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLKLKLKLLLLLLLLLKLLLKLKLMLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMEDNESSDNMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMNDDNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMMESMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDLLLLLLLLLLLLLLLLLNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDNDDNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDENNNSNEDMMMLLLLLLLLNDDNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDNDDLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDESMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDNDDLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLL","n":["Active","AddressParseError","CCInitParams","CCStatus","Capacity","ChainConnector","CommitmentId","ConnectorError","ConvertCid","Core","Deal","DecodeConstHex","DecodeData","DecodeHex","EmptyData","Failed","FieldNotFound","HttpChainConnector","Inactive","InvalidU256","IpcInternalNetworkError","Offer","OnChainWorkerID","PEER_NOT_EXISTS","ParseChainDataFailed","ParseChainDataFailedAlloy","ParseError","PendingUnit","Removed","ResponseParseError","RpcCallError","RpcChainData","RpcError","SubnetResolveResult","WaitDelegation","WaitStart","as_","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","compare","current_epoch","current_timestamp","debug","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","detokenize","difficulty","drop","drop","drop","drop","drop","drop","drop","encode_topic","encode_topic_preimage","epoch_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","exit_deal","exit_deal","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_app_cid","get_cc_init_params","get_cc_init_params","get_commitment_status","get_commitment_status","get_compute_units","get_compute_units","get_current_commitment_id","get_current_commitment_id","get_deal_statuses","get_deal_statuses","get_deal_workers","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_global_nonce","get_global_nonce","get_hash","get_hash","get_tx_receipts","get_tx_receipts","get_tx_statuses","get_tx_statuses","global_nonce","hash","hash","id","init","init","init","init","init","init","init","init_timestamp","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_commitment_not_active","is_too_many_proofs","max_proofs_per_epoch","min_proofs_per_epoch","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","partial_cmp","references","references","references","references","references","references","references","register_worker","send_tx","serialize","serialize","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","source","start_epoch","stv_abi_encode_packed_to","stv_eip712_data_word","stv_to_tokens","submit_proofs","submit_proofs","success","to_owned","to_owned","to_owned","to_string","to_string","topic_preimage_length","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_check","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","valid_token","vzip","vzip","vzip","vzip","vzip","vzip","vzip","workers","CapacityCalls","CapacityCommitmentIsNotActive","CapacityCommitmentIsNotActive","CapacityErrors","SELECTORS","SELECTORS","TooManyProofs","TooManyProofs","_0","_0","abi_decode_raw","abi_decode_raw","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_encode_raw","abi_encode_raw","abi_encoded_size","abi_encoded_size","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commitmentId","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","getGlobalNonce","getGlobalNonceCall","getGlobalNonceReturn","getStatus","getStatusCall","getStatusReturn","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","localUnitNonce","localUnitNonces","new","new","new","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","references","references","references","references","references","references","references","references","references","references","references","references","resultHash","resultHashes","selector","selector","selector_at","selector_at","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","status","submitProof","submitProofCall","submitProofReturn","submitProofs","submitProofsCall","submitProofsReturn","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tokenize","tokenize","tokenize","tokenize","tokenize","tokenize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unitId","unitIds","valid_selector","valid_selector","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","code","data","message","CoreCalls","SELECTORS","_0","_0","_0","_0","_0","_0","_0","_0","abi_decode_raw","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_encode_raw","abi_encoded_size","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacityCall","capacityReturn","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","currentEpoch","currentEpochCall","currentEpochReturn","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difficulty","difficultyCall","difficultyReturn","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epochDuration","epochDurationCall","epochDurationReturn","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initTimestamp","initTimestampCall","initTimestampReturn","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","market","marketCall","marketReturn","maxProofsPerEpoch","maxProofsPerEpochCall","maxProofsPerEpochReturn","minProofsPerEpoch","minProofsPerEpochCall","minProofsPerEpochReturn","new","new","new","new","new","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","references","references","references","references","references","references","references","references","references","references","references","references","references","references","references","references","references","selector","selector_at","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tokenize","tokenize","tokenize","tokenize","tokenize","tokenize","tokenize","tokenize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","valid_selector","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ACTIVE","CIDV1","DealCalls","ENDED","INSUFFICIENT_FUNDS","NOT_ENOUGH_WORKERS","SELECTORS","SMALL_BALANCE","Status","Worker","_0","_0","_0","abi_decode_raw","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_encode_raw","abi_encoded_size","activateWorker","activateWorkerCall","activateWorkerReturn","appCID","appCIDCall","appCIDReturn","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","computeUnitIds","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","detokenize","detokenize","detokenize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eip712_components","eip712_components","eip712_encode_data","eip712_encode_data","eip712_encode_type","eip712_encode_type","eip712_root_type","eip712_root_type","encode_topic","encode_topic","encode_topic","encode_topic_preimage","encode_topic_preimage","encode_topic_preimage","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hex","from_hex","getStatus","getStatusCall","getStatusReturn","getWorkers","getWorkersCall","getWorkersReturn","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","joinedEpoch","new","new","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","offchainId","offchainId","onchainId","onchainId","onchainId","peerId","prefixes","provider","references","references","references","references","references","references","references","references","references","references","references","references","references","references","removeWorker","removeWorkerCall","removeWorkerReturn","selector","selector_at","serialize","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","stv_abi_encode_packed_to","stv_abi_encode_packed_to","stv_abi_encode_packed_to","stv_abi_encoded_size","stv_abi_encoded_size","stv_eip712_data_word","stv_eip712_data_word","stv_eip712_data_word","stv_to_tokens","stv_to_tokens","stv_to_tokens","to_ipld","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tokenize","tokenize","tokenize","tokenize","tokenize","topic_preimage_length","topic_preimage_length","topic_preimage_length","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_check","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","valid_selector","valid_token","valid_token","valid_token","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ComputePeer","ComputeUnit","OfferCalls","SELECTORS","_0","_0","abi_decode_raw","abi_decode_returns","abi_decode_returns","abi_encode_raw","abi_encoded_size","as_","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commitmentId","deal","debug","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detokenize","detokenize","drop","drop","drop","drop","drop","drop","drop","eip712_components","eip712_components","eip712_encode_data","eip712_encode_data","eip712_encode_type","eip712_encode_type","eip712_root_type","eip712_root_type","encode_topic","encode_topic","encode_topic_preimage","encode_topic_preimage","fmt","from","from","from","from","from","from","from","getComputePeer","getComputePeerCall","getComputePeerReturn","getComputeUnits","getComputeUnitsCall","getComputeUnitsReturn","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","offerId","onchainWorkerId","owner","peerId","peerId","references","references","references","references","references","references","references","selector","selector_at","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","startEpoch","stv_abi_encode_packed_to","stv_abi_encode_packed_to","stv_abi_encoded_size","stv_abi_encoded_size","stv_eip712_data_word","stv_eip712_data_word","stv_to_tokens","stv_to_tokens","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tokenize","tokenize","topic_preimage_length","topic_preimage_length","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unitCount","valid_selector","valid_token","valid_token","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"chain_connector"],[297,"chain_connector::Capacity"],[649,"chain_connector::ConnectorError"],[652,"chain_connector::Core"],[1138,"chain_connector::Deal"],[1593,"chain_connector::Offer"],[1826,"bnum::cast"],[1827,"core::cmp"],[1828,"core::fmt"],[1829,"core::fmt"],[1830,"serde::de"],[1831,"alloy_sol_types::abi::token"],[1832,"alloc::vec"],[1833,"types::deal_id"],[1834,"core::future::future"],[1835,"alloc::boxed"],[1836,"core::pin"],[1837,"core::fmt"],[1838,"hex::error"],[1839,"const_hex::error"],[1840,"alloc::string"],[1841,"jsonrpsee_types::error"],[1842,"serde_json::error"],[1843,"chain_data::error"],[1844,"cid::error"],[1845,"jsonrpsee_core::client::error"],[1846,"clarity::error"],[1847,"alloc::string"],[1848,"system_interface::fs::fd_flags"],[1849,"std::io::error"],[1850,"core::hash"],[1851,"core::marker"],[1852,"core::hash"],[1853,"alloc::sync"],[1854,"alloc::rc"],[1855,"server_config::node_config"],[1856,"libp2p_identity::peer_id"],[1857,"particle_builtins::builtins"],[1858,"std::collections::hash::map"],[1859,"eyre"],[1860,"core::option"],[1861,"ccp_shared::types::cuid"],[1862,"ruint::aliases"],[1863,"system_interface::fs::fd_flags"],[1864,"libipld_core::raw"],[1865,"anyhow"],[1866,"std::io"],[1867,"cid::cid"],[1868,"core::iter::traits::collect"],[1869,"types::peer_scope"],[1870,"serde::ser"],[1871,"core::error"],[1872,"alloy_sol_types"],[1873,"ccp_shared::types::local_nonce"],[1874,"ccp_shared::types::result_hash"],[1875,"alloy_sol_types::errors"]],"d":["","","","","Module containing a contract’s types and functions.","","","","","Module containing a contract’s types and functions.","Module containing a contract’s types and functions.","","","","","","","","","","","Module containing a contract’s types and functions.","","“Peer doesn’t exists” in Market.sol","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Container for all the <code>Capacity</code> function calls.","@dev Capacity commitment is not active Custom error with …","","Container for all the <code>Capacity</code> custom errors.","All the selectors of this enum.","All the selectors of this enum.","@dev Throws if peer sent too many proofs for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Function with signature <code>getGlobalNonce()</code> and selector …","Container type for the return parameters of the …","","@dev Returns the commitment status @param commitmentId …","@dev Returns the commitment status @param commitmentId …","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","@dev Submits a proof for the commitment @param unitId …","@dev Submits a proof for the commitment @param unitId …","","@dev Submits proofs for the commitment @param unitIds …","@dev Submits proofs for the commitment @param unitIds …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Code","Optional data","Message","Container for all the <code>Core</code> function calls.","All the selectors of this enum.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Function with signature <code>capacity()</code> and selector <code>0x5cfc1a51</code>.","Container type for the return parameters of the <code>capacity()</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","@dev Returns current epoch @return current epoch number …","@dev Returns current epoch @return current epoch number …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","@dev Returns the difficulty for CCP Function with …","@dev Returns the difficulty for CCP Container type for the …","","","","","","","","","","","","","","","","","","","@dev Returns epoch duration @return epochDuration in …","@dev Returns epoch duration @return epochDuration in …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","@dev Returns epoch init timestamp @return initTimestamp in …","@dev Returns epoch init timestamp @return initTimestamp in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Function with signature <code>market()</code> and selector <code>0x80f55605</code>.","Container type for the return parameters of the <code>market()</code> …","","@dev Returns the max randomX proofs per epoch Function …","@dev Returns the max randomX proofs per epoch Container …","","@dev Returns the min required randomX proofs per epoch for …","@dev Returns the min required randomX proofs per epoch for …ontainer for all the <code>Deal</code> function calls.","","","","All the selectors of this enum.","","","","","","","","","","","","","","","","@dev Set offchain worker ID for a corresponding onchain …","@dev Set offchain worker ID for a corresponding onchain …","","@dev Returns the app CID Function with signature <code>appCID()</code> …","@dev Returns the app CID Container type for the return …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","@dev Returns the status of the deal Function with …","@dev Returns the status of the deal Container type for the …","","@dev Returns workers Function with signature <code>getWorkers()</code> …","@dev Returns workers Container type for the return …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","@dev Removes worker from the deal Function with signature …","@dev Removes worker from the deal Container type for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Container for all the <code>Offer</code> function calls.","All the selectors of this enum.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","@dev Returns the compute peer info Function with signature …","@dev Returns the compute peer info Container type for the …","","@dev Returns the compute units info of a peer Function …","@dev Returns the compute units info of a peer Container …","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[2,23,0,0,0,0,0,0,23,0,0,23,23,23,23,2,23,0,2,23,23,0,0,0,23,23,23,0,2,23,23,23,23,0,2,2,22,124,23,2,3,6,4,22,124,23,2,3,6,4,22,124,23,2,3,6,4,2,3,4,2,3,4,6,6,124,124,22,124,23,2,3,6,4,22,124,23,2,3,6,4,22,124,23,2,3,6,4,3,4,2,124,22,124,23,2,3,6,4,2,2,124,2,3,6,4,3,3,3,3,3,6,6,6,6,6,4,125,22,23,23,2,3,3,6,4,22,124,23,23,23,23,23,23,23,23,23,23,23,2,3,6,6,4,22,125,22,125,22,125,22,125,22,125,22,22,22,124,23,2,3,6,4,125,22,3,6,125,22,125,22,124,3,6,6,22,124,23,2,3,6,4,124,22,124,23,2,3,6,4,22,124,23,2,3,6,4,22,124,23,2,3,6,4,22,124,23,2,3,6,4,0,0,124,124,22,3,6,22,124,23,2,3,6,4,6,22,124,23,2,3,6,4,22,22,3,4,22,124,23,2,3,6,4,23,6,2,2,2,125,22,4,2,3,4,23,3,2,22,124,23,2,2,3,6,4,22,124,23,2,3,6,4,2,22,124,23,2,3,6,4,22,124,23,2,3,6,4,2,22,124,23,2,3,6,4,4,0,0,76,0,75,76,0,76,80,82,75,76,79,81,83,85,75,76,75,76,75,76,77,78,79,80,81,82,83,84,85,86,75,76,77,78,79,80,81,82,83,84,85,86,75,76,77,78,79,80,81,82,83,84,85,86,77,78,79,80,81,82,83,84,85,86,77,78,79,80,81,82,83,84,85,86,81,75,76,77,78,79,80,81,82,83,84,85,86,75,76,77,78,79,80,81,82,83,84,85,86,75,76,77,78,79,80,81,82,83,84,85,86,75,76,77,78,79,80,81,82,83,84,85,86,75,76,77,78,79,80,81,82,83,84,85,86,75,0,0,75,0,0,75,76,77,78,79,80,81,82,83,84,85,86,75,76,77,78,79,80,81,82,83,84,85,86,75,76,77,78,79,80,81,82,83,84,85,86,75,76,77,78,79,80,81,82,83,84,85,86,75,76,77,78,79,80,81,82,83,84,85,86,75,76,77,78,79,80,81,82,83,84,85,86,83,85,77,78,79,81,83,85,75,76,77,78,79,80,81,82,83,84,85,86,75,76,77,78,79,80,81,82,83,84,85,86,83,85,75,76,75,76,75,76,77,78,79,80,81,82,83,84,85,86,78,75,0,0,75,0,0,77,78,79,80,81,82,83,84,85,86,77,78,79,81,83,85,75,76,77,78,79,80,81,82,83,84,85,86,75,76,77,78,79,80,81,82,83,84,85,86,75,76,77,78,79,80,81,82,83,84,85,86,75,76,77,78,79,80,81,82,83,84,85,86,83,85,75,76,75,76,77,78,79,80,81,82,83,84,85,86,126,126,126,0,87,89,91,93,95,97,99,101,103,87,88,90,92,94,96,98,100,102,87,87,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,0,0,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,0,0,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,0,0,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,0,0,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,0,0,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,0,0,87,0,0,87,0,0,88,90,92,94,96,98,100,102,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,87,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,88,90,92,94,96,98,100,102,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,87,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,116,0,0,116,116,116,104,116,0,0,107,109,115,104,106,108,110,112,114,104,104,104,0,0,104,0,0,104,105,38,106,107,108,109,110,111,112,113,114,115,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,105,38,106,107,108,109,110,111,112,113,114,115,116,105,38,106,107,108,109,110,111,112,113,114,115,116,38,104,105,38,106,107,108,109,110,111,112,113,114,115,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,116,105,38,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,105,38,105,38,105,38,105,38,105,38,116,105,38,116,116,116,116,116,116,116,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,105,116,104,0,0,104,0,0,104,105,38,106,107,108,109,110,111,112,113,114,115,116,105,104,105,38,106,107,108,109,110,111,112,113,114,115,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,38,106,108,110,112,114,104,105,38,106,107,108,109,110,111,112,113,114,115,116,38,110,38,110,112,38,105,38,104,105,38,106,107,108,109,110,111,112,113,114,115,116,104,0,0,104,104,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,105,38,116,105,38,105,38,116,105,38,116,105,105,38,106,107,108,109,110,111,112,113,114,115,116,106,108,110,112,114,105,38,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,104,105,38,116,104,105,38,106,107,108,109,110,111,112,113,114,115,116,0,0,0,118,121,123,118,120,122,118,118,118,119,35,120,121,122,123,118,119,35,120,121,122,123,118,119,35,120,121,122,123,119,35,120,121,122,123,119,35,120,121,122,123,119,35,118,119,35,120,121,122,123,118,119,35,120,121,122,123,118,119,35,120,121,122,123,119,35,118,119,35,120,121,122,123,119,35,119,35,119,35,119,35,119,35,119,35,35,118,119,35,120,121,122,123,118,0,0,118,0,0,118,119,35,120,121,122,123,35,118,119,35,120,121,122,123,118,119,35,120,121,122,123,118,119,35,120,121,122,123,118,119,35,120,121,122,123,118,119,35,120,121,122,123,120,122,118,119,35,120,121,122,123,119,35,119,120,122,118,119,35,120,121,122,123,118,118,118,119,35,120,121,122,123,35,119,35,119,35,119,35,119,35,119,35,120,121,122,123,120,122,119,35,118,119,35,120,121,122,123,118,119,35,120,121,122,123,118,119,35,120,121,122,123,118,119,35,120,121,122,123,119,118,119,35,118,119,35,120,121,122,123],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[3,3],[4,4],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[6,6],7],[[-1,-2],7,[],[]],0,0,[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[-1,[[10,[3]]],12],[-1,[[10,[4]]],12],[[]],0,[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[[],13],[[[15,[14]]],5],0,[[2,2],16],[[3,3],16],[[6,6],16],[[4,4],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],0,[[-1,17,18],[[21,[[20,[19]]]]],[]],[[22,17,18],[[21,[[20,[19]]]]]],[[23,8],24],[[23,8],24],[[2,8],24],[[3,8],24],[[3,8],24],[[6,8],24],[[4,8],24],[-1,-1,[]],[-1,-1,[]],[25,23],[26,23],[27,23],[-1,-1,[]],[28,23],[29,23],[30,23],[31,23],[32,23],[33,23],[34,23],[-1,-1,[]],[-1,-1,[]],[35,6],[-1,-1,[]],[-1,-1,[]],[[22,-1],[[10,[[15,[36]],23]]],37],[-1,[[21,[[20,[19]]]]],[]],[22,[[21,[[20,[19]]]]]],[[-1,3],[[21,[[20,[19]]]]],[]],[[22,3],[[21,[[20,[19]]]]]],[-1,[[21,[[20,[19]]]]],[]],[22,[[21,[[20,[19]]]]]],[-1,[[21,[[20,[19]]]]],[]],[22,[[21,[[20,[19]]]]]],[[-1,[15,[17]]],[[21,[[20,[19]]]]],[]],[[22,[15,[17]]],[[21,[[20,[19]]]]]],[[22,17],[[10,[[15,[38]],23]]]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[21,[[20,[19]]]]],[]],[22,[[21,[[20,[19]]]]]],[[-1,-2],41,[42,43],44],[[-1,-2],41,[42,43],44],[[-1,[15,[36]]],[[21,[[20,[19]]]]],[]],[[22,[15,[36]]],[[21,[[20,[19]]]]]],[[-1,[15,[36]]],[[21,[[20,[19]]]]],[]],[[22,[15,[36]]],[[21,[[20,[19]]]]]],0,[[3,-1],5,45],[[6,-1],5,45],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[49,16],[49,16],0,0,[[50,51],[[54,[[5,[[47,[22]],[53,[36,52]]]]]]]],[[[55,[14]]],[[56,[3]]]],[[57,58],6],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[6,6],[[56,[7]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[22,17,66,[15,[14]]],[[10,[36,23]]]],[[22,[15,[14]],49],[[10,[36,23]]]],[[3,-1],10,67],[[4,-1],10,67],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[23,[[56,[68]]]],0,[[2,[15,[14]]],5],[2,69],[2],[[-1,[15,[57]],[15,[70]],[15,[71]]],[[21,[[20,[19]]]]],[]],[[22,[15,[57]],[15,[70]],[15,[71]]],[[21,[[20,[19]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,36,[]],[-1,36,[]],[[],11],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[14,[[72,[2]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],[[72,[5]]]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[[55,[14]],[74,[14]],16],[[72,[75]]]],[[[55,[14]],[74,[14]],16],[[72,[76]]]],[[[74,[14]],16],72],[[[74,[14]],16],72],[[[74,[14]],16],72],[[[74,[14]],16],72],[[75,[15,[14]]],5],[[76,[15,[14]]],5],[75,11],[76,11],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],0,0,[[],77],[[],78],[[],79],[[],81],[[],83],[[],85],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],0,0,[75,[[55,[14]]]],[76,[[55,[14]]]],[11,[[56,[[55,[14]]]]]],[11,[[56,[[55,[14]]]]]],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[77],[78],[79],[81],[83],[85],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],0,0,[[[55,[14]]],16],[[[55,[14]]],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[55,[14]],[74,[14]],16],[[72,[87]]]],[[[74,[14]],16],72],[[[74,[14]],16],72],[[[74,[14]],16],72],[[[74,[14]],16],72],[[[74,[14]],16],72],[[[74,[14]],16],72],[[[74,[14]],16],72],[[[74,[14]],16],72],[[87,[15,[14]]],5],[87,11],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],0,0,0,[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],0,0,0,0,0,0,0,0,0,[[],88],[[],90],[[],92],[[],94],[[],96],[[],98],[[],100],[[],102],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[87,[[55,[14]]]],[11,[[56,[[55,[14]]]]]],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[88],[90],[92],[94],[96],[98],[100],[102],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[[[55,[14]]],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[55,[14]],[74,[14]],16],[[72,[104]]]],[[[74,[14]],16],72],[[[74,[14]],16],72],[[[74,[14]],16],72],[[[74,[14]],16],72],[[[74,[14]],16],72],[[104,[15,[14]]],5],[104,11],0,0,0,0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[105,105],[38,38],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[-1,[[10,[116]]],12],[[]],[[]],[[]],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[[],[[15,[[117,[49]]]]]],[[],[[15,[[117,[49]]]]]],[105,[[15,[14]]]],[38,[[15,[14]]]],[[],[[117,[49]]]],[[],[[117,[49]]]],[[],[[117,[49]]]],[[],[[117,[49]]]],[[],13],[[],13],[[],13],[[[15,[14]]],5],[[[15,[14]]],5],[[[15,[14]]],5],[[116,116],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[116,8],24],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[49,[[10,[105,23]]]],[49,[[10,[116,23]]]],0,0,0,0,0,0,[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],0,[[],106],[[],108],[[],110],[[],112],[[],114],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],0,0,0,0,0,0,0,0,[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],0,0,0,[104,[[55,[14]]]],[11,[[56,[[55,[14]]]]]],[[116,-1],10,67],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[105,[15,[14]]],5],[[38,[15,[14]]],5],[[116,[15,[14]]],5],[105,11],[38,11],[105,69],[38,69],[116,69],[105],[38],[116],[105,[[10,[36,23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[106],[108],[110],[112],[114],[[],11],[[],11],[[],11],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[14,[[72,[116]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],[[72,[5]]]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[[[55,[14]]],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[[55,[14]],[74,[14]],16],[[72,[118]]]],[[[74,[14]],16],72],[[[74,[14]],16],72],[[118,[15,[14]]],5],[118,11],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[119,119],[35,35],[120,120],[121,121],[122,122],[123,123],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[[]],[[]],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[11,5],[[],[[15,[[117,[49]]]]]],[[],[[15,[[117,[49]]]]]],[119,[[15,[14]]]],[35,[[15,[14]]]],[[],[[117,[49]]]],[[],[[117,[49]]]],[[],[[117,[49]]]],[[],[[117,[49]]]],[[],13],[[],13],[[[15,[14]]],5],[[[15,[14]]],5],[[35,8],24],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],[-1,[[10,[39,40]]],[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[20,[-1]]],[[20,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[47,[-1]]],[[47,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[[48,[-1]]],[[48,[46]]],[]],[[],120],[[],122],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],[[-1,39],[[10,[[59,[-2]],40]]],[],60],0,0,0,0,0,[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[10,[5,62]]],63,[[65,[64]]]],[118,[[55,[14]]]],[11,[[56,[[55,[14]]]]]],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],[[-1,[59,[-2]]],[[10,[5,40]]],[],60],0,[[119,[15,[14]]],5],[[35,[15,[14]]],5],[119,11],[35,11],[119,69],[35,69],[119],[35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[120],[122],[[],11],[[],11],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],0,[[[55,[14]]],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[8,"CastFrom",1826],[4,"CCStatus",0],[3,"CommitmentId",0],[3,"SubnetResolveResult",0],[15,"tuple"],[3,"PendingUnit",0],[4,"Ordering",1827],[3,"Formatter",1828],[3,"Error",1828],[4,"Result",1829],[15,"usize"],[8,"Deserializer",1830],[3,"WordToken",1831],[15,"u8"],[3,"Vec",1832],[15,"bool"],[3,"DealId",1833],[6,"OnChainWorkerID",0],[8,"Future",1834],[3,"Box",1835],[3,"Pin",1836],[3,"HttpChainConnector",0],[4,"ConnectorError",0],[6,"Result",1828],[4,"Error",1837],[4,"FromHexError",1838],[4,"FromHexError",1839],[3,"FromUtf8Error",1840],[6,"ErrorObjectOwned",1841],[3,"Error",1842],[4,"ChainDataError",1843],[4,"Error",1844],[4,"Error",1845],[4,"Error",1846],[3,"ComputeUnit",1593],[3,"String",1840],[8,"Iterator",1847],[3,"Worker",1138],[3,"FdFlags",1848],[3,"Error",1849],[15,"u64"],[8,"Hash",1850],[8,"Sized",1851],[8,"BuildHasher",1850],[8,"Hasher",1850],[8,"Any",1852],[3,"Arc",1853],[3,"Rc",1854],[15,"str"],[3,"ChainConfig",1855],[3,"PeerId",1856],[3,"CustomService",1857],[3,"HashMap",1858],[6,"Result",1859],[15,"array"],[4,"Option",1860],[3,"CUID",1861],[6,"U256",1862],[3,"SetFdFlags",1848],[8,"AsFilelike",1863],[3,"RawCodec",1864],[3,"Error",1865],[8,"Read",1866],[3,"Cid",1867],[8,"Extend",1868],[3,"WorkerId",1869],[8,"Serializer",1870],[8,"Error",1871],[6,"Word",1872],[3,"LocalNonce",1873],[3,"ResultHash",1874],[6,"Result",1837],[3,"TypeId",1852],[15,"slice"],[4,"CapacityCalls",297],[4,"CapacityErrors",297],[3,"TooManyProofs",297],[3,"CapacityCommitmentIsNotActive",297],[3,"getGlobalNonceCall",297],[3,"getGlobalNonceReturn",297],[3,"getStatusCall",297],[3,"getStatusReturn",297],[3,"submitProofCall",297],[3,"submitProofReturn",297],[3,"submitProofsCall",297],[3,"submitProofsReturn",297],[4,"CoreCalls",652],[3,"capacityCall",652],[3,"capacityReturn",652],[3,"marketCall",652],[3,"marketReturn",652],[3,"currentEpochCall",652],[3,"currentEpochReturn",652],[3,"epochDurationCall",652],[3,"epochDurationReturn",652],[3,"initTimestampCall",652],[3,"initTimestampReturn",652],[3,"difficultyCall",652],[3,"difficultyReturn",652],[3,"minProofsPerEpochCall",652],[3,"minProofsPerEpochReturn",652],[3,"maxProofsPerEpochCall",652],[3,"maxProofsPerEpochReturn",652],[4,"DealCalls",1138],[3,"CIDV1",1138],[3,"getStatusCall",1138],[3,"getStatusReturn",1138],[3,"appCIDCall",1138],[3,"appCIDReturn",1138],[3,"activateWorkerCall",1138],[3,"activateWorkerReturn",1138],[3,"removeWorkerCall",1138],[3,"removeWorkerReturn",1138],[3,"getWorkersCall",1138],[3,"getWorkersReturn",1138],[4,"Status",1138],[4,"Cow",1875],[4,"OfferCalls",1593],[3,"ComputePeer",1593],[3,"getComputePeerCall",1593],[3,"getComputePeerReturn",1593],[3,"getComputeUnitsCall",1593],[3,"getComputeUnitsReturn",1593],[3,"CCInitParams",0],[8,"ChainConnector",0],[13,"RpcCallError",649]],"b":[[119,"impl-Debug-for-ConnectorError"],[120,"impl-Display-for-ConnectorError"],[122,"impl-Display-for-CommitmentId"],[123,"impl-Debug-for-CommitmentId"],[128,"impl-From%3CError%3E-for-ConnectorError"],[129,"impl-From%3CFromHexError%3E-for-ConnectorError"],[130,"impl-From%3CFromHexError%3E-for-ConnectorError"],[132,"impl-From%3CFromUtf8Error%3E-for-ConnectorError"],[133,"impl-From%3CErrorObject%3C\'static%3E%3E-for-ConnectorError"],[134,"impl-From%3CError%3E-for-ConnectorError"],[135,"impl-From%3CChainDataError%3E-for-ConnectorError"],[136,"impl-From%3CError%3E-for-ConnectorError"],[137,"impl-From%3CClientError%3E-for-ConnectorError"],[138,"impl-From%3CError%3E-for-ConnectorError"]]},\
"chain_data":{"doc":"","t":"DINEINNNNNNENNNNNNDENNNNNNMLLLLLLLLLLLLLLMLLLKLLLLLLLLLLLLLLLLLLLLLLLLLKFFMLKFFFFFFMLKLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMM","n":["BlockHeader","ChainData","ChainData","ChainDataError","ChainEvent","DecodeConstHex","DecodeHex","DecodeHex","Empty","EthError","EthError","EventField","Indexed","InvalidComputePeerId","InvalidComputePeerId","InvalidParsedToken","InvalidParsedToken","InvalidTokenSize","Log","LogParseError","MissingParsedToken","MissingParsedToken","MissingToken","MissingTopic","NoTokens","NotIndexed","block_number","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","deserialize","deserialize","eq","event_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_json","into","into","into","into","into","new","next","next_opt","number","param_type","parse","parse_chain_data","parse_log","parse_peer_id","peer_id_from_hex","peer_id_to_bytes","peer_id_to_hex","removed","serialize","signature","source","source","timestamp","to_owned","to_owned","to_string","to_string","topic","topic","topics","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","event_field","event_field","position","position"],"q":[[0,"chain_data"],[116,"chain_data::LogParseError"],[120,"core::result"],[121,"serde::de"],[122,"core::fmt"],[123,"core::fmt"],[124,"libp2p_identity::peer_id"],[125,"alloy_sol_types::errors"],[126,"const_hex::error"],[127,"hex::error"],[128,"serde_json::value"],[129,"eyre"],[130,"alloc::string"],[131,"core::iter::traits::iterator"],[132,"core::ops::function"],[133,"ethabi::param_type::param_type"],[134,"core::marker"],[135,"ethabi::token::token"],[136,"alloc::vec"],[137,"alloy_sol_types::types::event"],[138,"libp2p_identity::peer_id"],[139,"core::error"],[140,"core::option"],[141,"core::any"]],"d":["","","","","","","","","","","","Kind of the field in Chain Event","If field is indexed, it’s passed among topics","","","","","","","","","","","","","If field is not indexed, it’s passed in log.data","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Parse data from chain. Accepts data with and without “0x…","","","","This code works only for PeerId generated from ed25519 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,12,0,0,12,11,12,11,11,12,0,1,11,12,11,12,11,0,0,11,12,12,12,12,1,2,4,1,11,2,12,4,1,11,2,12,1,2,1,2,2,4,2,1,36,4,1,11,11,2,12,12,4,1,11,11,11,2,12,12,12,12,12,12,4,4,1,11,2,12,37,0,0,4,1,36,0,0,0,0,0,0,2,2,36,11,12,4,1,2,11,12,36,36,2,4,1,11,2,12,4,1,11,2,12,4,1,11,2,12,4,1,11,2,12,38,39,38,39],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,[-1,[[5,[4]]],6],[-1,[[5,[2]]],6],[[1,1],7],[[],8],[[4,9],10],[[1,9],10],[[11,9],10],[[11,9],10],[[2,9],10],[[12,9],10],[[12,9],10],[-1,-1,[]],[-1,-1,[]],[13,11],[14,11],[-1,-1,[]],[-1,-1,[]],[15,12],[-1,-1,[]],[11,12],[16,12],[17,12],[14,12],[18,[[19,[4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[20,-1],-2,[],[]],[[-1,8,-2],[[5,[-3,11]]],21,22,[]],[[-1,8,-2],[[5,[-3,11]]],21,22,[]],0,[1,23],[-1,[[5,[-2,11]]],21,24],[[8,[25,[23]]],[[5,[[27,[26]],11]]]],[2,[[5,[-1,12]]],28],[[[25,[29]]],[[5,[30,14]]]],[8,[[19,[30]]]],[30,[[31,[29]]]],[30,20],0,[[2,-1],5,32],[[],[[27,[1]]]],[11,[[34,[33]]]],[12,[[34,[33]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,20,[]],[[],20],[[],20],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0],"c":[],"p":[[4,"EventField",0],[3,"Log",0],[15,"tuple"],[3,"BlockHeader",0],[4,"Result",120],[8,"Deserializer",121],[15,"bool"],[15,"str"],[3,"Formatter",122],[6,"Result",122],[4,"ChainDataError",0],[4,"LogParseError",0],[4,"Error",123],[4,"ParseError",124],[4,"Error",125],[4,"FromHexError",126],[4,"FromHexError",127],[4,"Value",128],[6,"Result",129],[3,"String",130],[8,"Iterator",131],[8,"Fn",132],[4,"ParamType",133],[8,"Sized",134],[15,"slice"],[4,"Token",135],[3,"Vec",136],[8,"SolEvent",137],[15,"u8"],[3,"PeerId",124],[15,"array"],[8,"Serializer",138],[8,"Error",139],[4,"Option",140],[3,"TypeId",141],[8,"ChainData",0],[8,"ChainEvent",0],[13,"MissingToken",116],[13,"MissingTopic",116]],"b":[[48,"impl-Display-for-ChainDataError"],[49,"impl-Debug-for-ChainDataError"],[51,"impl-Display-for-LogParseError"],[52,"impl-Debug-for-LogParseError"],[55,"impl-From%3CError%3E-for-ChainDataError"],[56,"impl-From%3CParseError%3E-for-ChainDataError"],[59,"impl-From%3CError%3E-for-LogParseError"],[61,"impl-From%3CChainDataError%3E-for-LogParseError"],[62,"impl-From%3CFromHexError%3E-for-LogParseError"],[63,"impl-From%3CFromHexError%3E-for-LogParseError"],[64,"impl-From%3CParseError%3E-for-LogParseError"]]},\
"chain_listener":{"doc":"","t":"DDDDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLL","n":["CIDV1","ChainListener","CommitmentActivated","ComputeUnitsMatched","UnitActivated","UnitDeactivated","appCID","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","commitmentId","commitmentId","commitmentId","create_ws_client","cuIds","deal","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detokenize","drop","drop","drop","drop","drop","drop","eip712_components","eip712_encode_data","eip712_encode_type","eip712_root_type","encode_topic","encode_topic_preimage","encode_topics_raw","encode_topics_raw","encode_topics_raw","encode_topics_raw","endEpoch","fmt","fmt","fmt","from","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","hash","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","new","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","onchainWorkerId","peerId","peerId","prefixes","references","references","references","references","references","references","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","start","startEpoch","startEpoch","stv_abi_encode_packed_to","stv_abi_encoded_size","stv_eip712_data_word","stv_to_tokens","to_owned","to_owned","to_owned","to_owned","to_owned","tokenize_body","tokenize_body","tokenize_body","tokenize_body","topic_preimage_length","topics","topics","topics","topics","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","unitId","unitId","unitIds","valid_token","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"chain_listener"],[205,"bnum::cast"],[206,"server_config::node_config"],[207,"jsonrpsee_core::client::async_client"],[208,"jsonrpsee_core::client::error"],[209,"core::result"],[210,"core::fmt"],[211,"core::fmt"],[212,"alloc::vec"],[213,"alloy_sol_types::abi::token"],[214,"alloy_sol_types::errors"],[215,"core::fmt"],[216,"std::io::error"],[217,"alloc::boxed"],[218,"core::any"],[219,"alloc::sync"],[220,"alloc::rc"],[221,"server_config::node_config"],[222,"chain_connector::connector"],[223,"core_distributor::distributor"],[224,"ccp_rpc_client"],[225,"core::option"],[226,"std::path"],[227,"peer_metrics::chain_listener"],[228,"system_interface::fs::fd_flags"],[229,"libipld_core::raw"],[230,"anyhow"],[231,"std::io"],[232,"cid::cid"],[233,"core::iter::traits::collect"],[234,"tokio::runtime::task::join"],[235,"alloy_sol_types"],[236,"core::any"]],"d":["","","@dev Emitted when a commitment is activated. Commitment …","Event with signature …","@dev Emitted when a unit activated. Unit is activated when …","@dev Emitted when a unit deactivated. Unit is deactivated …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,4,37,2,3,4,5,6,37,2,3,4,5,6,37,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,5,6,37,4,4,37,2,3,4,5,6,37,2,3,4,5,6,37,2,3,4,5,6,3,37,2,3,4,5,6,3,3,3,3,3,3,2,4,5,6,2,2,5,6,37,2,3,4,5,6,37,2,3,4,5,6,3,37,2,3,4,5,6,37,2,3,4,5,6,37,2,3,4,5,6,37,2,3,4,5,6,37,2,3,4,5,6,37,2,4,5,6,37,2,3,4,5,6,4,2,4,3,37,2,3,4,5,6,37,2,3,4,5,6,37,2,5,3,3,3,3,2,3,4,5,6,2,4,5,6,3,2,4,5,6,37,2,3,4,5,6,37,2,3,4,5,6,37,2,3,4,5,6,37,2,3,4,5,6,5,6,2,3,37,2,3,4,5,6],"f":[0,0,0,0,0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[3,3],[4,4],[5,5],[6,6],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,0,0,[8,[[11,[9,10]]]],0,0,[12,[[11,[7,13]]]],[12,[[11,[7,13]]]],[12,[[11,[7,13]]]],[12,[[11,[7,13]]]],[12,[[11,[7,13]]]],[12,[[11,[7,13]]]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[[]],[14,7],[14,7],[14,7],[14,7],[14,7],[14,7],[[],[[17,[[16,[15]]]]]],[3,[[17,[18]]]],[[],[[16,[15]]]],[[],[[16,[15]]]],[[],19],[[[17,[18]]],7],[[2,[20,[19]]],[[21,[7]]]],[[4,[20,[19]]],[[21,[7]]]],[[5,[20,[19]]],[[21,[7]]]],[[6,[20,[19]]],[[21,[7]]]],0,[[2,12],22],[[5,12],22],[[6,12],22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[11,[23,24]]],[]],[-1,[[11,[23,24]]],[]],[-1,[[11,[23,24]]],[]],[-1,[[11,[23,24]]],[]],[-1,[[11,[23,24]]],[]],[-1,[[11,[23,24]]],[]],0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1]]],[[25,[26]]],[]],[[[25,[-1]]],[[25,[26]]],[]],[[[25,[-1]]],[[25,[26]]],[]],[[[25,[-1]]],[[25,[26]]],[]],[[[25,[-1]]],[[25,[26]]],[]],[[[25,[-1]]],[[25,[26]]],[]],[[[27,[-1]]],[[27,[26]]],[]],[[[27,[-1]]],[[27,[26]]],[]],[[[27,[-1]]],[[27,[26]]],[]],[[[27,[-1]]],[[27,[26]]],[]],[[[27,[-1]]],[[27,[26]]],[]],[[[27,[-1]]],[[27,[26]]],[]],[[[28,[-1]]],[[28,[26]]],[]],[[[28,[-1]]],[[28,[26]]],[]],[[[28,[-1]]],[[28,[26]]],[]],[[[28,[-1]]],[[28,[26]]],[]],[[[28,[-1]]],[[28,[26]]],[]],[[[28,[-1]]],[[28,[26]]],[]],[[29,9,8,30,[27,[31]],[27,[32]],[34,[33]],35,[34,[36]]],37],[[],2],[[],4],[[],5],[[],6],[[-1,23],[[11,[[38,[-2]],24]]],[],39],[[-1,23],[[11,[[38,[-2]],24]]],[],39],[[-1,23],[[11,[[38,[-2]],24]]],[],39],[[-1,23],[[11,[[38,[-2]],24]]],[],39],[[-1,23],[[11,[[38,[-2]],24]]],[],39],[[-1,23],[[11,[[38,[-2]],24]]],[],39],0,0,0,0,[[40,-1,-2],[[11,[7,41]]],42,[[44,[43]]]],[[40,-1,-2],[[11,[7,41]]],42,[[44,[43]]]],[[40,-1,-2],[[11,[7,41]]],42,[[44,[43]]]],[[40,-1,-2],[[11,[7,41]]],42,[[44,[43]]]],[[40,-1,-2],[[11,[7,41]]],42,[[44,[43]]]],[[40,-1,-2],[[11,[7,41]]],42,[[44,[43]]]],[[-1,[38,[-2]]],[[11,[7,24]]],[],39],[[-1,[38,[-2]]],[[11,[7,24]]],[],39],[[-1,[38,[-2]]],[[11,[7,24]]],[],39],[[-1,[38,[-2]]],[[11,[7,24]]],[],39],[[-1,[38,[-2]]],[[11,[7,24]]],[],39],[[-1,[38,[-2]]],[[11,[7,24]]],[],39],[37,[[45,[7]]]],0,0,[[3,[17,[18]]],7],[3,14],[3,46],[3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2],[4],[5],[6],[[],14],[2],[4],[5],[6],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],0,0,0,[[],48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[8,"CastFrom",205],[3,"CommitmentActivated",0],[3,"CIDV1",0],[3,"ComputeUnitsMatched",0],[3,"UnitActivated",0],[3,"UnitDeactivated",0],[15,"tuple"],[3,"ChainListenerConfig",206],[3,"Client",207],[4,"Error",208],[4,"Result",209],[3,"Formatter",210],[3,"Error",210],[15,"usize"],[15,"str"],[4,"Cow",211],[3,"Vec",212],[15,"u8"],[3,"WordToken",213],[15,"slice"],[6,"Result",214],[6,"Result",210],[3,"FdFlags",215],[3,"Error",216],[3,"Box",217],[8,"Any",218],[3,"Arc",219],[3,"Rc",220],[3,"ChainConfig",206],[3,"PeerId",221],[8,"ChainConnector",222],[8,"CoreDistributor",223],[3,"CCPRpcHttpClient",224],[4,"Option",225],[3,"PathBuf",226],[3,"ChainListenerMetrics",227],[3,"ChainListener",0],[3,"SetFdFlags",215],[8,"AsFilelike",228],[3,"RawCodec",229],[3,"Error",230],[8,"Read",231],[3,"Cid",232],[8,"Extend",233],[3,"JoinHandle",234],[6,"Word",235],[3,"TypeId",218],[15,"bool"]],"b":[]},\
"cid_utils":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLLLL","n":["Hash","as_bytes","borrow","borrow_mut","clone","clone_into","deserialize","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from_string","hash","into","new","references","serialize","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"cid_utils"],[25,"alloc::vec"],[26,"core::result"],[27,"serde::de"],[28,"core::fmt"],[29,"core::fmt"],[30,"core::hash"],[31,"eyre"],[32,"libipld_core::raw"],[33,"anyhow"],[34,"std::io"],[35,"cid::cid"],[36,"core::iter::traits::collect"],[37,"serde::ser"],[38,"alloc::string"],[39,"core::any"]],"d":["","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[1,[[3,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],4,[],[]],[-1,[[5,[1]]],6],[[1,1],7],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[1,8],9],[[1,8],9],[-1,-1,[]],[10,[[5,[1,11]]]],[[1,-1],4,12],[-1,-2,[],[]],[[[13,[2]]],[[14,[1]]]],[[15,-1,-2],[[5,[4,16]]],17,[[19,[18]]]],[[1,-1],5,20],[-1,-2,[],[]],[-1,21,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,22,[]]],"c":[],"p":[[3,"Hash",0],[15,"u8"],[3,"Vec",25],[15,"tuple"],[4,"Result",26],[8,"Deserializer",27],[15,"bool"],[3,"Formatter",28],[6,"Result",28],[15,"str"],[4,"Error",29],[8,"Hasher",30],[15,"slice"],[6,"Result",31],[3,"RawCodec",32],[3,"Error",33],[8,"Read",34],[3,"Cid",35],[8,"Extend",36],[8,"Serializer",37],[3,"String",38],[3,"TypeId",39]],"b":[[11,"impl-Debug-for-Hash"],[12,"impl-Display-for-Hash"]]},\
"config_utils":{"doc":"","t":"FFFFFFFF","n":["blueprint_dir","modules_dir","particles_anomaly_dir","particles_dir","particles_vault_dir","services_dir","to_peer_id","workdir"],"q":[[0,"config_utils"],[8,"std::path"],[9,"std::path"],[10,"libp2p_identity::peer_id"]],"d":["","","","","","","",""],"i":[0,0,0,0,0,0,0,0],"f":[[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[3,4],[1,2]],"c":[],"p":[[3,"Path",8],[3,"PathBuf",8],[3,"Keypair",9],[3,"PeerId",10]],"b":[]},\
"connected_client":{"doc":"","t":"EEDNNNLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMLMLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLMMMMM","n":["ClientCommand","ClientEvent","ConnectedClient","NewConnection","Particle","Particle","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","clone","clone_into","connect_to","connect_to_with_timeout","connect_with_keypair","connect_with_timeout","data_store","debug","debug","debug","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","execute_particle","fmt","fmt","from","from","from","get_data_store","get_fd_flags","get_fd_flags","get_fd_flags","get_local_vm","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","listen_for_n","local_vm","maybe_receive","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","node","node_address","particle_ttl","particle_ttl","receive","receive_args","references","references","references","send","send_particle","send_particle_ext","serialize","set_fd_flags","set_fd_flags","set_fd_flags","set_particle_ttl","short_timeout","short_timeout","timeout","timeout","tmp_dir","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_name","type_name","vzip","vzip","vzip","wait_particle_args","particle","multiaddr","particle","peer_id","sender"],"q":[[0,"connected_client"],[107,"connected_client::ClientCommand"],[108,"connected_client::ClientEvent"],[112,"multiaddr"],[113,"eyre"],[114,"core::time"],[115,"core::option"],[116,"fluence_keypair::key_pair"],[117,"core::fmt"],[118,"core::fmt"],[119,"serde::de"],[120,"serde_json::value"],[121,"std::collections::hash::map"],[122,"alloc::vec"],[123,"alloc::string"],[124,"core::convert"],[125,"core::fmt"],[126,"alloc::sync"],[127,"system_interface::fs::fd_flags"],[128,"std::io::error"],[129,"marine_wasmtime_backend"],[130,"avm_server::runner"],[131,"tokio::sync::mutex"],[132,"alloc::boxed"],[133,"core::any"],[134,"alloc::rc"],[135,"core::ops::function"],[136,"core::default"],[137,"particle_protocol::particle"],[138,"libp2p_identity::peer_id"],[139,"system_interface::fs::fd_flags"],[140,"libipld_core::raw"],[141,"anyhow"],[142,"std::io"],[143,"cid::cid"],[144,"core::iter::traits::collect"],[145,"serde::ser"],[146,"core::any"]],"d":["Describes commands sent from client to relay node; also …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait for a particle with specified <code>particle_id</code>, and read …","","","","",""],"i":[0,0,0,22,1,22,4,1,22,4,1,22,4,1,1,4,4,4,4,4,4,1,22,4,4,1,22,4,4,1,22,1,4,1,22,4,1,22,4,1,22,4,4,1,22,4,4,1,22,4,1,22,4,1,22,4,1,22,4,1,22,4,4,4,4,4,1,22,4,4,4,4,4,4,4,1,22,4,4,4,1,4,1,22,4,4,4,4,4,4,1,4,1,22,4,1,22,4,1,22,4,1,22,4,1,22,4,47,48,49,48,49],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,1],[[-1,-2],2,[],[]],[3,[[5,[4]]]],[[3,6,6,[7,[6]]],[[5,[4]]]],[[3,[7,[8]]],[[5,[4]]]],[[3,[7,[8]],6,6,[7,[6]],9],[[5,[4]]]],0,[10,[[12,[2,11]]]],[10,[[12,[2,11]]]],[10,[[12,[2,11]]]],[13,-1,[]],[4],[13,-1,[]],[13,-1,[]],[13,-1,[]],[4],[13,-1,[]],[13,-1,[]],[-1,[[12,[1]]],14],[13,2],[13,2],[13,2],[[4,-1,[17,[15,16]]],[[5,[[18,[16]]]]],[[20,[19]]]],[[1,10],21],[[22,10],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,[[24,[23]]]],[-1,[[12,[25,26]]],[]],[-1,[[12,[25,26]]],[]],[-1,[[12,[25,26]]],[]],[4,[[29,[[28,[27]]]]]],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[30,[-1]]],[[30,[31]]],[]],[[[30,[-1]]],[[30,[31]]],[]],[[[30,[-1]]],[[30,[31]]],[]],[[[24,[-1]]],[[24,[31]]],[]],[[[24,[-1]]],[[24,[31]]],[]],[[[24,[-1]]],[[24,[31]]],[]],[[[32,[-1]]],[[32,[31]]],[]],[[[32,[-1]]],[[32,[31]]],[]],[[[32,[-1]]],[[32,[31]]],[]],[[4,13,-1],-2,33,34],0,[4,[[7,[35]]]],0,[[-1,25],[[12,[[37,[-2]],26]]],[],38],[[-1,25],[[12,[[37,[-2]],26]]],[],38],[[-1,25],[[12,[[37,[-2]],26]]],[],38],0,0,[4,6],0,[4,[[5,[35]]]],[4,[[5,[[18,[16]]]]]],[[39,-1,-2],[[12,[2,40]]],41,[[43,[42]]]],[[39,-1,-2],[[12,[2,40]]],41,[[43,[42]]]],[[39,-1,-2],[[12,[2,40]]],41,[[43,[42]]]],[[4,35],2],[[4,-1,[17,[15,16]]],19,[[20,[19]]]],[[4,-1,[17,[15,16]],9],19,[[20,[19]]]],[[1,-1],12,44],[[-1,[37,[-2]]],[[12,[2,26]]],[],38],[[-1,[37,[-2]]],[[12,[2,26]]],[],38],[[-1,[37,[-2]]],[[12,[2,26]]],[],38],[[4,6],2],[4,6],0,[4,6],0,0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,-1],[[5,[[18,[16]]]]],[[46,[15]]]],0,0,0,0,0],"c":[],"p":[[4,"ClientCommand",0],[15,"tuple"],[3,"Multiaddr",112],[3,"ConnectedClient",0],[6,"Result",113],[3,"Duration",114],[4,"Option",115],[4,"KeyPair",116],[15,"bool"],[3,"Formatter",117],[3,"Error",117],[4,"Result",118],[15,"usize"],[8,"Deserializer",119],[15,"str"],[4,"Value",120],[3,"HashMap",121],[3,"Vec",122],[3,"String",123],[8,"Into",124],[6,"Result",117],[4,"ClientEvent",0],[3,"ParticleDataStore",125],[3,"Arc",126],[3,"FdFlags",127],[3,"Error",128],[3,"WasmtimeWasmBackend",129],[3,"AVMRunner",130],[3,"Mutex",131],[3,"Box",132],[8,"Any",133],[3,"Rc",134],[8,"Fn",135],[8,"Default",136],[3,"Particle",137],[3,"PeerId",138],[3,"SetFdFlags",127],[8,"AsFilelike",139],[3,"RawCodec",140],[3,"Error",141],[8,"Read",142],[3,"Cid",143],[8,"Extend",144],[8,"Serializer",145],[3,"TypeId",133],[8,"AsRef",124],[13,"Particle",107],[13,"NewConnection",108],[13,"Particle",108]],"b":[]},\
"connection_pool":{"doc":"","t":"ENNDDINNNNNNENNLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLMLKLLMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMM","n":["Command","Connect","Connected","ConnectionPoolApi","ConnectionPoolBehaviour","ConnectionPoolT","CountConnections","Dial","Disconnect","Disconnected","GetContact","IsConnected","LifecycleEvent","LifecycleEvents","Send","add_discovered_addresses","add_subscriber","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","connect","connect","connect","count_connections","count_connections","count_connections","debug","debug","debug","debug","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dial","dial","dial","disconnect","disconnect","disconnect","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","get_contact","get_contact","get_contact","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","handle_established_inbound_connection","handle_established_outbound_connection","handle_pending_inbound_connection","handle_pending_outbound_connection","init","init","init","init","into","into","into","into","is_connected","is_connected","is_connected","lifecycle_events","lifecycle_events","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","on_connection_handler_event","on_swarm_event","outlet","poll","send","send","send","send_timeout","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","addr","contact","out","out","out","out","out","out","out","out","particle","peer_id","peer_id","peer_id","to"],"q":[[0,"connection_pool"],[125,"connection_pool::Command"],[140,"libp2p_identity::peer_id"],[141,"multiaddr"],[142,"alloc::vec"],[143,"tokio::sync::mpsc::unbounded"],[144,"particle_protocol::contact"],[145,"futures_core::future"],[146,"tokio::sync::oneshot"],[147,"core::fmt"],[148,"core::fmt"],[149,"core::option"],[150,"core::fmt"],[151,"std::io::error"],[152,"libp2p_swarm::connection"],[153,"libp2p_swarm"],[154,"libp2p_swarm"],[155,"futures_core::stream"],[156,"particle_protocol::libp2p_protocol::upgrade"],[157,"peer_metrics::connection_pool"],[158,"particle_protocol::particle"],[159,"tokio::sync::mpsc::bounded"],[160,"system_interface::fs::fd_flags"],[161,"libp2p_swarm"],[162,"core::task::wake"],[163,"particle_protocol::libp2p_protocol::message"],[164,"libp2p_swarm::behaviour"],[165,"particle_protocol::libp2p_protocol::message"],[166,"core::any"]],"d":["","","","","","","","","","","","","","","","","Subscribes given channel for all <code>LifecycleEvent</code>s","","","","","","","","","","","","","","Connect to the contact by all of its known addresses and …","","","Returns number of connected contacts","","","","","","","","","","","","","","","Dial <code>address</code>, and send contact back on success <code>None</code> means …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns contact for a given peer if it is known","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns whether given peer is connected or not","","","","","","","","","","","","","","Sends a particle to a connected contact. Returns whether …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,18,6,0,0,0,18,18,18,6,18,18,0,18,18,1,1,1,18,8,6,1,18,8,6,8,6,8,6,43,1,8,43,1,8,1,18,8,6,1,18,8,6,1,18,8,6,43,1,8,43,1,8,1,18,8,6,18,8,6,6,1,18,8,6,43,1,8,1,18,8,6,1,1,1,1,1,18,8,6,1,18,8,6,43,1,8,43,8,1,1,18,8,6,1,1,8,1,43,1,8,8,1,18,8,6,8,6,6,1,18,8,6,1,18,8,6,1,18,8,6,1,18,8,6,44,45,45,46,44,47,48,49,50,51,46,47,48,49,46],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,[4,[3]]],5],[[1,[7,[6]]],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[6,6],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,9],[[11,[10]]],[]],[[1,9,[12,[10]]],5],[[8,9],[[11,[10]]]],[-1,[[11,[13]]],[]],[[1,[12,[13]]],5],[8,[[11,[13]]]],[14,[[16,[5,15]]]],[14,[[16,[5,15]]]],[14,[[16,[5,15]]]],[14,[[16,[5,15]]]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[[-1,3],[[11,[[17,[9]]]]],[]],[[1,3,[12,[[17,[9]]]]],5],[[8,3],[[11,[[17,[9]]]]]],[[-1,2],[[11,[10]]],[]],[[1,2,[12,[10]]],5],[[8,2],[[11,[10]]]],[13,5],[13,5],[13,5],[13,5],[[18,14],19],[[8,14],19],[[6,14],19],[[6,14],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,2],[[11,[[17,[9]]]]],[]],[[1,2,[12,[[17,[9]]]]],5],[[8,2],[[11,[[17,[9]]]]]],[-1,[[16,[20,21]]],[]],[-1,[[16,[20,21]]],[]],[-1,[[16,[20,21]]],[]],[-1,[[16,[20,21]]],[]],[[1,22,2,3,3],[[16,[[23,[1]],24]]]],[[1,22,2,3,25],[[16,[[23,[1]],24]]]],[[1,22,3,3],[[16,[5,24]]]],[[1,22,[17,[2]],[26,[3]],25],[[16,[[4,[3]],24]]]],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,2],[[11,[10]]],[]],[[1,2,[12,[10]]],5],[[8,2],[[11,[10]]]],[-1,[[27,[6]]],[]],[8,[[27,[6]]]],[[13,28,2,[17,[29]]],[[5,[1,[31,[30]],8]]]],[[-1,20],[[16,[[32,[-2]],21]]],[],33],[[-1,20],[[16,[[32,[-2]],21]]],[],33],[[-1,20],[[16,[[32,[-2]],21]]],[],33],[[-1,20],[[16,[[32,[-2]],21]]],[],33],[[1,2,22,[34,[1]]],5],[[1,35],5],0,[[1,36],[[39,[[38,[5,37]]]]]],[[-1,9,30],[[11,[40]]],[]],[[1,9,30,[12,[40]]],5],[[8,9,30],[[11,[40]]]],0,[[-1,[32,[-2]]],[[16,[5,21]]],[],33],[[-1,[32,[-2]]],[[16,[5,21]]],[],33],[[-1,[32,[-2]]],[[16,[5,21]]],[],33],[[-1,[32,[-2]]],[[16,[5,21]]],[],33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,41,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"ConnectionPoolBehaviour",0],[3,"PeerId",140],[3,"Multiaddr",141],[3,"Vec",142],[15,"tuple"],[4,"LifecycleEvent",0],[3,"UnboundedSender",143],[3,"ConnectionPoolApi",0],[3,"Contact",144],[15,"bool"],[6,"BoxFuture",145],[3,"Sender",146],[15,"usize"],[3,"Formatter",147],[3,"Error",147],[4,"Result",148],[4,"Option",149],[4,"Command",0],[6,"Result",147],[3,"FdFlags",150],[3,"Error",151],[3,"ConnectionId",152],[6,"THandler",153],[3,"ConnectionDenied",153],[4,"Endpoint",154],[15,"slice"],[6,"BoxStream",155],[3,"ProtocolConfig",156],[3,"ConnectionPoolMetrics",157],[3,"ExtendedParticle",158],[3,"Receiver",159],[3,"SetFdFlags",150],[8,"AsFilelike",160],[6,"THandlerOutEvent",153],[4,"FromSwarm",161],[3,"Context",162],[4,"HandlerMessage",163],[4,"ToSwarm",161],[4,"Poll",164],[4,"SendStatus",163],[3,"String",165],[3,"TypeId",166],[8,"ConnectionPoolT",0],[13,"Dial",125],[13,"Connect",125],[13,"Send",125],[13,"Disconnect",125],[13,"IsConnected",125],[13,"GetContact",125],[13,"CountConnections",125],[13,"LifecycleEvents",125]],"b":[[59,"impl-Display-for-LifecycleEvent"],[60,"impl-Debug-for-LifecycleEvent"]]},\
"control_macro":{"doc":"","t":"OOOO","n":["get_return","measure","ok_get","unwrap_return"],"q":[[0,"control_macro"]],"d":["Retrieves value from <code>Some</code>, returns on <code>None</code>","","Takes option as an argument, unwraps if <code>Some</code>, exit …","Retrieves value from <code>Some</code>, returns on <code>None</code>"],"i":[0,0,0,0],"f":[0,0,0,0],"c":[],"p":[],"b":[]},\
"core_distributor":{"doc":"","t":"EDIDDGDDDNNIKLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLDLLLLLLLLLLLLLLLLLLENNENDNNNNNENNENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMDDNDNDELLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AcquireStrategy","CUID","CoreDistributor","CoreRange","LogicalCoreId","Map","PersistenceTask","PersistentCoreDistributor","PhysicalCoreId","RoundRobin","Strict","ThreadPinner","acquire_worker_cores","acquire_worker_cores","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cleanup_cache","cleanup_cache","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","default","default","deserialize","deserialize","deserialize","deserialize","dummy","encode_hex","encode_hex_upper","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","errors","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_hex","from_path","from_str","from_str","get_system_cpu_assignment","get_system_cpu_assignment","hash","hash","hash","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_subset","new","new","new","partial_cmp","partial_cmp","partial_cmp","pin_current_thread_to","pin_current_thread_to_cpuset","release_worker_cores","release_worker_cores","run","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","types","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DummyCoreDistibutor","acquire_worker_cores","borrow","borrow_mut","cleanup_cache","default","from","get_system_cpu_assignment","into","into_any","into_any_arc","into_any_rc","new","release_worker_cores","try_from","try_into","type_id","type_name","vzip","AcquireError","CollectCoresData","CreateCoreDistributor","CreateError","CreateTopology","CurrentAssignment","DecodeError","DeserializationError","IllegalSystemCoreCount","IoError","IoError","LoadingError","NotEnoughCores","NotFoundAvailableCores","PersistError","PersistError","SerializationError","WrongCoreRange","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","source","source","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","vzip","vzip","vzip","vzip","vzip","acquire_request","available","current_assignment","required","available","core_range","err","err","required","err","err","err","err","err","err","err","AcquireRequest","Assignment","CapacityCommitment","Cores","Deal","SystemAssignment","WorkType","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cuid_cores","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","logical_core_ids","logical_core_ids","logical_core_ids","new","physical_core_count","physical_core_id","physical_core_ids","pin_current_thread_with","serialize","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"core_distributor"],[183,"core_distributor::dummy"],[202,"core_distributor::errors"],[307,"core_distributor::errors::AcquireError"],[311,"core_distributor::errors::CreateError"],[316,"core_distributor::errors::LoadingError"],[321,"core_distributor::errors::PersistError"],[323,"core_distributor::types"],[433,"core::result"],[434,"core::cmp"],[435,"serde::de"],[436,"core::iter::traits::collect"],[437,"core::fmt"],[438,"core::fmt"],[439,"std::path"],[440,"cpu_utils::cpu_topology"],[441,"alloc::sync"],[442,"core::hash"],[443,"alloc::boxed"],[444,"core::any"],[445,"alloc::rc"],[446,"nonempty"],[447,"core::option"],[448,"serde::ser"],[449,"alloc::string"],[450,"core::any"],[451,"std::io::error"],[452,"core::str::error"],[453,"toml::ser"],[454,"alloc::vec"],[455,"core::error"]],"d":["","","","","An opaque type that represents a CPU logical core.","","","<code>PersistentCoreDistributor</code> is a CPU core distributor …","An opaque type that represents a CPU physical core.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Loads the state from <code>file_name</code> if exists. If not creates a …","Parse CoreRange from string like “1,2-30,31”","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,26,26,0,55,5,6,5,29,26,11,12,13,6,5,29,26,11,12,13,6,55,5,11,12,13,6,11,12,13,6,12,13,6,12,13,6,11,6,11,12,13,6,0,6,6,11,12,13,6,12,12,12,13,13,13,6,6,6,0,11,11,12,12,13,13,6,6,5,29,26,11,12,12,13,13,6,6,5,11,6,55,5,12,13,6,5,29,26,11,12,13,6,5,29,26,11,12,13,6,5,29,26,11,12,13,6,5,29,26,11,12,13,6,11,12,13,6,12,13,6,54,54,55,5,29,11,12,13,6,11,12,13,6,11,12,13,6,5,29,26,11,11,12,13,6,5,29,26,11,12,13,6,5,29,26,11,12,13,6,5,29,26,11,12,13,6,0,5,29,26,11,12,13,6,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,44,30,0,44,0,30,30,44,30,45,0,44,3,0,30,45,44,44,30,45,43,3,44,30,45,43,3,43,3,44,44,30,30,45,45,43,43,3,3,44,30,30,30,30,30,30,45,45,45,43,3,44,30,45,43,3,44,30,45,43,3,44,30,45,43,3,44,30,45,43,3,43,30,45,44,30,45,43,3,44,30,45,43,3,44,30,45,43,3,44,30,45,43,3,44,30,45,43,3,44,30,45,43,3,56,56,56,56,57,58,59,60,57,61,62,63,64,65,66,67,0,0,52,0,52,0,0,32,52,1,53,2,32,52,1,53,2,52,1,53,2,52,1,53,2,2,52,52,1,53,2,52,52,52,53,53,53,2,2,2,52,1,1,53,2,32,52,1,53,2,52,32,52,1,53,2,32,52,1,53,2,32,52,1,53,2,32,52,1,53,2,2,32,53,1,2,53,32,2,52,52,1,53,2,1,32,52,1,53,2,32,52,1,53,2,32,52,1,53,2,32,52,1,53,2,32,52,1,53,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],[[4,[2,3]]],[]],[[5,1],[[4,[2,3]]]],[6,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[9,[6]]],10,[]],[[5,[9,[6]]],10],[11,11],[12,12],[13,13],[6,6],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[12,12],14],[[13,13],14],[[6,6],14],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[],11],[[],6],[-1,[[4,[11]]],15],[-1,[[4,[12]]],15],[-1,[[4,[13]]],15],[-1,[[4,[6]]],15],0,[6,-1,[[17,[16]]]],[6,-1,[[17,[16]]]],[[11,11],18],[[12,12],18],[[13,13],18],[[6,6],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],0,[[11,19],20],[[11,19],20],[[12,19],[[4,[10,21]]]],[[12,19],[[4,[10,21]]]],[[13,19],[[4,[10,21]]]],[[13,19],[[4,[10,21]]]],[[6,19],[[4,[10,21]]]],[[6,19],[[4,[10,21]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[22,12],[-1,-1,[]],[22,13],[-1,-1,[]],[-1,-1,[]],[-1,[[4,[6]]],[[23,[[9,[7]]]]]],[[24,25,11,26,27],[[4,[[10,[[28,[5]],29]],30]]]],[31,[[4,[11]]]],[31,[[4,[6]]]],[-1,32,[]],[5,32],[[12,-1],10,33],[[13,-1],10,33],[[6,-1],10,33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[11,[37,[12]]],18],[22,12],[22,13],[[[8,[7]]],6],[[12,12],[[38,[14]]]],[[13,13],[[38,[14]]]],[[6,6],[[38,[14]]]],[[-1,13],18,[]],[[-1,[9,[13]]],18,[]],[[-1,[9,[6]]],10,[]],[[5,[9,[6]]],10],[29,10],[[11,-1],4,39],[[12,-1],4,39],[[13,-1],4,39],[[6,-1],4,39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[9,[25]]],[[4,[11]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[42,1],[[4,[2,3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[42,[9,[6]]],10],[[],42],[-1,-1,[]],[42,32],[-1,-2,[],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[],42],[[42,[9,[6]]],10],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,41,[]],[-1,31,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[43,43],18],[[3,3],18],[[44,19],20],[[44,19],20],[[30,19],20],[[30,19],20],[[45,19],20],[[45,19],20],[[43,19],20],[[43,19],20],[[3,19],20],[[3,19],20],[-1,-1,[]],[44,30],[46,30],[-1,-1,[]],[47,30],[45,30],[48,30],[49,45],[47,45],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[[50,[[10,[12,6]]]]],43],[30,[[38,[51]]]],[45,[[38,[51]]]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[52,52],[1,1],[53,53],[2,2],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],0,[-1,[[4,[52]]],15],[[52,52],18],[[1,1],18],[[53,53],18],[[2,2],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[52,19],20],[[1,19],20],[[1,19],20],[[53,19],20],[[2,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[52,-1],10,33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[34,[-1]]],[[34,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[28,[-1]]],[[28,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[[[36,[-1]]],[[36,[35]]],[]],[2,[[50,[13]]]],0,0,[[[50,[6]],52],1],[2,25],0,0,[[2,54],10],[[52,-1],4,39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,40,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"AcquireRequest",323],[3,"Assignment",323],[4,"AcquireError",202],[4,"Result",433],[3,"PersistentCoreDistributor",0],[3,"CUID",0],[15,"u8"],[15,"array"],[15,"slice"],[15,"tuple"],[3,"CoreRange",0],[3,"PhysicalCoreId",0],[3,"LogicalCoreId",0],[4,"Ordering",434],[8,"Deserializer",435],[15,"char"],[8,"FromIterator",436],[15,"bool"],[3,"Formatter",437],[6,"Result",437],[3,"Error",437],[15,"u32"],[8,"AsRef",438],[3,"PathBuf",439],[15,"usize"],[4,"AcquireStrategy",0],[8,"CPUTopology",440],[3,"Arc",441],[3,"PersistenceTask",0],[4,"LoadingError",202],[15,"str"],[3,"SystemAssignment",323],[8,"Hasher",442],[3,"Box",443],[8,"Any",444],[3,"Rc",445],[3,"NonEmpty",446],[4,"Option",447],[8,"Serializer",448],[3,"String",449],[3,"TypeId",444],[3,"DummyCoreDistibutor",183],[3,"CurrentAssignment",202],[4,"CreateError",202],[4,"PersistError",202],[3,"Error",450],[3,"Error",451],[3,"Utf8Error",452],[3,"Error",453],[3,"Vec",454],[8,"Error",455],[4,"WorkType",323],[3,"Cores",323],[8,"ThreadPinner",0],[8,"CoreDistributor",0],[13,"NotFoundAvailableCores",307],[13,"NotEnoughCores",311],[13,"WrongCoreRange",311],[13,"CreateTopology",311],[13,"CollectCoresData",311],[13,"CreateCoreDistributor",316],[13,"IoError",316],[13,"DecodeError",316],[13,"DeserializationError",316],[13,"PersistError",316],[13,"IoError",321],[13,"SerializationError",321]],"b":[[68,"impl-Display-for-CoreRange"],[69,"impl-Debug-for-CoreRange"],[70,"impl-Debug-for-PhysicalCoreId"],[71,"impl-Display-for-PhysicalCoreId"],[72,"impl-Debug-for-LogicalCoreId"],[73,"impl-Display-for-LogicalCoreId"],[74,"impl-Debug-for-CUID"],[75,"impl-Display-for-CUID"],[232,"impl-Debug-for-CreateError"],[233,"impl-Display-for-CreateError"],[234,"impl-Debug-for-LoadingError"],[235,"impl-Display-for-LoadingError"],[236,"impl-Display-for-PersistError"],[237,"impl-Debug-for-PersistError"],[238,"impl-Display-for-CurrentAssignment"],[239,"impl-Debug-for-CurrentAssignment"],[240,"impl-Debug-for-AcquireError"],[241,"impl-Display-for-AcquireError"],[243,"impl-From%3CCreateError%3E-for-LoadingError"],[244,"impl-From%3CError%3E-for-LoadingError"],[246,"impl-From%3CError%3E-for-LoadingError"],[247,"impl-From%3CPersistError%3E-for-LoadingError"],[248,"impl-From%3CUtf8Error%3E-for-LoadingError"],[249,"impl-From%3CError%3E-for-PersistError"],[250,"impl-From%3CError%3E-for-PersistError"],[364,"impl-Debug-for-AcquireRequest"],[365,"impl-Display-for-AcquireRequest"]]},\
"created_swarm":{"doc":"","t":"DDDDNNEDDNNDDFMMFMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLMMMFFLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMMCCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMMMMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFFFFFFMMMMMMMMLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLMLMLLLLLLLLLMMCAMMMMMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMNDDNDNDEDNLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["Args","BaseVmConfig","ChainConfig","CreatedSwarm","Empty","Err","FunctionOutcome","JError","NetworkKey","NotDefined","Ok","ParticleParams","SwarmConfig","add_print","allowed_binaries","allowed_effectors","aqua_vm_config","aquamarine_api","as_","as_","as_","as_","as_","as_","as_","as_","as_","bootstraps","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","builtins_dir","builtins_keypair","cancellation_token","cc_events_dir","chain_config","chain_listener_config","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","connectivity","cpu_cores_count","create_swarm","create_swarm_with_runtime","debug","debug","debug","debug","debug","debug","debug","debug","debug","default_base_fee","default_priority_fee","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","diamond_contract_address","drop","drop","drop","drop","drop","drop","drop","drop","drop","enabled_system_services","exit_outlet","extend_system_services","fluence_app_service","fluence_keypair","fluence_spell_dtos","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_eyre","from_output","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_residual","from_residual","function_args","function_name","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_spell_id","http_endpoint","http_listen_addr","http_port","id","init","init","init","init","init","init","init","init","init","init_peer_id","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_defined","is_spell_particle","keypair","listen_on","listen_on","make_swarms","make_swarms_with","make_swarms_with_cfg","make_swarms_with_keypair","make_swarms_with_mocked_vm","make_swarms_with_transport_and_mocked_vm","management_keypair","management_keypair","manager","metrics_enabled","multiaddr","network_id","network_key","network_key","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","next","next_opt","not_err","or_else","override_system_services_config","peer_id","peer_id","peer_scope","pool_size","random","references","references","references","references","references","references","references","references","references","script","serialize","service_id","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","signature","spell_base_dir","system_services","system_services_config","tetraplets","timestamp","tmp_dir","tmp_dir","tmp_dir","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_particle_parameters","to_string","token","transport","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet_key","args","params","AquaIpfs","AquaIpfsConfig","ConnectorConfig","Decider","DeciderConfig","Registry","RegistryConfig","ServiceKey","SystemServicesConfig","TrustGraph","all_values","aqua_ipfs","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connector","curl_binary_path","debug","debug","debug","debug","debug","debug","decider","decider_period_sec","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","enable","eq","equivalent","equivalent","equivalent","equivalent","equivalent","expired_period_sec","external_api_multiaddr","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_string","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_hash","hash","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","into_request","into_request","into_request","ipfs_binary_path","local_api_multiaddr","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","references","references","references","references","references","references","registry","registry_period_sec","renew_period_sec","replicate_period_sec","serialize","serialize","serialize","serialize","serialize","serialize","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","vzip","vzip","vzip","vzip","vzip","vzip","worker_ipfs_multiaddr","worker_period_sec"],"q":[[0,"created_swarm"],[360,"created_swarm::FunctionOutcome"],[362,"created_swarm::system_services_config"],[591,"core::iter::traits::iterator"],[592,"bnum::cast"],[593,"core::ops::control_flow"],[594,"particle_protocol::particle"],[595,"types::peer_scope"],[596,"alloc::string"],[597,"libp2p_identity::peer_id"],[598,"aquamarine"],[599,"nox::node"],[600,"alloc::boxed"],[601,"fluence_keypair::key_pair"],[602,"server_config::resolved_config"],[603,"tracing::span"],[604,"core_distributor::persistence"],[605,"core::ops::function"],[606,"aquamarine::aqua_runtime"],[607,"core::fmt"],[608,"core::fmt"],[609,"serde::de"],[610,"core::fmt"],[611,"eyre"],[612,"core::convert"],[613,"core::convert"],[614,"std::io::error"],[615,"core::option"],[616,"core::any"],[617,"alloc::sync"],[618,"alloc::rc"],[619,"tonic::request"],[620,"alloc::vec"],[621,"core::ops::function"],[622,"fluence_libp2p::transport"],[623,"core::convert"],[624,"system_interface::fs::fd_flags"],[625,"particle_args::args_error"],[626,"serde::de"],[627,"anyhow"],[628,"std::io"],[629,"cid::cid"],[630,"core::iter::traits::collect"],[631,"serde::ser"],[632,"marine_call_parameters"],[633,"avm_interface::call_request_parameters"],[634,"core::any"],[635,"core::marker"],[636,"core::hash"]],"d":["Arguments passed by VM to host on call_service","","","","","","","An error that can be created from any other error …","","","","Lightweight, static version of the [Particle] structure It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If none, comes from the chain","If none, comes from the chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns false if variant is [NotDefined]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves next json value from iterator, parse it to T …","Retrieves a json value from iterator if it’s not empty, …","Returns false if variant is Err","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unix timestamp in milliseconds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TTL in milliseconds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,5,5,0,0,0,5,5,0,0,0,11,11,0,31,7,8,5,3,9,31,10,11,12,11,7,8,5,3,9,31,10,11,12,7,8,5,3,9,31,10,11,12,5,11,11,31,11,11,11,7,8,5,9,10,11,12,9,7,8,5,9,10,11,12,31,31,11,0,0,7,8,5,3,9,31,10,11,12,12,12,7,8,5,3,9,31,10,11,12,7,8,5,3,9,31,10,11,12,12,12,7,8,5,3,9,31,10,11,12,11,31,11,0,0,0,7,8,8,5,9,31,10,11,12,7,8,8,8,5,5,5,3,9,31,10,10,11,12,8,5,7,7,8,8,5,5,9,9,10,10,11,11,12,12,5,5,7,7,7,8,5,3,9,31,10,11,12,9,12,31,11,9,7,8,5,3,9,31,10,11,12,9,7,8,5,3,9,31,10,11,12,7,8,5,3,9,31,10,11,12,7,8,5,3,9,31,10,11,12,7,8,5,3,9,31,10,11,12,7,8,5,3,9,31,10,11,12,5,9,11,3,11,0,0,0,0,0,0,31,11,3,11,31,12,31,11,8,11,7,8,5,3,9,31,10,11,12,7,7,5,5,11,3,31,9,11,10,7,8,5,3,9,31,10,11,12,9,12,7,7,8,5,3,9,31,10,11,12,9,11,0,0,7,9,3,31,11,7,8,5,9,10,11,12,9,8,9,11,7,7,8,5,3,9,31,10,11,12,7,8,5,3,9,31,10,11,12,9,7,8,5,3,9,31,10,11,12,7,8,5,3,9,31,10,11,12,7,8,5,3,9,31,10,11,12,12,80,80,69,0,0,69,0,69,0,0,0,69,69,70,69,70,71,72,73,74,69,70,71,72,73,74,69,70,71,72,73,74,69,70,71,72,73,74,69,70,71,72,73,74,70,72,69,70,71,72,73,74,70,73,70,71,72,73,74,69,70,71,72,73,74,69,70,71,72,73,74,69,70,71,72,73,74,69,70,71,72,73,74,70,69,69,69,69,69,69,74,71,69,69,70,71,72,73,74,69,70,71,72,73,74,69,69,70,70,71,71,72,72,73,73,74,74,69,69,70,71,72,73,74,69,69,69,70,71,72,73,74,69,70,71,72,73,74,69,70,71,72,73,74,69,70,71,72,73,74,69,70,71,72,73,74,69,70,71,72,73,74,71,71,69,70,71,72,73,74,69,70,71,72,73,74,70,74,74,74,69,70,71,72,73,74,69,70,71,72,73,74,69,70,71,72,73,74,69,69,70,71,72,73,74,69,70,71,72,73,74,69,70,71,72,73,74,69,70,71,72,73,74,69,70,71,72,73,74,73,73],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,2],0,0,[3],0,[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,6],0,0,0,0,0,0,[7,7],[8,8],[5,5],[9,9],[10,10],[11,11],[12,12],[[13,14,15],9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,[11,[[1,[16,[19,[[18,[17]]]],20,11,21,22,23]]]],[[11,-1],[[1,[16,[19,[[18,[-2]]]],20,11,21,22,23]]],24,25],[26,[[28,[1,27]]]],[26,[[28,[1,27]]]],[26,[[28,[1,27]]]],[26,[[28,[1,27]]]],[26,[[28,[1,27]]]],[26,[[28,[1,27]]]],[26,[[28,[1,27]]]],[26,[[28,[1,27]]]],[26,[[28,[1,27]]]],0,0,[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[-1,[[28,[12]]],30],0,[29,1],[29,1],[29,1],[29,1],[29,1],[29,1],[29,1],[29,1],[29,1],0,0,0,0,0,0,[[7,26],[[28,[1,27]]]],[[8,26],[[28,[1,27]]]],[[8,26],[[28,[1,27]]]],[[5,26],[[28,[1,27]]]],[[9,26],[[28,[1,27]]]],[[31,26],32],[[10,26],32],[[11,26],32],[[12,26],[[28,[1,27]]]],[-1,-1,[]],[-1,8,33],[34,-1,[]],[-1,-1,[]],[34,-1,[]],[-1,-1,[]],[-1,5,33],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[36,[35]]],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[37,8],[[],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[28,[38,-1]]],5,[[39,[8]]]],[8,5],0,0,[-1,[[28,[40,41]]],[]],[-1,[[28,[40,41]]],[]],[-1,[[28,[40,41]]],[]],[-1,[[28,[40,41]]],[]],[-1,[[28,[40,41]]],[]],[-1,[[28,[40,41]]],[]],[-1,[[28,[40,41]]],[]],[-1,[[28,[40,41]]],[]],[-1,[[28,[40,41]]],[]],[42,[[43,[15]]]],0,0,0,0,[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[44]]],[]],[[[19,[-1]]],[[19,[44]]],[]],[[[19,[-1]]],[[19,[44]]],[]],[[[19,[-1]]],[[19,[44]]],[]],[[[19,[-1]]],[[19,[44]]],[]],[[[19,[-1]]],[[19,[44]]],[]],[[[19,[-1]]],[[19,[44]]],[]],[[[19,[-1]]],[[19,[44]]],[]],[[[19,[-1]]],[[19,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[46,[-1]]],[[46,[44]]],[]],[[[46,[-1]]],[[46,[44]]],[]],[[[46,[-1]]],[[46,[44]]],[]],[[[46,[-1]]],[[46,[44]]],[]],[[[46,[-1]]],[[46,[44]]],[]],[[[46,[-1]]],[[46,[44]]],[]],[[[46,[-1]]],[[46,[44]]],[]],[[[46,[-1]]],[[46,[44]]],[]],[[[46,[-1]]],[[46,[44]]],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[5,48],[42,48],0,0,0,[29,[[49,[31]]]],[[29,-1,-2,-3,48],[[49,[31]]],50,50,50],[[29,-1],[[49,[31]]],50],[[29,20],[[49,[31]]]],[[29,-1,[43,[51]],-2],[[49,[31]]],50,50],[[29,52],[[49,[31]]]],0,0,0,0,0,0,0,0,[-1,8,[[53,[42]]]],[[[49,[54]],54,10],11],[[-1,40],[[28,[[55,[-2]],41]]],[],56],[[-1,40],[[28,[[55,[-2]],41]]],[],56],[[-1,40],[[28,[[55,[-2]],41]]],[],56],[[-1,40],[[28,[[55,[-2]],41]]],[],56],[[-1,40],[[28,[[55,[-2]],41]]],[],56],[[-1,40],[[28,[[55,[-2]],41]]],[],56],[[-1,40],[[28,[[55,[-2]],41]]],[],56],[[-1,40],[[28,[[55,[-2]],41]]],[],56],[[-1,40],[[28,[[55,[-2]],41]]],[],56],[[42,-1],[[28,[-2,57]]],2,58],[[42,-1],[[28,[[43,[-2]],57]]],2,58],[5,48],[[5,-1],5,59],0,0,0,0,0,[[],10],[[60,-1,-2],[[28,[1,61]]],62,[[64,[63]]]],[[60,-1,-2],[[28,[1,61]]],62,[[64,[63]]]],[[60,-1,-2],[[28,[1,61]]],62,[[64,[63]]]],[[60,-1,-2],[[28,[1,61]]],62,[[64,[63]]]],[[60,-1,-2],[[28,[1,61]]],62,[[64,[63]]]],[[60,-1,-2],[[28,[1,61]]],62,[[64,[63]]]],[[60,-1,-2],[[28,[1,61]]],62,[[64,[63]]]],[[60,-1,-2],[[28,[1,61]]],62,[[64,[63]]]],[[60,-1,-2],[[28,[1,61]]],62,[[64,[63]]]],0,[[12,-1],28,65],0,[[-1,[55,[-2]]],[[28,[1,41]]],[],56],[[-1,[55,[-2]]],[[28,[1,41]]],[],56],[[-1,[55,[-2]]],[[28,[1,41]]],[],56],[[-1,[55,[-2]]],[[28,[1,41]]],[],56],[[-1,[55,[-2]]],[[28,[1,41]]],[],56],[[-1,[55,[-2]]],[[28,[1,41]]],[],56],[[-1,[55,[-2]]],[[28,[1,41]]],[],56],[[-1,[55,[-2]]],[[28,[1,41]]],[],56],[[-1,[55,[-2]]],[[28,[1,41]]],[],56],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,66],[-1,15,[]],0,0,[-1,[[28,[-2]]],[],[]],[67,[[28,[7]]]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],0,[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[49,[69]]]],0,[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,[26,[[28,[1,27]]]],[26,[[28,[1,27]]]],[26,[[28,[1,27]]]],[26,[[28,[1,27]]]],[26,[[28,[1,27]]]],[26,[[28,[1,27]]]],0,0,[[],70],[[],71],[[],72],[[],73],[[],74],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[-1,[[28,[69]]],30],[-1,[[28,[70]]],30],[-1,[[28,[71]]],30],[-1,[[28,[72]]],30],[-1,[[28,[73]]],30],[-1,[[28,[74]]],30],[29,1],[29,1],[29,1],[29,1],[29,1],[29,1],0,[[69,69],48],[[-1,-2],48,[],[]],[[-1,-2],48,[],[]],[[-1,-2],48,[],[]],[[-1,-2],48,[],[]],[[-1,-2],48,[],[]],0,0,[[69,26],[[28,[1,27]]]],[[69,26],[[28,[1,27]]]],[[70,26],[[28,[1,27]]]],[[71,26],[[28,[1,27]]]],[[72,26],[[28,[1,27]]]],[[73,26],[[28,[1,27]]]],[[74,26],[[28,[1,27]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[42,[[43,[69]]]],[-1,[[28,[40,41]]],[]],[-1,[[28,[40,41]]],[]],[-1,[[28,[40,41]]],[]],[-1,[[28,[40,41]]],[]],[-1,[[28,[40,41]]],[]],[-1,[[28,[40,41]]],[]],[[-1,-2],75,[76,77],78],[[69,-1],1,79],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[44]]],[]],[[[19,[-1]]],[[19,[44]]],[]],[[[19,[-1]]],[[19,[44]]],[]],[[[19,[-1]]],[[19,[44]]],[]],[[[19,[-1]]],[[19,[44]]],[]],[[[19,[-1]]],[[19,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[46,[-1]]],[[46,[44]]],[]],[[[46,[-1]]],[[46,[44]]],[]],[[[46,[-1]]],[[46,[44]]],[]],[[[46,[-1]]],[[46,[44]]],[]],[[[46,[-1]]],[[46,[44]]],[]],[[[46,[-1]]],[[46,[44]]],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],0,0,[[-1,40],[[28,[[55,[-2]],41]]],[],56],[[-1,40],[[28,[[55,[-2]],41]]],[],56],[[-1,40],[[28,[[55,[-2]],41]]],[],56],[[-1,40],[[28,[[55,[-2]],41]]],[],56],[[-1,40],[[28,[[55,[-2]],41]]],[],56],[[-1,40],[[28,[[55,[-2]],41]]],[],56],[[60,-1,-2],[[28,[1,61]]],62,[[64,[63]]]],[[60,-1,-2],[[28,[1,61]]],62,[[64,[63]]]],[[60,-1,-2],[[28,[1,61]]],62,[[64,[63]]]],[[60,-1,-2],[[28,[1,61]]],62,[[64,[63]]]],[[60,-1,-2],[[28,[1,61]]],62,[[64,[63]]]],[[60,-1,-2],[[28,[1,61]]],62,[[64,[63]]]],0,0,0,0,[[69,-1],28,65],[[70,-1],28,65],[[71,-1],28,65],[[72,-1],28,65],[[73,-1],28,65],[[74,-1],28,65],[[-1,[55,[-2]]],[[28,[1,41]]],[],56],[[-1,[55,[-2]]],[[28,[1,41]]],[],56],[[-1,[55,[-2]]],[[28,[1,41]]],[],56],[[-1,[55,[-2]]],[[28,[1,41]]],[],56],[[-1,[55,[-2]]],[[28,[1,41]]],[],56],[[-1,[55,[-2]]],[[28,[1,41]]],[],56],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,15,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0],"c":[],"p":[[15,"tuple"],[8,"Iterator",591],[3,"BaseVmConfig",0],[8,"CastFrom",592],[4,"FunctionOutcome",0],[4,"ControlFlow",593],[3,"Args",0],[3,"JError",0],[3,"ParticleParams",0],[3,"NetworkKey",0],[3,"SwarmConfig",0],[3,"ChainConfig",0],[3,"Particle",594],[4,"PeerScope",595],[3,"String",596],[3,"PeerId",597],[6,"AVMRunner",598],[3,"Node",599],[3,"Box",600],[4,"KeyPair",601],[3,"ResolvedConfig",602],[3,"Span",603],[3,"PersistenceTask",604],[8,"Fn",605],[8,"AquaRuntime",606],[3,"Formatter",607],[3,"Error",607],[4,"Result",608],[15,"usize"],[8,"Deserializer",609],[3,"CreatedSwarm",0],[6,"Result",607],[8,"Error",610],[15,"never"],[15,"u8"],[15,"array"],[3,"Report",611],[4,"Infallible",612],[8,"Into",612],[3,"FdFlags",613],[3,"Error",614],[15,"str"],[4,"Option",615],[8,"Any",616],[3,"Arc",617],[3,"Rc",618],[3,"Request",619],[15,"bool"],[3,"Vec",620],[8,"FnMut",605],[3,"Duration",621],[4,"Transport",622],[8,"AsRef",612],[3,"Multiaddr",623],[3,"SetFdFlags",613],[8,"AsFilelike",624],[4,"ArgsError",625],[8,"Deserialize",609],[8,"FnOnce",605],[3,"RawCodec",626],[3,"Error",627],[8,"Read",628],[3,"Cid",629],[8,"Extend",630],[8,"Serializer",631],[3,"ParticleParameters",632],[3,"CallRequestParams",633],[3,"TypeId",616],[4,"ServiceKey",362],[3,"SystemServicesConfig",362],[3,"AquaIpfsConfig",362],[3,"ConnectorConfig",362],[3,"DeciderConfig",362],[3,"RegistryConfig",362],[15,"u64"],[8,"Hash",634],[8,"Sized",635],[8,"BuildHasher",634],[8,"Hasher",634],[13,"NotDefined",360]],"b":[[120,"impl-Debug-for-JError"],[121,"impl-Display-for-JError"],[158,"impl-FromResidual%3CResult%3CInfallible,+E%3E%3E-for-FunctionOutcome"],[159,"impl-FromResidual-for-FunctionOutcome"],[452,"impl-Display-for-ServiceKey"],[453,"impl-Debug-for-ServiceKey"]]},\
"fluence_libp2p":{"doc":"","t":"NNDDELLLLLLLFFLLLLLLLLLOLLLLLLLLLLLLLOLLLLLLAOLLAFLLLLLLLLLLLLLLLLLLLLFFFF","n":["Memory","Network","PeerId","RandomPeerId","Transport","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_memory_transport","build_transport","clone","clone","clone_into","clone_into","cmp","deserialize","eq","equivalent","equivalent","event_polling","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_maddr","from_multihash","from_public_key","from_str","generate_swarm_event_type","hash","into","into","into","is_network","partial_cmp","peerid_serializer_opt","poll_loop","random","random","random_multiaddr","remote_multiaddr","serialize","to_base58","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","deserialize","serialize","create_memory_maddr","create_tcp_maddr"],"q":[[0,"fluence_libp2p"],[70,"fluence_libp2p::peerid_serializer_opt"],[72,"fluence_libp2p::random_multiaddr"],[74,"multihash::multihash"],[75,"libp2p_identity::keypair"],[76,"core::time"],[77,"libp2p_core::muxing::boxed"],[78,"libp2p_core::transport::boxed"],[79,"core::cmp"],[80,"core::result"],[81,"serde::de"],[82,"core::fmt"],[83,"core::fmt"],[84,"multiaddr"],[85,"core::hash"],[86,"core::option"],[87,"libp2p_core::connection"],[88,"serde::ser"],[89,"alloc::string"],[90,"alloc::vec"],[91,"core::any"]],"d":["","","Identifier of a peer of the network.","","","","","","","","","","","","","","","","","","","","","Intended to simplify simple polling functions that just …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Parses a <code>PeerId</code> from bytes.","","Tries to turn a <code>Multihash</code> into a <code>PeerId</code>.","Builds a <code>PeerId</code> from a public key.","","Generates a type of events produced by Swarm by its name","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Generates PeerId from random Ed25519 key","Generates a random peer ID from a cryptographically secure …","","Retrieves multiaddr of the remote peer","","Returns a base-58 encoded string of this <code>PeerId</code>.","Returns a raw bytes representation of this <code>PeerId</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[8,8,0,0,0,1,29,8,1,29,8,1,0,0,8,1,8,1,1,8,1,1,1,0,8,1,1,29,8,1,1,1,1,8,1,1,1,0,1,29,8,1,8,1,0,0,29,1,0,0,8,1,1,8,1,1,29,8,1,1,1,29,8,1,29,8,1,29,8,1,0,0,0,0],"f":[0,0,0,0,0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,4],[[7,[[6,[1,5]]]]]],[[8,3,4],[[7,[[6,[1,5]]]]]],[8,8],[1,1],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[1,1],9],[-1,[[10,[8]]],11],[[1,1],12],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],0,[[8,13],14],[[1,13],[[10,[6,15]]]],[[1,13],[[10,[6,15]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[16,1],[16,1],[[[18,[17]]],[[10,[1,19]]]],[20,8],[2,[[10,[1,2]]]],[16,1],[21,[[10,[1]]]],0,[[1,-1],6,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,12],[[1,1],[[23,[9]]]],0,0,[[],1],[[],1],0,[24,20],[[8,-1],10,25],[1,26],[1,[[27,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,26,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[2,[[10,[1]]]],[-1,[[10,[-2]]],[],[]],[[[27,[17]]],[[10,[1]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[[23,[1]]]]],11],[[[23,[1]],-1],10,25],[[],20],[[],20]],"c":[],"p":[[3,"PeerId",0],[3,"Multihash",74],[3,"Keypair",75],[3,"Duration",76],[3,"StreamMuxerBox",77],[15,"tuple"],[3,"Boxed",78],[4,"Transport",0],[4,"Ordering",79],[4,"Result",80],[8,"Deserializer",81],[15,"bool"],[3,"Formatter",82],[6,"Result",82],[3,"Error",82],[3,"PublicKey",75],[15,"u8"],[15,"slice"],[4,"ParseError",83],[3,"Multiaddr",84],[15,"str"],[8,"Hasher",85],[4,"Option",86],[4,"ConnectedPoint",87],[8,"Serializer",88],[3,"String",89],[3,"Vec",90],[3,"TypeId",91],[3,"RandomPeerId",0]],"b":[[25,"impl-Debug-for-PeerId"],[26,"impl-Display-for-PeerId"],[30,"impl-From%3CPublicKey%3E-for-PeerId"],[31,"impl-From%3C%26PublicKey%3E-for-PeerId"],[58,"impl-TryFrom%3CMultihash%3C64%3E%3E-for-PeerId"],[60,"impl-TryFrom%3CVec%3Cu8%3E%3E-for-PeerId"]]},\
"fs_utils":{"doc":"","t":"NNENLLFFFFFFFLLLLFFFFFFLFLLLLMMMMMM","n":["CreateDir","DeserializeData","LoadDataError","ReadPersistedData","borrow","borrow_mut","canonicalize","copy_dir_all","create_dir","create_dir_write_only","create_dirs","file_name","file_stem","fmt","fmt","from","into","list_files","load_persisted_data","remove_dir","remove_dirs","remove_file","set_write_only","source","to_abs_path","to_string","try_from","try_into","type_id","err","err","err","path","path","path"],"q":[[0,"fs_utils"],[29,"fs_utils::LoadDataError"],[35,"std::path"],[36,"eyre"],[37,"std::path"],[38,"std::io::error"],[39,"core::result"],[40,"core::fmt"],[41,"alloc::string"],[42,"core::fmt"],[43,"core::option"],[44,"alloc::vec"],[45,"core::error"],[46,"core::any"]],"d":["","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","List files in directory","Load some data from disk in parallel","","","","","","","","","","","","","","","",""],"i":[11,11,0,11,11,11,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,11,0,11,11,11,11,19,20,21,19,20,21],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[2,[1]]],[[4,[3]]]],[[-1,-2],[[2,[5]]],[[4,[3]]],[[4,[3]]]],[-1,[[7,[5,6]]],[[4,[3]],8]],[-1,[[7,[5,6]]],[[4,[3]],8]],[[[9,[-1]]],[[7,[5,6]]],[[4,[3]],8]],[-1,[[2,[10]]],[[4,[3]]]],[-1,[[2,[10]]],[[4,[3]]]],[[11,12],13],[[11,12],13],[-1,-1,[]],[-1,-2,[],[]],[3,[[15,[[0,[14]]]]]],[3,[[7,[[16,[[5,[-1,1]]]],11]]],[]],[3,[[7,[5,6]]]],[[[9,[-1]]],[[7,[5,6]]],[[4,[3]],8]],[3,[[7,[5,6]]]],[3,[[7,[5,6]]]],[11,[[15,[17]]]],[1,1],[-1,10,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,18,[]],0,0,0,0,0,0],"c":[],"p":[[3,"PathBuf",35],[6,"Result",36],[3,"Path",35],[8,"AsRef",37],[15,"tuple"],[3,"Error",38],[4,"Result",39],[8,"Debug",40],[15,"slice"],[3,"String",41],[4,"LoadDataError",0],[3,"Formatter",40],[6,"Result",40],[8,"Iterator",42],[4,"Option",43],[3,"Vec",44],[8,"Error",45],[3,"TypeId",46],[13,"CreateDir",29],[13,"ReadPersistedData",29],[13,"DeserializeData",29]],"b":[[13,"impl-Debug-for-LoadDataError"],[14,"impl-Display-for-LoadDataError"]]},\
"gpu_utils":{"doc":"","t":"ENNNDNLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLL","n":["PciError","PciInfoEnumerationError","PciInfoError","PciInfoPropertyError","PciLocation","UnsupportedProperty","borrow","borrow","borrow_mut","borrow_mut","bus","bus_number","clone","clone_into","cmp","device","eq","fmt","fmt","fmt","fmt","from","from","from","from","function","get_gpu_pci","hash","into","into","partial_cmp","segment","source","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_bdf","with_bdf_u16","with_segment"],"q":[[0,"gpu_utils"],[45,"pci_info::pci_bus_number"],[46,"core::cmp"],[47,"core::fmt"],[48,"core::fmt"],[49,"pci_info::error::pci_info_error"],[50,"pci_info::error::pci_info_enumeration_error"],[51,"std::collections::hash::set"],[52,"core::hash"],[53,"core::option"],[54,"core::error"],[55,"alloc::string"],[56,"core::any"]],"d":["","","","","A location in the PCI hierarchy (i.e. a …","","","","","","Gets the bus component of the PCI location","Gets the bus component of the PCI location as a …","","","","Gets the device component of the PCI location","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Gets the function component of the PCI location","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Gets the segment (sometimes called PCI domain) component …","","","","","","","","","","","Creates a new <code>PciLocation</code> with an empty segment","Creates a new <code>PciLocation</code> with an empty segment starting …","Creates a new <code>PciLocation</code> also specifying the PCI segment"],"i":[0,7,7,7,0,7,7,1,7,1,1,1,1,1,1,1,1,7,7,1,1,7,7,7,1,1,0,1,7,1,1,1,7,1,7,1,7,1,7,1,7,1,1,1,1],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[1,3],[1,1],[[-1,-2],4,[],[]],[[1,1],5],[1,2],[[1,1],6],[[7,8],9],[[7,8],9],[[1,8],[[11,[4,10]]]],[[1,8],[[11,[4,10]]]],[12,7],[13,7],[-1,-1,[]],[-1,-1,[]],[1,2],[[],[[11,[[14,[1]],7]]]],[[1,-1],4,15],[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],[[16,[5]]]],[1,17],[7,[[16,[18]]]],[-1,-2,[],[]],[-1,19,[]],[-1,19,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[[2,2,2],[[11,[1,12]]]],[17,1],[[17,2,2,2],[[11,[1,12]]]]],"c":[],"p":[[3,"PciLocation",0],[15,"u8"],[3,"PciBusNumber",45],[15,"tuple"],[4,"Ordering",46],[15,"bool"],[4,"PciError",0],[3,"Formatter",47],[6,"Result",47],[3,"Error",47],[4,"Result",48],[4,"PciInfoError",49],[3,"PciDeviceEnumerationError",50],[3,"HashSet",51],[8,"Hasher",52],[4,"Option",53],[15,"u16"],[8,"Error",54],[3,"String",55],[3,"TypeId",56]],"b":[[17,"impl-Debug-for-PciError"],[18,"impl-Display-for-PciError"],[19,"impl-Display-for-PciLocation"],[20,"impl-Debug-for-PciLocation"],[21,"impl-From%3CPciInfoError%3E-for-PciError"],[22,"impl-From%3CPciDeviceEnumerationError%3E-for-PciError"]]},\
"health":{"doc":"Health check registry implementation.","t":"NIDENNLLLLLLLLLLLLLKLLLLLLL","n":["Fail","HealthCheck","HealthCheckRegistry","HealthStatus","Ok","Warning","borrow","borrow","borrow_mut","borrow_mut","default","eq","fmt","from","from","into","into","new","register","status","status","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"health"],[27,"core::fmt"],[28,"core::fmt"],[29,"core::result"],[30,"core::any"]],"d":["","","","The result of the health check, which can be one of the …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[2,0,0,0,2,2,1,2,1,2,1,2,2,1,2,1,2,1,1,8,1,1,2,1,2,1,2],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[2,2],3],[[2,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[1,6,-1],7,8],[-1,[[9,[7]]],[]],[1,2],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]]],"c":[],"p":[[3,"HealthCheckRegistry",0],[4,"HealthStatus",0],[15,"bool"],[3,"Formatter",27],[6,"Result",27],[15,"str"],[15,"tuple"],[8,"HealthCheck",0],[6,"Result",28],[4,"Result",29],[3,"TypeId",30]],"b":[]},\
"hex_utils":{"doc":"","t":"ENNNLLLLFFFFLLLLLALLLLLMMDLLLLLLLLL","n":["FromHexError","InvalidHexCharacter","InvalidStringLength","OddLength","borrow","borrow_mut","clone","clone_into","decode_hex","encode_hex_0x","encode_hex_0x_zero_pad","encode_hex_no_prefix","eq","fmt","fmt","from","into","serde_as","to_owned","to_string","try_from","try_into","type_id","c","index","Hex","borrow","borrow_mut","deserialize_as","from","into","serialize_as","try_from","try_into","type_id"],"q":[[0,"hex_utils"],[23,"hex_utils::FromHexError"],[25,"hex_utils::serde_as"],[35,"alloc::vec"],[36,"core::result"],[37,"alloc::string"],[38,"core::convert"],[39,"core::fmt"],[40,"core::fmt"],[41,"serde::de"],[42,"hex"],[43,"hex"]],"d":["The error type for decoding a hex string into <code>Vec&lt;u8&gt;</code> or …","An invalid character was found. Valid ones are: <code>0...9</code>, …","If the hex string is decoded into a fixed sized container, …","A hex string’s length needs to be even, as two digits …","","","","","Decode hex to bytes tolerating absence and presence of 0x …","Encode bytes to hex with 0x prefix","Encode bytes to hex with 0x prefix and zero padding of a …","A simple renaming to force to consider the absence of ‘0x…","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","",""],"i":[0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,19,19,0,20,20,20,20,20,20,20,20,20],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[3,[[6,[[5,[4]],1]]]],[-1,7,[[9,[[8,[4]]]]]],[[-1,10],7,[[9,[[8,[4]]]]]],[-1,7,[[9,[[8,[4]]]]]],[[1,1],11],[[1,12],[[6,[2,13]]]],[[1,12],[[6,[2,13]]]],[-1,-1,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,7,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,14,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],15,16],[-1,-1,[]],[-1,-2,[],[]],[[-1,-2],6,17,18],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,14,[]]],"c":[],"p":[[4,"FromHexError",0],[15,"tuple"],[15,"str"],[15,"u8"],[3,"Vec",35],[4,"Result",36],[3,"String",37],[15,"slice"],[8,"AsRef",38],[15,"usize"],[15,"bool"],[3,"Formatter",39],[3,"Error",39],[3,"TypeId",40],[8,"Deserializer",41],[8,"FromHex",42],[8,"ToHex",42],[8,"Serializer",43],[13,"InvalidHexCharacter",23],[3,"Hex",25]],"b":[[13,"impl-Display-for-FromHexError"],[14,"impl-Debug-for-FromHexError"]]},\
"ivalue_utils":{"doc":"","t":"NNNNNNNNNNNNNNEENNNNNNNNNNNNNNNNNNNNSSFLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLF","n":["Array","Array","Boolean","Boolean","ByteArray","ByteArray","F32","F32","F64","F64","I32","I32","I64","I64","IType","IValue","Record","Record","S16","S16","S32","S32","S64","S64","S8","S8","String","String","U16","U16","U32","U32","U64","U64","U8","U8","VARIANT_COUNT","VARIANT_COUNT","as_str","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","eq","eq","equivalent","equivalent","equivalent","error","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","into","into","into_record","into_record_opt","into_string","ok","parse","serialize","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unit"],"q":[[0,"ivalue_utils"],[91,"core::option"],[92,"core::result"],[93,"serde::de"],[94,"serde_json::value"],[95,"core::fmt"],[96,"core::fmt"],[97,"alloc::string"],[98,"core::hash"],[99,"wast::parser"],[100,"wast"],[101,"serde::ser"],[102,"std::io::error"],[103,"std::io"],[104,"core::any"]],"d":["An array of values of the same type.","A byte array.","Boolean.","Boolean value.","Specialization of arrays for byte vector.","Specialization of array type for byte vector.","A 32-bits float.","A 32-bits float.","A 64-bits float.","A 64-bits float.","A 32-bits integer (as defined in WebAssembly core).","A 32-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","Represents the types supported by WIT.","A WIT value.","A record contains record index from interfaces AST.","A record.","A 16-bits signed integer.","A 16-bits signed integer.","A 32-bits signed integer.","A 32-bits signed integer.","A 64-bits signed integer.","A 64-bits signed integer.","A 8-bits signed integer.","A 8-bits signed integer.","A string.","A string.","A 16-bits unsigned integer.","A 16-bits unsigned integer.","A 32-bits unsigned integer.","A 32-bits unsigned integer.","A 64-bits unsigned integer.","A 64-bits unsigned integer.","A 8-bits unsigned integer.","A 8-bits unsigned integer.","","","","","","","","","","","","","","","","","","","Converts erroneous result of call_service into …","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts result of call_service into <code>IValue::Record</code>","Converts result of call_service into <code>IValue::Record</code>","","Converts successful result of call_service into …","","","","","","","","","","","","","Converts empty result of call_service into <code>IValue::Record</code>"],"i":[4,1,4,1,4,1,4,1,4,1,4,1,4,1,0,0,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,0,4,1,4,1,4,1,4,1,1,4,4,1,4,4,4,0,4,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,1,0,0,0,0,4,4,4,4,1,4,4,1,4,1,4,1,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,4],[1,1],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],1],[-1,[[6,[4]]],7],[[4,4],8],[[1,1],8],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[9,[[3,[1]]]],[[4,10],[[6,[5,11]]]],[[1,10],[[6,[5,11]]]],[-1,-1,[]],[12,1],[13,1],[-1,-1,[]],[14,1],[15,1],[16,1],[17,1],[18,1],[19,1],[20,1],[21,1],[[[22,[12]]],1],[23,1],[[4,-1],5,24],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[9,9]]],[[3,[1]]]],[[[6,[[3,[9]],9]]],[[3,[1]]]],[1,[[3,[23]]]],[9,[[3,[1]]]],[25,[[6,[4,26]]]],[[4,-1],6,27],[[4,-1],[[6,[5,28]]],29],[-1,-2,[],[]],[-1,-2,[],[]],[4,23],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[[],[[3,[1]]]]],"c":[],"p":[[4,"IValue",0],[15,"str"],[4,"Option",91],[4,"IType",0],[15,"tuple"],[4,"Result",92],[8,"Deserializer",93],[15,"bool"],[4,"Value",94],[3,"Formatter",95],[3,"Error",95],[15,"u8"],[15,"f32"],[15,"u32"],[15,"i16"],[15,"i64"],[15,"u16"],[15,"i8"],[15,"u64"],[15,"f64"],[15,"i32"],[3,"Vec",96],[3,"String",97],[8,"Hasher",98],[3,"Parser",99],[3,"Error",100],[8,"Serializer",101],[3,"Error",102],[8,"Write",103],[3,"TypeId",104]],"b":[[58,"impl-From%3Cu8%3E-for-IValue"],[59,"impl-From%3Cf32%3E-for-IValue"],[61,"impl-From%3Cu32%3E-for-IValue"],[62,"impl-From%3Ci16%3E-for-IValue"],[63,"impl-From%3Ci64%3E-for-IValue"],[64,"impl-From%3Cu16%3E-for-IValue"],[65,"impl-From%3Ci8%3E-for-IValue"],[66,"impl-From%3Cu64%3E-for-IValue"],[67,"impl-From%3Cf64%3E-for-IValue"],[68,"impl-From%3Ci32%3E-for-IValue"],[69,"impl-From%3CVec%3Cu8%3E%3E-for-IValue"],[70,"impl-From%3CString%3E-for-IValue"]]},\
"json_utils":{"doc":"","t":"AFFFFF","n":["base64_serde","err_as_value","into_array","into_string","deserialize","serialize"],"q":[[0,"json_utils"],[4,"json_utils::base64_serde"],[6,"serde_json::value"],[7,"core::fmt"],[8,"core::fmt"],[9,"core::option"],[10,"alloc::string"],[11,"core::result"],[12,"serde::de"],[13,"serde::ser"]],"d":["","Converts an error into IValue::String","","","",""],"i":[0,0,0,0,0,0],"f":[0,[-1,1,[2,3]],[1,[[5,[[4,[1]]]]]],[1,[[5,[6]]]],[-1,[[8,[[4,[7]]]]],9],[[[4,[7]],-1],8,10]],"c":[],"p":[[4,"Value",6],[8,"Debug",7],[8,"Display",7],[3,"Vec",8],[4,"Option",9],[3,"String",10],[15,"u8"],[4,"Result",11],[8,"Deserializer",12],[8,"Serializer",13]],"b":[]},\
"kademlia":{"doc":"","t":"NNNENDDIDENNNNNNNKLLLMKLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLKLLMKLLLLLMMMLLMMLMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMM","n":["AddContact","Bootstrap","Cancelled","Command","DiscoverPeer","Kademlia","KademliaApi","KademliaApiT","KademliaConfig","KademliaError","LocalLookup","Neighborhood","NoKnownPeers","NoPeersFound","PeerBanned","PeerTimedOut","QueryTimedOut","add_contact","add_contact","add_contact","add_kad_node","ban_cooldown","bootstrap","bootstrap","bootstrap","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","discover_peer","discover_peer","discover_peer","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","handle_established_inbound_connection","handle_established_outbound_connection","handle_pending_inbound_connection","handle_pending_outbound_connection","into","into","into","into","into","local_lookup","local_lookup","local_lookup","max_packet_size","neighborhood","neighborhood","neighborhood","new","on_connection_handler_event","on_swarm_event","outlet","peer_fail_threshold","peer_id","poll","protocol_name","protocol_name","query_timeout","remote_neighborhood","replication_factor","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","contact","count","key","out","out","out","out","peer","peer"],"q":[[0,"kademlia"],[103,"kademlia::Command"],[112,"particle_protocol::contact"],[113,"libp2p_identity::peer_id"],[114,"multiaddr"],[115,"alloc::vec"],[116,"core::result"],[117,"futures_core::future"],[118,"tokio::sync::oneshot"],[119,"core::fmt"],[120,"core::fmt"],[121,"libp2p_swarm"],[122,"libp2p_swarm"],[123,"core::option"],[124,"multihash::multihash"],[125,"libp2p_metrics"],[126,"alloc::sync"],[127,"libp2p_swarm"],[128,"core::task::wake"],[129,"libp2p_swarm"],[130,"libp2p_swarm::stream_protocol"],[131,"alloc::string"],[132,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[14,14,9,0,14,0,0,0,0,0,14,14,9,9,9,9,9,36,3,5,3,13,36,3,5,3,14,5,13,9,3,14,5,13,9,5,13,5,13,36,3,5,14,5,13,9,9,3,14,5,13,9,3,3,3,3,3,14,5,13,9,36,3,5,13,36,3,5,3,3,3,5,13,13,3,3,13,13,3,13,5,13,9,3,14,5,13,9,3,14,5,13,9,3,14,5,13,9,3,14,5,13,9,37,38,38,39,40,41,38,39,41],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[3,1],4],[[5,1],2],[[3,6,[8,[7]]],4],0,[-1,[[11,[[10,[4,9]]]]],[]],[[3,[12,[[10,[4,9]]]]],4],[5,[[11,[[10,[4,9]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,5],[13,13],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,6],[[11,[[10,[[8,[7]],9]]]]],[]],[[3,6,[12,[[10,[[8,[7]],9]]]]],4],[[5,6],[[11,[[10,[[8,[7]],9]]]]]],[[14,15],16],[[5,15],16],[[13,15],16],[[9,15],16],[[9,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[3,17,6,7,7],[[10,[[18,[3]],19]]]],[[3,17,6,7,20],[[10,[[18,[3]],19]]]],[[3,17,7,7],[[10,[4,19]]]],[[3,17,[21,[6]],[22,[7]],20],[[10,[[8,[7]],19]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,6],[[11,[[10,[[8,[7]],9]]]]],[]],[[3,6,[12,[[8,[7]]]]],4],[[5,6],[[11,[[10,[[8,[7]],9]]]]]],0,[[-1,23,24],[[11,[[10,[[8,[6]],9]]]]],[]],[[3,23,24,[12,[[10,[[8,[6]],9]]]]],4],[[5,23,24],[[11,[[10,[[8,[6]],9]]]]]],[[13,[21,[[26,[25]]]]],[[4,[3,5]]]],[[3,6,17,[27,[3]]],4],[[3,28],4],0,0,0,[[3,29],[[32,[[31,[4,[30,[3]]]]]]]],[3,33],0,0,[[3,23,[12,[[10,[[8,[6]],9]]]]],4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,34,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Contact",112],[15,"bool"],[3,"Kademlia",0],[15,"tuple"],[3,"KademliaApi",0],[3,"PeerId",113],[3,"Multiaddr",114],[3,"Vec",115],[4,"KademliaError",0],[4,"Result",116],[6,"BoxFuture",117],[3,"Sender",118],[3,"KademliaConfig",0],[4,"Command",0],[3,"Formatter",119],[6,"Result",119],[3,"ConnectionId",120],[6,"THandler",121],[3,"ConnectionDenied",121],[4,"Endpoint",122],[4,"Option",123],[15,"slice"],[3,"Multihash",124],[15,"usize"],[3,"Metrics",125],[3,"Arc",126],[6,"THandlerOutEvent",121],[4,"FromSwarm",127],[3,"Context",128],[6,"THandlerInEvent",121],[4,"ToSwarm",127],[4,"Poll",129],[3,"StreamProtocol",130],[3,"String",131],[3,"TypeId",132],[8,"KademliaApiT",0],[13,"AddContact",103],[13,"Neighborhood",103],[13,"LocalLookup",103],[13,"Bootstrap",103],[13,"DiscoverPeer",103]],"b":[[45,"impl-Display-for-KademliaError"],[46,"impl-Debug-for-KademliaError"]]},\
"local_vm":{"doc":"","t":"DNNDNNEENNDNGNNNNNNLMLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLMMFLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLF","n":["AVMRunner","Call","CleanupData","ClientFunctionsResult","CreateAnomalyDir","CreateDataStore","DataStoreError","Instruction","None","Null","ParticleDataStore","ReadData","Returned","Seq","SerializeAnomaly","Some","StoreData","VaultError","WriteAnomaly","add","anomaly_data_store","anomaly_dir","batch_cleanup_data","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call_tracing","client_functions","clone","clone_into","create_runtime","data_file","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detect_anomaly","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","host_call","init","init","init","init","init","initialize","into","into","into","into","into","into_air","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_effects","make_particle","make_vm","make_wasm_backend","memory_stats","memory_stats","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","outcome","particle_data_store","read_args","read_data","references","references","references","references","references","returned","save_anomaly_data","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","source","store_data","to_human_readable_data","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","vault","vzip","vzip","vzip","vzip","vzip","wrap_script"],"q":[[0,"local_vm"],[173,"alloc::string"],[174,"std::path"],[175,"libp2p_identity::peer_id"],[176,"alloc::vec"],[177,"avm_interface::call_service_result"],[178,"std::collections::hash::map"],[179,"fluence_keypair::key_pair"],[180,"avm_interface::raw_outcome"],[181,"avm_server::errors"],[182,"core::result"],[183,"marine_wasm_backend_traits"],[184,"core::convert"],[185,"marine_wasmtime_backend"],[186,"avm_interface::particle_parameters"],[187,"core::future::future"],[188,"alloc::boxed"],[189,"core::pin"],[190,"core::marker"],[191,"serde_json::value"],[192,"particle_args::args"],[193,"core::task::wake"],[194,"core::fmt"],[195,"core::fmt"],[196,"core::fmt"],[197,"system_interface::fs::fd_flags"],[198,"std::io::error"],[199,"core::any"],[200,"alloc::sync"],[201,"alloc::rc"],[202,"aquamarine::particle_effects"],[203,"particle_protocol::particle"],[204,"core::option"],[205,"std::path"],[206,"avm_server::runner"],[207,"libipld_core::raw"],[208,"anyhow"],[209,"std::io"],[210,"cid::cid"],[211,"core::iter::traits::collect"],[212,"core::error"],[213,"core::any"]],"d":["","","","","","","","","No value.","","","","","","","Some value of type <code>T</code>.","","","","","","Returns $ANOMALY_DATA_STORE/$particle_id/$timestamp","","","","","","","","","","","","","","","","","","Creates <code>AVM</code> in background (on blocking threadpool)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Create AVM with the provided config.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,38,0,38,38,0,0,42,1,0,38,0,1,38,42,38,38,38,1,3,3,3,1,30,11,3,38,1,30,11,3,38,11,11,11,0,3,3,11,3,1,30,11,3,38,1,30,11,3,38,1,30,11,3,38,3,1,30,11,3,38,1,1,1,1,1,1,1,30,3,38,38,1,30,11,3,38,38,1,30,11,3,38,0,1,30,11,3,38,3,1,30,11,3,38,1,1,30,11,3,38,1,30,11,3,38,1,30,11,3,38,11,0,0,0,11,11,11,3,1,30,11,3,38,30,3,0,3,1,30,11,3,38,30,3,1,30,11,3,38,38,3,11,3,38,1,30,11,3,38,1,30,11,3,38,1,30,11,3,38,1,30,11,3,38,3,1,30,11,3,38,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],0,[[3,4,4,[6,[5]]],7],[[3,[9,[[10,[2,8,[9,[5]],2]]]]],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[11,[-1]],-2,-3,-4,-5,12,13,-6,[15,[13,14]],16,2],[[19,[17,18]]],20,[[21,[2]]],[[21,[[9,[5]]]]],[[21,[[9,[5]]]]],[[21,[2]]],[[21,[2]]]],[[[11,[22]],-1,-2,-3,23,[15,[13,14]],16],[[26,[[25,[24]]]]],[[21,[2]],27],[[21,[[9,[5]]]],27],[[21,[[9,[5]]]],27]],[[[11,[-1]],-2,-3,-4,-5,12,13,-6,[15,[13,14]],2,5,5,[9,[5]],2],[[19,[17,18]]],20,[[21,[2]]],[[21,[[9,[5]]]]],[[21,[[9,[5]]]]],[[21,[2]]],[[21,[2]]]],[[[15,[2,28]],29],30],[3,3],[[-1,-2],10,[],[]],[[22,31],[[19,[[11,[22]]]]]],[[3,4,4,[6,[5]]],7],[32,[[19,[10,33]]]],[32,[[19,[10,33]]]],[32,[[19,[10,33]]]],[32,[[19,[10,33]]]],[32,[[19,[10,33]]]],[34,-1,[]],[34,-1,[]],[34,-1,[]],[34,-1,[]],[34,-1,[]],[34,-1,[]],[34,-1,[]],[34,-1,[]],[34,-1,[]],[34,-1,[]],[[3,35,34,17],36],[34,10],[34,10],[34,10],[34,10],[34,10],[[1,1],36],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[1,32],37],[[30,32],37],[[3,32],[[19,[10,33]]]],[[38,32],[[19,[10,33]]]],[[38,32],[[19,[10,33]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[39,38],[-1,-1,[]],[-1,[[19,[40,41]]],[]],[-1,[[19,[40,41]]],[]],[-1,[[19,[40,41]]],[]],[-1,[[19,[40,41]]],[]],[-1,[[19,[40,41]]],[]],[[[15,[2,28]],29],[[10,[14,42]]]],[[],34],[[],34],[[],34],[[],34],[[],34],[3,[[19,[10,38]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[[[25,[-1]]],[[25,[43]]],[]],[[[25,[-1]]],[[25,[43]]],[]],[[[25,[-1]]],[[25,[43]]],[]],[[[25,[-1]]],[[25,[43]]],[]],[[[25,[-1]]],[[25,[43]]],[]],[[[44,[-1]]],[[44,[43]]],[]],[[[44,[-1]]],[[44,[43]]],[]],[[[44,[-1]]],[[44,[43]]],[]],[[[44,[-1]]],[[44,[43]]],[]],[[[44,[-1]]],[[44,[43]]],[]],[[[45,[-1]]],[[45,[43]]],[]],[[[45,[-1]]],[[45,[43]]],[]],[[[45,[-1]]],[[45,[43]]],[]],[[[45,[-1]]],[[45,[43]]],[]],[[[45,[-1]]],[[45,[43]]],[]],[[[19,[17]],2],46],[[8,[15,[2,28]],2,-1,[11,[22]],[44,[3]],36,35,16],47,[[21,[[48,[8]]]]]],[49,[[11,[22]]]],[[],22],[[[11,[-1]]],50,20],[[[11,[22]]],50],[[7,[48,[12]],51,52,-1],[[19,[[11,[-1]],18]]],20],[[7,7,7],3],[[-1,40],[[19,[[53,[-2]],41]]],[],54],[[-1,40],[[19,[[53,[-2]],41]]],[],54],[[-1,40],[[19,[[53,[-2]],41]]],[],54],[[-1,40],[[19,[[53,[-2]],41]]],[],54],[[-1,40],[[19,[[53,[-2]],41]]],[],54],0,0,[[47,8,[11,[22]],[44,[3]],16],[[48,[[19,[[9,[28]],[9,[28]]]]]]]],[[3,4,4,[6,[5]]],[[19,[[9,[5]],38]]]],[[55,-1,-2],[[19,[10,56]]],57,[[59,[58]]]],[[55,-1,-2],[[19,[10,56]]],57,[[59,[58]]]],[[55,-1,-2],[[19,[10,56]]],57,[[59,[58]]]],[[55,-1,-2],[[19,[10,56]]],57,[[59,[58]]]],[[55,-1,-2],[[19,[10,56]]],57,[[59,[58]]]],0,[[3,4,[6,[5]],[15,[13,14]],23,[6,[5]],17,35,34],[[19,[10,38]]]],[[-1,[53,[-2]]],[[19,[10,41]]],[],54],[[-1,[53,[-2]]],[[19,[10,41]]],[],54],[[-1,[53,[-2]]],[[19,[10,41]]],[],54],[[-1,[53,[-2]]],[[19,[10,41]]],[],54],[[-1,[53,[-2]]],[[19,[10,41]]],[],54],[38,[[48,[60]]]],[[3,[6,[5]],4,4,[6,[5]]],[[19,[10,38]]]],[[[11,[-1]],[9,[5]]],[[19,[2,18]]],20],[-1,-2,[],[]],[-1,2,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,[15,[2,28]],-1,36,[48,[8]]],2,[[21,[[48,[8]]]]]]],"c":[],"p":[[4,"Instruction",0],[3,"String",173],[3,"ParticleDataStore",0],[15,"str"],[15,"u8"],[15,"slice"],[3,"PathBuf",174],[3,"PeerId",175],[3,"Vec",176],[15,"tuple"],[3,"AVMRunner",0],[15,"u64"],[15,"u32"],[3,"CallServiceResult",177],[3,"HashMap",178],[4,"KeyPair",179],[3,"RawAVMOutcome",180],[4,"RunnerError",181],[4,"Result",182],[8,"WasmBackend",183],[8,"Into",184],[3,"WasmtimeWasmBackend",185],[3,"ParticleParameters",186],[8,"Future",187],[3,"Box",188],[3,"Pin",189],[8,"Send",190],[4,"Value",191],[3,"Args",192],[3,"ClientFunctionsResult",0],[3,"Waker",193],[3,"Formatter",194],[3,"Error",194],[15,"usize"],[3,"Duration",195],[15,"bool"],[6,"Result",194],[4,"DataStoreError",0],[4,"VaultError",196],[3,"FdFlags",197],[3,"Error",198],[6,"Returned",0],[8,"Any",199],[3,"Arc",200],[3,"Rc",201],[3,"ParticleEffects",202],[3,"Particle",203],[4,"Option",204],[3,"Path",174],[3,"AVMMemoryStats",205],[3,"AVMRuntimeLimits",205],[15,"i32"],[3,"SetFdFlags",197],[8,"AsFilelike",206],[3,"RawCodec",207],[3,"Error",208],[8,"Read",209],[3,"Cid",210],[8,"Extend",211],[8,"Error",212],[3,"TypeId",199]],"b":[[33,"impl-AVMRunner%3CWB%3E"],[34,"impl-AquaRuntime-for-AVMRunner%3CWasmtimeWasmBackend%3E"],[71,"impl-Display-for-DataStoreError"],[72,"impl-Debug-for-DataStoreError"],[116,"impl-AVMRunner%3CWB%3E"],[117,"impl-AquaRuntime-for-AVMRunner%3CWasmtimeWasmBackend%3E"]]},\
"log_format":{"doc":"","t":"DLLLLLLLLLLLLLLLLLL","n":["Format","borrow","borrow_mut","clone","clone_into","default","fmt","format_event","from","into","to_owned","try_from","try_into","type_id","with_display_span_list","with_level","with_target","with_timer","without_time"],"q":[[0,"log_format"],[19,"core::clone"],[20,"tracing_subscriber::fmt::time"],[21,"core::fmt"],[22,"core::fmt"],[23,"tracing_subscriber::fmt::format"],[24,"tracing_core::event"],[25,"tracing_subscriber::fmt::time"],[26,"tracing_subscriber::registry"],[27,"tracing_subscriber::fmt::format"],[28,"core::any"]],"d":["","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Sets whether or not an event’s spans is displayed.","Sets whether or not an event’s level is displayed.","Sets whether or not an event’s target is displayed.","Use the given <code>timer</code> for log message timestamps.","Do not emit timestamps with log messages."],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[1,[-1]]],2],[[-1,-2],3,[],[]],[[],[[1,[4]]]],[[[1,[-1]],5],6,7],[[[1,[-1]],[8,[-2,-3]],9,10],6,11,[12,13],14],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[[[1,[-1]],17],[[1,[-1]]],[]],[[[1,[-1]],17],[[1,[-1]]],[]],[[[1,[-1]],17],[[1,[-1]]],[]],[[[1,[-1]],-2],[[1,[-2]]],[],[]],[[[1,[-1]]],[[1,[3]]],[]]],"c":[],"p":[[3,"Format",0],[8,"Clone",19],[15,"tuple"],[3,"SystemTime",20],[3,"Formatter",21],[6,"Result",21],[8,"Debug",21],[3,"FmtContext",22],[3,"Writer",23],[3,"Event",24],[8,"FormatTime",20],[8,"Subscriber",25],[8,"LookupSpan",26],[8,"FormatFields",23],[4,"Result",27],[3,"TypeId",28],[15,"bool"]],"b":[]},\
"log_utils":{"doc":"","t":"DLLLFFLLLLLLLLLL","n":["LogSpec","borrow","borrow_mut","default","enable_logs","enable_logs_for","from","into","new","try_from","try_into","type_id","with_defaults","with_directives","with_level","with_wasm_level"],"q":[[0,"log_utils"],[16,"tracing_subscriber::filter::env::directive"],[17,"alloc::vec"],[18,"core::result"],[19,"core::any"],[20,"tracing_core::metadata"],[21,"log"]],"d":["","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],2],[1,2],[-1,-1,[]],[-1,-2,[],[]],[[[4,[3]]],1],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[1,1],[[1,[4,[3]]],1],[[1,7],1],[[1,8],1]],"c":[],"p":[[3,"LogSpec",0],[15,"tuple"],[3,"Directive",16],[3,"Vec",17],[4,"Result",18],[3,"TypeId",19],[3,"Level",20],[4,"Level",21]],"b":[]},\
"now_millis":{"doc":"","t":"FFF","n":["now","now_ms","now_sec"],"q":[[0,"now_millis"],[3,"core::time"]],"d":["Returns UNIX timestamp as Duration","Returns UNIX timestamp in milliseconds","Returns UNIX timestamp in seconds"],"i":[0,0,0],"f":[[[],1],[[],2],[[],3]],"c":[],"p":[[3,"Duration",3],[15,"u128"],[15,"u64"]],"b":[]},\
"nox":{"doc":"","t":"NNNNNEDNNNNDENNNNENNNDNNDDMLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLMMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMFMLLLLLLLLLLLMLLMLLLLLLLLLLLMLLLLLLLLLMLLLMMLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMM","n":["AddContact","Bootstrap","Connect","ConnectionLimits","ConnectionPool","ConnectionPoolCommand","Connectivity","CountConnections","Dial","Disconnect","DiscoverPeer","FluenceNetworkBehaviour","FluenceNetworkBehaviourEvent","GetContact","Identify","IsConnected","Kademlia","KademliaCommand","LifecycleEvents","LocalLookup","Neighborhood","Node","Ping","Send","StartedHttp","Versions","aquamarine_api","as_","as_","as_","as_","as_","as_","as_","as_","as_ref","as_ref","avm_version","bootstrap_frequency","bootstrap_nodes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtins","builtins_management_peer_id","chain_listener","clone","clone","clone_into","clone_into","connection_pool","connectivity","debug","debug","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discover_peer","dispatcher","drop","drop","drop","drop","drop","drop","drop","drop","env_filter","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","handle_established_inbound_connection","handle_established_outbound_connection","handle_pending_inbound_connection","handle_pending_outbound_connection","health","init","init","init","init","init","init","init","init","inject_identify_event","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kademlia","kademlia_bootstrap","listen","listen_addr","log_layer","metrics","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","node_version","on_connection_handler_event","on_swarm_event","peer_id","poll","reconnect_bootstraps","references","references","references","references","references","references","references","references","resolve_contact","scope","send","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","spell_version","start","start","swarm","swarm","system_service","to_owned","to_owned","tracing_layer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","addr","contact","out","out","out","out","out","out","out","out","particle","peer_id","peer_id","peer_id","to","contact","count","key","out","out","out","out","peer","peer"],"q":[[0,"nox"],[268,"nox::ConnectionPoolCommand"],[283,"nox::KademliaCommand"],[292,"bnum::cast"],[293,"kademlia::api"],[294,"connection_pool::api"],[295,"particle_builtins::builtins"],[296,"peer_metrics::services_metrics"],[297,"workers::key_storage"],[298,"alloc::sync"],[299,"workers::workers"],[300,"workers::scope"],[301,"health"],[302,"core::option"],[303,"particle_builtins::builtins"],[304,"core::fmt"],[305,"libp2p_identity::peer_id"],[306,"particle_protocol::contact"],[307,"kademlia::error"],[308,"tracing_subscriber::layer"],[309,"tracing_core::subscriber"],[310,"tracing_subscriber::registry"],[311,"core::fmt"],[312,"std::io::error"],[313,"libp2p_swarm::connection"],[314,"multiaddr"],[315,"libp2p_swarm"],[316,"libp2p_swarm"],[317,"alloc::vec"],[318,"libp2p_identify::behaviour"],[319,"alloc::boxed"],[320,"core::any"],[321,"alloc::rc"],[322,"tonic::request"],[323,"libp2p_core::transport"],[324,"aquamarine::aqua_runtime"],[325,"core::convert"],[326,"tracing_appender::non_blocking"],[327,"server_config::resolved_config"],[328,"core_distributor::distributor"],[329,"cpu_utils::pinning"],[330,"aquamarine::config"],[331,"system_services::distro"],[332,"eyre"],[333,"server_config::network_config"],[334,"peer_metrics::connectivity"],[335,"peer_metrics::connection_pool"],[336,"particle_protocol::particle"],[337,"tokio::sync::mpsc::bounded"],[338,"alloc::string"],[339,"system_services::distro"],[340,"libp2p_swarm"],[341,"core::task::wake"],[342,"libp2p_swarm"],[343,"libipld_core::raw"],[344,"anyhow"],[345,"std::io"],[346,"cid::cid"],[347,"core::iter::traits::collect"],[348,"libp2p_identity::keypair"],[349,"libp2p_core::muxing::boxed"],[350,"libp2p_core::transport::boxed"],[351,"prometheus_client::registry"],[352,"libp2p_swarm"],[353,"aquamarine::error"],[354,"aquamarine::aquamarine"],[355,"aquamarine::aquamarine"],[356,"spell_event_bus::api"],[357,"spell_event_bus::bus"],[358,"spell_event_bus::api"],[359,"sorcerer::sorcerer"],[360,"libp2p_metrics"],[361,"peer_metrics::services_metrics::backend"],[362,"core::net::socket_addr"],[363,"chain_listener::listener"]],"d":["","","","","","","This structure is just a composition of Kademlia and …","","","","","Coordinates protocols, so they can cooperate","<code>NetworkBehaviour::ToSwarm</code> produced by …","","","","","","","","","","","","","","","","","","","","","","","","","","Bootstrap will be executed after [1, N, 2<em>N, 3</em>N, …] …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Discover a peer via Kademlia","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Run kademlia bootstrap after first bootstrap is connected, …","Starts node service listener.","","","","","","","","","","","","","","","","","","","","Dial bootstraps, and then re-dial on each disconnection","","","","","","","","","","","","","","","","","","","","","Starts node service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[26,26,27,30,30,0,0,27,27,27,26,0,0,27,30,27,30,0,27,26,26,0,30,27,0,0,47,26,27,47,2,28,33,30,14,2,2,14,2,2,26,27,47,2,28,33,30,14,26,27,47,2,28,33,30,14,47,47,47,2,14,2,14,2,47,26,27,47,2,28,33,30,14,26,27,47,2,28,33,30,14,26,27,47,2,28,33,30,14,2,47,26,27,47,2,28,33,30,14,0,26,27,28,30,14,26,27,47,2,28,33,30,14,2,2,14,14,26,27,47,2,28,33,30,14,33,33,33,33,2,26,27,47,2,28,33,30,14,33,26,27,47,2,28,33,30,14,26,27,47,2,28,33,30,14,26,27,2,28,14,26,27,47,2,28,33,30,14,26,27,47,2,28,33,30,14,2,2,47,28,0,2,47,33,14,26,27,47,2,28,33,30,14,14,33,33,2,33,2,26,27,47,2,28,33,30,14,2,47,2,26,27,47,2,28,33,30,14,14,47,2,47,47,14,2,14,0,26,27,47,2,28,33,30,14,26,27,47,2,28,33,30,14,26,27,47,2,28,33,30,14,26,27,47,2,28,33,30,14,26,27,47,2,28,33,30,14,47,100,101,101,102,100,103,104,105,106,107,102,103,104,105,102,108,109,109,110,111,112,109,110,112],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[2,3],[2,4],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[5,2,6,[8,[7]],[8,[9]],10,[12,[11]]],[[13,[2]]]],0,0,[2,2],[14,14],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],0,0,[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[[2,20],[[18,[[12,[21]],22]]]],0,[19,15],[19,15],[19,15],[19,15],[19,15],[19,15],[19,15],[19,15],[[],[[0,[[23,[-1]]]]],[24,25]],[[26,16],[[18,[15,17]]]],[[27,16],[[18,[15,17]]]],[[28,16],29],[[30,16],[[18,[15,17]]]],[[14,16],29],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[18,[31,32]]],[]],[-1,[[18,[31,32]]],[]],[-1,[[18,[31,32]]],[]],[-1,[[18,[31,32]]],[]],[-1,[[18,[31,32]]],[]],[-1,[[18,[31,32]]],[]],[-1,[[18,[31,32]]],[]],[-1,[[18,[31,32]]],[]],[[33,34,20,35,35],[[18,[[36,[33]],37]]]],[[33,34,20,35,38],[[18,[[36,[33]],37]]]],[[33,34,35,35],[[18,[15,37]]]],[[33,34,[12,[20]],[39,[35]],38],[[18,[[40,[35]],37]]]],0,[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[33,41,42],15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1]]],[[43,[44]]],[]],[[[43,[-1]]],[[43,[44]]],[]],[[[43,[-1]]],[[43,[44]]],[]],[[[43,[-1]]],[[43,[44]]],[]],[[[43,[-1]]],[[43,[44]]],[]],[[[43,[-1]]],[[43,[44]]],[]],[[[43,[-1]]],[[43,[44]]],[]],[[[43,[-1]]],[[43,[44]]],[]],[[[8,[-1]]],[[8,[44]]],[]],[[[8,[-1]]],[[8,[44]]],[]],[[[8,[-1]]],[[8,[44]]],[]],[[[8,[-1]]],[[8,[44]]],[]],[[[8,[-1]]],[[8,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[[[45,[-1]]],[[45,[44]]],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],0,[2,15],[[[47,[-1]],-2],[[18,[15,[48,[32]]]]],49,[[50,[[40,[35]]]]]],0,[[],[[15,[[0,[[23,[-1]]]],51]]],[24,25]],0,[[20,52,[8,[53]],[8,[54]],55,56,56,57],[[58,[[43,[[47,[-1]]]]]]],49],[[59,[12,[11]],[12,[60]],[12,[61]]],[[15,[33,2,[63,[62]]]]]],[[64,64,64,65],14],[[-1,31],[[18,[[66,[-2]],32]]],[],67],[[-1,31],[[18,[[66,[-2]],32]]],[],67],[[-1,31],[[18,[[66,[-2]],32]]],[],67],[[-1,31],[[18,[[66,[-2]],32]]],[],67],[[-1,31],[[18,[[66,[-2]],32]]],[],67],[[-1,31],[[18,[[66,[-2]],32]]],[],67],[[-1,31],[[18,[[66,[-2]],32]]],[],67],[[-1,31],[[18,[[66,[-2]],32]]],[],67],0,[[33,20,34,[68,[33]]],15],[[33,69],15],0,[[33,70],[[73,[[72,[[71,[33]]]]]]]],[2,15],[[74,-1,-2],[[18,[15,75]]],76,[[78,[77]]]],[[74,-1,-2],[[18,[15,75]]],76,[[78,[77]]]],[[74,-1,-2],[[18,[15,75]]],76,[[78,[77]]]],[[74,-1,-2],[[18,[15,75]]],76,[[78,[77]]]],[[74,-1,-2],[[18,[15,75]]],76,[[78,[77]]]],[[74,-1,-2],[[18,[15,75]]],76,[[78,[77]]]],[[74,-1,-2],[[18,[15,75]]],76,[[78,[77]]]],[[74,-1,-2],[[18,[15,75]]],76,[[78,[77]]]],[[2,20,56],[[12,[21]]]],0,[[2,21,62],42],[[-1,[66,[-2]]],[[18,[15,32]]],[],67],[[-1,[66,[-2]]],[[18,[15,32]]],[],67],[[-1,[66,[-2]]],[[18,[15,32]]],[],67],[[-1,[66,[-2]]],[[18,[15,32]]],[],67],[[-1,[66,[-2]]],[[18,[15,32]]],[],67],[[-1,[66,[-2]]],[[18,[15,32]]],[],67],[[-1,[66,[-2]]],[[18,[15,32]]],[],67],[[-1,[66,[-2]]],[[18,[15,32]]],[],67],0,[[[43,[[47,[-1]]]],20],[[58,[0]]],49],0,[[79,59,[81,[[15,[20,80]]]],[40,[35]],[12,[11]],[12,[82]],[12,[60]],[12,[61]]],[[58,[[15,[[83,[33]],2,[63,[62]]]]]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[84,20,56],[[58,[[12,[[0,[[23,[-1]]]]]]]]],[24,25]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[8,"CastFrom",292],[3,"Connectivity",0],[3,"KademliaApi",293],[3,"ConnectionPoolApi",294],[3,"BuiltinsConfig",295],[3,"ServicesMetrics",296],[3,"KeyStorage",297],[3,"Arc",298],[3,"Workers",299],[3,"PeerScopes",300],[3,"HealthCheckRegistry",301],[4,"Option",302],[3,"Builtins",295],[3,"Versions",0],[15,"tuple"],[3,"Formatter",303],[3,"Error",303],[4,"Result",304],[15,"usize"],[3,"PeerId",305],[3,"Contact",306],[4,"KademliaError",307],[8,"Layer",308],[8,"Subscriber",309],[8,"LookupSpan",310],[4,"KademliaCommand",0],[4,"ConnectionPoolCommand",0],[3,"StartedHttp",0],[6,"Result",303],[4,"FluenceNetworkBehaviourEvent",0],[3,"FdFlags",311],[3,"Error",312],[3,"FluenceNetworkBehaviour",0],[3,"ConnectionId",313],[3,"Multiaddr",314],[6,"THandler",315],[3,"ConnectionDenied",315],[4,"Endpoint",316],[15,"slice"],[3,"Vec",317],[4,"Event",318],[15,"bool"],[3,"Box",319],[8,"Any",320],[3,"Rc",321],[3,"Request",322],[3,"Node",0],[4,"TransportError",323],[8,"AquaRuntime",324],[8,"Into",325],[3,"WorkerGuard",326],[3,"ResolvedConfig",327],[8,"CoreDistributor",328],[8,"ThreadPinner",329],[3,"DataStoreConfig",330],[15,"str"],[3,"SystemServiceDistros",331],[6,"Result",332],[3,"NetworkConfig",333],[3,"ConnectivityMetrics",334],[3,"ConnectionPoolMetrics",335],[3,"ExtendedParticle",336],[3,"Receiver",337],[3,"String",338],[3,"Versions",331],[3,"SetFdFlags",311],[8,"AsFilelike",339],[6,"THandlerOutEvent",315],[4,"FromSwarm",340],[3,"Context",341],[6,"THandlerInEvent",315],[4,"ToSwarm",340],[4,"Poll",342],[3,"RawCodec",343],[3,"Error",344],[8,"Read",345],[3,"Cid",346],[8,"Extend",347],[3,"Keypair",348],[3,"StreamMuxerBox",349],[3,"Boxed",350],[3,"Registry",351],[3,"Swarm",315],[4,"TracingConfig",327],[3,"TypeId",320],[3,"RemoteRoutingEffects",352],[4,"AquamarineApiError",353],[3,"AquamarineApi",354],[3,"AquamarineBackend",354],[3,"Deployer",355],[3,"SpellEventBusApi",356],[3,"SpellEventBus",357],[3,"TriggerEvent",356],[3,"UnboundedReceiver",358],[3,"Sorcerer",359],[3,"Metrics",360],[3,"ServicesMetricsBackend",361],[4,"SocketAddr",362],[3,"ChainListener",363],[13,"Dial",268],[13,"Connect",268],[13,"Send",268],[13,"Disconnect",268],[13,"IsConnected",268],[13,"GetContact",268],[13,"CountConnections",268],[13,"LifecycleEvents",268],[13,"AddContact",283],[13,"Neighborhood",283],[13,"LocalLookup",283],[13,"Bootstrap",283],[13,"DiscoverPeer",283]],"b":[[35,"impl-AsRef%3CKademliaApi%3E-for-Connectivity"],[36,"impl-AsRef%3CConnectionPoolApi%3E-for-Connectivity"]]},\
"particle_args":{"doc":"","t":"ENDENNNNDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLMMLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMM","n":["AVMError","AnomalyDataSeError","Args","ArgsError","DataStoreError","DeserializeError","InterpreterFailed","InvalidFormat","JError","MissingField","NonUnaryOption","RunnerError","SerdeJson","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","debug","debug","debug","debug","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_base58","from_eyre","from_fd","from_filelike","from_grip","from_into_filelike","from_into_socketlike","from_socketlike","function_args","function_name","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","init","init","init","init","into","into","into","into","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","next","next_opt","service_id","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","source","tetraplets","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","err","err","expected_type","field","field","field","field","length","value"],"q":[[0,"particle_args"],[114,"particle_args::ArgsError"],[123,"core::fmt"],[124,"core::fmt"],[125,"core::fmt"],[126,"alloc::vec"],[127,"core::iter::traits::iterator"],[128,"eyre"],[129,"std::os::fd::owned"],[130,"io_lifetimes::portability"],[131,"io_lifetimes::portability"],[132,"std::io::error"],[133,"core::convert"],[134,"system_interface::fs::fd_flags"],[135,"core::option"],[136,"alloc::string"],[137,"avm_interface::call_request_parameters"],[138,"core::any"]],"d":["","This errors are encountered from serialization of data …","Arguments passed by VM to host on call_service","","This errors are encountered from a data store object.","","This error contains interpreter outcome in case when …","","An error that can be created from any other error …","","","This errors are encountered from an AVM runner.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Retrieves next json value from iterator, parse it to T …","Retrieves a json value from iterator if it’s not empty, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,10,0,0,10,9,10,9,0,9,9,10,9,1,9,2,10,1,9,2,10,1,2,1,2,1,9,2,10,1,9,2,10,1,9,2,10,1,9,2,10,1,9,9,2,2,10,10,1,9,2,2,2,10,10,10,0,2,10,10,10,10,10,10,1,1,1,9,2,10,1,9,2,10,1,9,2,10,2,1,9,2,10,1,1,1,1,9,2,10,10,1,1,2,9,2,10,1,1,9,2,10,1,9,2,10,1,9,2,10,1,9,2,10,33,34,35,33,34,36,35,36,35],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[4,[[6,[3,5]]]],[4,[[6,[3,5]]]],[4,[[6,[3,5]]]],[4,[[6,[3,5]]]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,3],[7,3],[7,3],[7,3],[[1,4],8],[[9,4],8],[[9,4],8],[[2,4],8],[[2,4],8],[[[10,[-1]],4],[[6,[3,5]]],11],[[[10,[-1]],4],[[6,[3,5]]],12],[-1,-1,[]],[-1,-1,[]],[-1,2,13],[14,-1,[]],[-1,-1,[]],[14,-1,[]],[-1,-1,[]],[-1,[[10,[-1]]],[]],[[15,-1],[[6,[[17,[16]],9]]],18],[19,2],[20,-1,[]],[20,-1,[]],[20,-1,[]],[-1,-2,21,[]],[-1,-2,22,[]],[20,-1,[]],0,0,[-1,[[6,[23,24]]],[]],[-1,[[6,[23,24]]],[]],[-1,[[6,[23,24]]],[]],[-1,[[6,[23,24]]],[]],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[[25,[15]]]],[[-1,23],[[6,[[26,[-2]],24]]],[],27],[[-1,23],[[6,[[26,[-2]],24]]],[],27],[[-1,23],[[6,[[26,[-2]],24]]],[],27],[[-1,23],[[6,[[26,[-2]],24]]],[],27],[[15,-1],[[6,[-2,9]]],18,28],[[15,-1],[[6,[[29,[-2]],9]]],18,28],0,[[-1,[26,[-2]]],[[6,[3,24]]],[],27],[[-1,[26,[-2]]],[[6,[3,24]]],[],27],[[-1,[26,[-2]]],[[6,[3,24]]],[],27],[[-1,[26,[-2]]],[[6,[3,24]]],[],27],[[[10,[-1]]],[[29,[13]]],13],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[31,[[6,[1]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Args",0],[3,"JError",0],[15,"tuple"],[3,"Formatter",123],[3,"Error",123],[4,"Result",124],[15,"usize"],[6,"Result",123],[4,"ArgsError",0],[4,"AVMError",0],[8,"Debug",123],[8,"Display",123],[8,"Error",125],[15,"never"],[15,"str"],[15,"u8"],[3,"Vec",126],[8,"Iterator",127],[3,"Report",128],[3,"OwnedFd",129],[8,"IntoFilelike",130],[8,"IntoSocketlike",130],[3,"FdFlags",131],[3,"Error",132],[8,"AsRef",133],[3,"SetFdFlags",131],[8,"AsFilelike",130],[8,"Deserialize",134],[4,"Option",135],[3,"String",136],[3,"CallRequestParams",137],[3,"TypeId",138],[13,"SerdeJson",114],[13,"InvalidFormat",114],[13,"DeserializeError",114],[13,"NonUnaryOption",114]],"b":[[42,"impl-Display-for-ArgsError"],[43,"impl-Debug-for-ArgsError"],[44,"impl-Display-for-JError"],[45,"impl-Debug-for-JError"],[46,"impl-Debug-for-AVMError%3CE%3E"],[47,"impl-Display-for-AVMError%3CE%3E"]]},\
"particle_builtins":{"doc":"","t":"DDDDDNENDMMMMLLLLLLLLLLLLLLLMLLLLLLLLLLMLMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLMFMMMMLLLLLLLLLLLMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMFF","n":["Builtins","BuiltinsConfig","CustomService","NodeInfo","ParticleAppServicesConfig","Port","PortInfo","Range","VmInfo","air_version","allowed_binaries","allowed_effectors","blueprint_dir","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtins_call","builtins_management_peer_id","call","call","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","connectivity","custom_service_call","custom_services","debug","debug","debug","debug","debug","debug","debug","default_service_memory_limit","default_ssh_port","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","envs","ephemeral_work_dir","extend","external_addresses","fallback","fmt","fmt","fmt","fmt","fmt","fmt","forwarded_ports","from","from","from","from","from","from","from","functions","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","ip","is_dev_mode","local_peer_id","management_peer_id","modules","modules_dir","mounted_binaries_mapping","new","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","node_version","ok","particle_app_services","particles_vault_dir","peer_id","persistent_work_dir","references","references","references","references","references","references","references","remove","serialize","serialize","serialize","services","services_dir","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","spell_version","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vm_info","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wasm_backend_config","wrap","wrap_unit"],"q":[[0,"particle_builtins"],[222,"particle_args::args"],[223,"particle_execution::particle_params"],[224,"particle_execution::function_outcome"],[225,"core::clone"],[226,"core::marker"],[227,"core::marker"],[228,"core::convert"],[229,"connection_pool::api"],[230,"core::future::future"],[231,"alloc::boxed"],[232,"core::pin"],[233,"core::fmt"],[234,"core::fmt"],[235,"alloc::string"],[236,"particle_execution::particle_function"],[237,"std::collections::hash::map"],[238,"core::option"],[239,"core::fmt"],[240,"std::io::error"],[241,"core::any"],[242,"alloc::sync"],[243,"alloc::rc"],[244,"alloc::vec"],[245,"peer_metrics::services_metrics"],[246,"workers::key_storage"],[247,"workers::workers"],[248,"workers::scope"],[249,"health"],[250,"libp2p_identity::peer_id"],[251,"std::path"],[252,"cid_utils::hash"],[253,"bytesize"],[254,"particle_services::config"],[255,"system_interface::fs::fd_flags"],[256,"serde_json::value"],[257,"libipld_core::raw"],[258,"anyhow"],[259,"std::io"],[260,"cid::cid"],[261,"core::iter::traits::collect"],[262,"serde::ser"],[263,"core::any"]],"d":["","","","","","","","","","","","List of allowed effector modules by CID","Path of the blueprint directory containing blueprints and …","","","","","","","","","","","","","","","","key to manage builtins services initialization","","","","","","","","","","","","","","","","","","","","","Default heap size in bytes available for the module unless …","","","","","","","","","","","","","","","","","","","","","","","Opaque environment variables to be passed on each service …","Ephemeral working dir for services","","","if set, all <code>function_name</code> mismatches with …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","(function_name -&gt; service function)","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Is in the developer mode","Peer id of the current node","key that could manage services","","Dir to store .wasm modules and their configs","Mapping of binary names to their paths for mounted …","","","","","","","","","","","","","","","Dir to store directories shared between services in the …","","Persistent working dir for services","","","","","","","","","","","","","Dir to persist info about running services","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","config for the wasmtime backend","",""],"i":[0,0,0,0,0,16,0,16,0,14,14,29,29,37,1,29,14,15,16,17,37,1,29,14,15,16,17,1,17,1,1,14,15,16,17,14,15,16,17,1,1,1,37,1,29,14,15,16,17,17,15,37,1,29,14,15,16,17,37,1,29,14,15,16,17,37,1,29,14,15,16,17,17,17,1,14,37,1,29,14,15,16,17,15,37,1,29,14,15,16,17,37,37,1,29,14,15,16,17,37,1,29,14,15,16,17,37,1,29,14,15,16,17,37,1,29,14,15,16,17,37,1,29,14,15,16,17,37,1,29,14,15,16,17,15,29,17,17,1,29,29,37,1,29,17,37,1,29,14,15,16,17,14,0,29,17,29,17,37,1,29,14,15,16,17,1,14,15,16,1,17,37,1,29,14,15,16,17,14,14,15,16,17,37,1,29,14,15,16,17,37,1,29,14,15,16,17,37,1,29,14,15,16,17,37,1,29,14,15,16,17,14,37,1,29,14,15,16,17,17,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]],2,3],4,[5,6,7,[9,[8]],[9,[10]]]],0,[[[1,[-1]],2,3],[[13,[[12,[11]]]]],[5,6,7,[9,[8]],[9,[10]]]],[[[1,[-1]],2,3],4,[5,6,7,[9,[8]],[9,[10]]]],[14,14],[15,15],[16,16],[17,17],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],0,[[[1,[-1]],2,3],4,[5,6,7,[9,[8]],[9,[10]]]],0,[19,[[21,[18,20]]]],[19,[[21,[18,20]]]],[19,[[21,[18,20]]]],[19,[[21,[18,20]]]],[19,[[21,[18,20]]]],[19,[[21,[18,20]]]],[19,[[21,[18,20]]]],0,0,[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,18],[22,18],[22,18],[22,18],[22,18],[22,18],[22,18],0,0,[[[1,[-1]],23,[25,[23,24]],[26,[24]]],[[13,[[12,[11]]]]],[5,6,7,[9,[8]],[9,[10]]]],0,0,[[[1,[-1]],19],27,28],[[29,19],27],[[14,19],27],[[15,19],27],[[16,19],27],[[17,19],[[21,[18,20]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,[[21,[30,31]]],[]],[-1,[[21,[30,31]]],[]],[-1,[[21,[30,31]]],[]],[-1,[[21,[30,31]]],[]],[-1,[[21,[30,31]]],[]],[-1,[[21,[30,31]]],[]],[-1,[[21,[30,31]]],[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[12,[-1]]],[[12,[32]]],[]],[[[12,[-1]]],[[12,[32]]],[]],[[[12,[-1]]],[[12,[32]]],[]],[[[12,[-1]]],[[12,[32]]],[]],[[[12,[-1]]],[[12,[32]]],[]],[[[12,[-1]]],[[12,[32]]],[]],[[[12,[-1]]],[[12,[32]]],[]],[[[33,[-1]]],[[33,[32]]],[]],[[[33,[-1]]],[[33,[32]]],[]],[[[33,[-1]]],[[33,[32]]],[]],[[[33,[-1]]],[[33,[32]]],[]],[[[33,[-1]]],[[33,[32]]],[]],[[[33,[-1]]],[[33,[32]]],[]],[[[33,[-1]]],[[33,[32]]],[]],[[[34,[-1]]],[[34,[32]]],[]],[[[34,[-1]]],[[34,[32]]],[]],[[[34,[-1]]],[[34,[32]]],[]],[[[34,[-1]]],[[34,[32]]],[]],[[[34,[-1]]],[[34,[32]]],[]],[[[34,[-1]]],[[34,[32]]],[]],[[[34,[-1]]],[[34,[32]]],[]],0,0,0,0,0,0,0,[[[36,[[18,[35,24]]]],[26,[24]]],37],[[29,-1,38,[33,[39]],[33,[40]],41,[26,[42]]],[[1,[-1]]],[5,6,7,[9,[8]],[9,[10]]]],[[43,17,44,[25,[45,[25,[23,44]]]],[25,[23,44]],46],[[21,[29,31]]]],[[43,44,44,44,[25,[23,23]],43,43,[26,[47]],48],[[21,[17,31]]]],[[-1,30],[[21,[[49,[-2]],31]]],[],50],[[-1,30],[[21,[[49,[-2]],31]]],[],50],[[-1,30],[[21,[[49,[-2]],31]]],[],50],[[-1,30],[[21,[[49,[-2]],31]]],[],50],[[-1,30],[[21,[[49,[-2]],31]]],[],50],[[-1,30],[[21,[[49,[-2]],31]]],[],50],[[-1,30],[[21,[[49,[-2]],31]]],[],50],0,[51,4],0,0,0,0,[[52,-1,-2],[[21,[18,53]]],54,[[56,[55]]]],[[52,-1,-2],[[21,[18,53]]],54,[[56,[55]]]],[[52,-1,-2],[[21,[18,53]]],54,[[56,[55]]]],[[52,-1,-2],[[21,[18,53]]],54,[[56,[55]]]],[[52,-1,-2],[[21,[18,53]]],54,[[56,[55]]]],[[52,-1,-2],[[21,[18,53]]],54,[[56,[55]]]],[[52,-1,-2],[[21,[18,53]]],54,[[56,[55]]]],[[[1,[-1]],35],[[13,[[12,[11]]]]],[5,6,7,[9,[8]],[9,[10]]]],[[14,-1],21,57],[[15,-1],21,57],[[16,-1],21,57],0,0,[[-1,[49,[-2]]],[[21,[18,31]]],[],50],[[-1,[49,[-2]]],[[21,[18,31]]],[],50],[[-1,[49,[-2]]],[[21,[18,31]]],[],50],[[-1,[49,[-2]]],[[21,[18,31]]],[],50],[[-1,[49,[-2]]],[[21,[18,31]]],[],50],[[-1,[49,[-2]]],[[21,[18,31]]],[],50],[[-1,[49,[-2]]],[[21,[18,31]]],[],50],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[21,[51,59]]],4],[[[21,[18,59]]],4]],"c":[],"p":[[3,"Builtins",0],[3,"Args",222],[3,"ParticleParams",223],[4,"FunctionOutcome",224],[8,"Clone",225],[8,"Send",226],[8,"Sync",226],[3,"KademliaApi",227],[8,"AsRef",228],[3,"ConnectionPoolApi",229],[8,"Future",230],[3,"Box",231],[3,"Pin",232],[3,"NodeInfo",0],[3,"VmInfo",0],[4,"PortInfo",0],[3,"ParticleAppServicesConfig",0],[15,"tuple"],[3,"Formatter",233],[3,"Error",233],[4,"Result",234],[15,"usize"],[3,"String",235],[4,"ServiceFunction",236],[3,"HashMap",237],[4,"Option",238],[6,"Result",233],[8,"Debug",233],[3,"BuiltinsConfig",0],[3,"FdFlags",239],[3,"Error",240],[8,"Any",241],[3,"Arc",242],[3,"Rc",243],[15,"str"],[3,"Vec",244],[3,"CustomService",0],[3,"ServicesMetrics",245],[3,"KeyStorage",246],[3,"Workers",247],[3,"PeerScopes",248],[3,"HealthCheckRegistry",249],[3,"PeerId",250],[3,"PathBuf",251],[3,"Hash",252],[15,"bool"],[3,"ByteSize",253],[3,"WasmBackendConfig",254],[3,"SetFdFlags",239],[8,"AsFilelike",255],[4,"Value",256],[3,"RawCodec",257],[3,"Error",258],[8,"Read",259],[3,"Cid",260],[8,"Extend",261],[8,"Serializer",262],[3,"TypeId",241],[3,"JError",263]],"b":[[29,"impl-ParticleFunction-for-Builtins%3CC%3E"],[30,"impl-Builtins%3CC%3E"]]},\
"particle_execution":{"doc":"","t":"NNNNENNNNNNIIGIDDNEGGRENNLLLLLLLLLLLKKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLMLLLKKMLLLLLMLMLLLLLLMLLLLLLLLLLMLLLLLLLLLLLMM","n":["CleanupVault","CreateVault","Empty","Err","FunctionOutcome","Immut","InitializeVault","Mut","NotDefined","NotFound","Ok","ParticleFunction","ParticleFunctionMut","ParticleFunctionOutput","ParticleFunctionStatic","ParticleParams","ParticleVault","ReadVault","ServiceFunction","ServiceFunctionImmut","ServiceFunctionMut","VIRTUAL_PARTICLE_VAULT_PREFIX","VaultError","WriteVault","WrongVault","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","call","call","call","call_mut","cat","cat_slice","cleanup","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","create","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","extend","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_output","from_residual","from_residual","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_spell_id","id","init","init","init","init","init","init_peer_id","initialize","initialize_worker","inject_vault","into","into","into","into","into","is_defined","is_spell_particle","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","not_err","or_else","peer_scope","put","real_particle_vault","real_worker_particle_vault","remove","remove","script","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","signature","source","timestamp","to_owned","to_owned","to_owned","to_particle_parameters","to_real_path","to_string","token","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","virtual_particle_vault","vzip","vzip","vzip","vzip","vzip","args","params"],"q":[[0,"particle_execution"],[165,"particle_execution::FunctionOutcome"],[167,"core::ops::control_flow"],[168,"particle_args::args"],[169,"core::future::future"],[170,"alloc::boxed"],[171,"core::pin"],[172,"libp2p_identity::peer_id"],[173,"std::path"],[174,"alloc::string"],[175,"core::result"],[176,"alloc::vec"],[177,"particle_protocol::particle"],[178,"types::peer_scope"],[179,"core::fmt"],[180,"core::fmt"],[181,"core::option"],[182,"core::fmt"],[183,"particle_args::args_error"],[184,"core::convert"],[185,"core::convert"],[186,"std::io::error"],[187,"marine::wasmtime"],[188,"eyre"],[189,"std::path"],[190,"core::ops::function"],[191,"marine_call_parameters"],[192,"core::any"]],"d":["","","","","","","","","","","","","","","","Lightweight, static version of the [Particle] structure It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Map <code>vault_dir/$current-peer-id</code> to <code>/tmp/vault</code> inside the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns false if variant is [NotDefined]","","","","","","","","Returns false if variant is Err","","","","Returns Particle File Vault path on Nox’s filesystem","","","","","","","","","","","","Unix timestamp in milliseconds","","","","","Converts virtual path with <code>VIRTUAL_PARTICLE_VAULT_PREFIX</code> …","","","","","","","","","","","","","TTL in milliseconds","","","","","","Returns Particle File Vault path on Marine’s filesystem …","","","","","","",""],"i":[14,14,1,1,0,8,14,8,1,14,1,0,0,0,0,0,0,14,0,0,0,0,0,14,14,8,1,4,10,14,8,1,4,10,14,1,46,47,8,48,10,10,10,1,4,10,4,1,4,10,10,8,1,4,10,14,8,1,4,10,14,8,1,4,10,14,8,1,4,10,14,46,47,1,4,10,14,14,8,8,8,1,1,1,4,10,14,1,1,1,8,1,4,10,14,4,4,8,1,4,10,14,4,10,10,10,8,1,4,10,14,1,4,10,8,1,4,10,14,1,1,4,10,10,10,46,47,4,8,1,4,10,14,4,14,4,1,4,10,4,10,14,4,8,1,4,10,14,8,1,4,10,14,4,8,1,4,10,14,10,8,1,4,10,14,49,49],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[[-1,3,4],[[7,[[6,[5]]]]],[]],[[-1,3,4],[[7,[[6,[5]]]]],[]],[[8,3,4],1],[[-1,3,4],9,[]],[[10,11,4,12],[[15,[13,14]]]],[[10,11,4,12],[[15,[[17,[16]],14]]]],[[10,11,18,18],[[15,[19,14]]]],[1,1],[4,4],[10,10],[[20,21,13],4],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[10,11,18,18],[[15,[19,14]]]],[22,[[15,[19,23]]]],[22,[[15,[19,23]]]],[22,[[15,[19,23]]]],[22,[[15,[19,23]]]],[22,[[15,[19,23]]]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,19],[24,19],[24,19],[24,19],[24,19],[[-1,13,[25,[13,8]],[26,[8]]],[[7,[[6,[5]]]]],[]],[[-1,13,[25,[13,8]],[26,[8]]],[[7,[[6,[5]]]]],[]],[[1,22],27],[[4,22],27],[[10,22],27],[[14,22],27],[[14,22],27],[28,8],[-1,-1,[]],[29,8],[-1,1,30],[31,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],1],[32,1],[[[15,[33,-1]]],1,[[34,[32]]]],[-1,[[15,[35,36]]],[]],[-1,[[15,[35,36]]],[]],[-1,[[15,[35,36]]],[]],[-1,[[15,[35,36]]],[]],[-1,[[15,[35,36]]],[]],[18,[[26,[13]]]],0,[[],24],[[],24],[[],24],[[],24],[[],24],0,[10,[[15,[19,14]]]],[[10,11],[[15,[19,14]]]],[[10,11,37],[[38,[19]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,39],[18,39],[40,10],[[-1,35],[[15,[[41,[-2]],36]]],[],42],[[-1,35],[[15,[[41,[-2]],36]]],[],42],[[-1,35],[[15,[[41,[-2]],36]]],[],42],[[-1,35],[[15,[[41,[-2]],36]]],[],42],[[-1,35],[[15,[[41,[-2]],36]]],[],42],[1,39],[[1,-1],1,43],0,[[10,11,4,13,18],[[15,[40,14]]]],[[10,11,18,18],40],[[10,11],40],[[-1,18],[[7,[[6,[5]]]]],[]],[[-1,18],[[7,[[6,[5]]]]],[]],0,[[-1,[41,[-2]]],[[15,[19,36]]],[],42],[[-1,[41,[-2]]],[[15,[19,36]]],[],42],[[-1,[41,[-2]]],[[15,[19,36]]],[],42],[[-1,[41,[-2]]],[[15,[19,36]]],[],42],[[-1,[41,[-2]]],[[15,[19,36]]],[],42],0,[14,[[26,[30]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,44],[[10,11,4,12],[[15,[40,14]]]],[-1,13,[]],0,[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[[10,18,18],40],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0],"c":[],"p":[[4,"FunctionOutcome",0],[4,"ControlFlow",167],[3,"Args",168],[3,"ParticleParams",0],[8,"Future",169],[3,"Box",170],[3,"Pin",171],[4,"ServiceFunction",0],[6,"ParticleFunctionOutput",0],[3,"ParticleVault",0],[3,"PeerId",172],[3,"Path",173],[3,"String",174],[4,"VaultError",0],[4,"Result",175],[15,"u8"],[3,"Vec",176],[15,"str"],[15,"tuple"],[3,"Particle",177],[4,"PeerScope",178],[3,"Formatter",179],[3,"Error",179],[15,"usize"],[3,"HashMap",180],[4,"Option",181],[6,"Result",179],[6,"ServiceFunctionImmut",0],[6,"ServiceFunctionMut",0],[8,"Error",182],[15,"never"],[3,"JError",183],[4,"Infallible",184],[8,"Into",184],[3,"FdFlags",185],[3,"Error",186],[6,"ModuleDescriptor",187],[6,"Result",188],[15,"bool"],[3,"PathBuf",173],[3,"SetFdFlags",185],[8,"AsFilelike",189],[8,"FnOnce",190],[3,"ParticleParameters",191],[3,"TypeId",192],[8,"ParticleFunction",0],[8,"ParticleFunctionStatic",0],[8,"ParticleFunctionMut",0],[13,"NotDefined",165]],"b":[[76,"impl-Display-for-VaultError"],[77,"impl-Debug-for-VaultError"],[78,"impl-From%3CBox%3Cdyn+Fn(Args,+ParticleParams)+-%3E+Pin%3CBox%3Cdyn+Future%3COutput+=+FunctionOutcome%3E+%2B+Send%3E%3E+%2B+Send+%2B+Sync%3E%3E-for-ServiceFunction"],[80,"impl-From%3CBox%3Cdyn+FnMut(Args,+ParticleParams)+-%3E+Pin%3CBox%3Cdyn+Future%3COutput+=+FunctionOutcome%3E+%2B+Send%3E%3E+%2B+Send+%2B+Sync%3E%3E-for-ServiceFunction"],[88,"impl-FromResidual-for-FunctionOutcome"],[89,"impl-FromResidual%3CResult%3CInfallible,+E%3E%3E-for-FunctionOutcome"]]},\
"particle_modules":{"doc":"","t":"DNNDNNNNNNNNNNNNDNENNNDDNNNNNNNNDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFMFLFMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM","n":["AddBlueprint","AddModule","BlueprintNotFound","EffectorsMode","EmptyDependenciesList","FacadeShouldBeHash","ForbiddenEffector","IncorrectBlueprint","IncorrectModuleConfig","IncorrectVaultModuleConfig","InvalidEffectorMountedBinary","InvalidModuleConfigPath","InvalidModuleName","InvalidModulePath","InvalidModuleReference","MaxHeapSizeOverflow","ModuleConfig","ModuleConvertError","ModuleError","ModuleInfo","ModuleInvalidBase64","ModuleNotFound","ModuleRepository","NamedModuleConfig","NoModuleConfig","NoSuchBlueprint","ReadModuleInterfaceError","SerializeBlueprint","SerializeBlueprintJson","SerializeConfig","SerializeConfigJson","Vault","WASIConfig","WriteBlueprint","WriteConfig","WrongModuleHash","add_blueprint","add_module","add_module_base64","add_module_from_vault","add_system_module","all_effectors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","debug","debug","debug","debug","debug","debug","debug","decode","default","default","default","default","dependencies","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode","envs","file_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_blueprint_from_cache","get_blueprints","get_facade_interface","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_interface","get_interface_by_hash","get_ipld","init","init","init","init","init","init","init","into","into","into","into","into","into","into","list_files","list_modules","load_blueprint","load_from","load_module_by_path","load_module_config_from_vault","load_module_descriptor","logger_enabled","logging_mask","mapped_dirs","modules_dir","mounted_binaries","name","name","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","references","references","references","references","references","references","references","resolve_blueprint","restricted_effectors","serialize","serialize","serialize","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wasi","binary_name","blueprint","config","config_path","config_path","err","err","err","err","err","err","err","err","err","err","err","err","err","err","err","err","forbidden_cid","id","id","id","max_heap_size_allowed","max_heap_size_wanted","module_cid","module_name","module_name","module_path","path","path","path","path","path","path","path","reference"],"q":[[0,"particle_modules"],[235,"particle_modules::ModuleError"],[274,"alloc::string"],[275,"core::result"],[276,"alloc::vec"],[277,"cid_utils::hash"],[278,"particle_execution::particle_vault"],[279,"libp2p_identity::peer_id"],[280,"particle_execution::particle_params"],[281,"std::path"],[282,"std::collections::hash::map"],[283,"core::fmt"],[284,"core::fmt"],[285,"serde::de"],[286,"core::fmt"],[287,"marine_module_info_parser::errors"],[288,"service_modules::modules::blueprint"],[289,"serde_json::value"],[290,"system_interface::fs::fd_flags"],[291,"std::io::error"],[292,"particle_args::args_error"],[293,"libipld_core::ipld"],[294,"std::path"],[295,"core::option"],[296,"marine::wasmtime"],[297,"system_interface::fs::fd_flags"],[298,"libipld_core::raw"],[299,"anyhow"],[300,"std::io"],[301,"cid::cid"],[302,"core::iter::traits::collect"],[303,"serde::ser"],[304,"core::error"],[305,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Saves new blueprint to disk","","Adds a module to the filesystem, overwriting existing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encode IPLD object with DAG JSON codec","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get available blueprints","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","List files in directory","","Load blueprint from disk","","","","Load ModuleDescriptor from disk for a given module name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,0,4,0,4,4,4,0,0,4,4,4,4,4,4,4,4,0,4,4,4,1,1,1,1,1,15,2,4,15,1,9,16,17,2,4,15,1,9,16,17,2,15,1,9,16,17,2,15,1,9,16,17,9,2,4,15,1,9,16,17,2,15,9,16,17,2,2,4,15,1,9,16,17,2,4,15,1,9,16,17,9,16,17,2,4,15,1,9,16,17,2,17,9,2,4,4,15,1,9,16,17,2,4,4,4,4,4,15,1,9,16,17,1,1,1,2,4,15,1,9,16,17,1,1,2,2,4,15,1,9,16,17,2,4,15,1,9,16,17,0,1,0,9,0,1,0,16,16,17,1,16,2,9,2,1,2,4,15,1,9,16,17,2,4,15,1,9,16,17,1,15,9,16,17,2,4,15,1,9,16,17,4,2,15,1,9,16,17,2,4,2,4,15,1,9,16,17,2,4,15,1,9,16,17,2,4,15,1,9,16,17,2,4,15,1,9,16,17,16,50,51,52,53,54,55,52,51,56,57,58,59,60,61,62,63,64,65,66,53,54,67,68,69,70,71,71,50,67,50,66,55,56,57,59,61,63,64,72],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[5,[3,4]]]],[[1,3,[7,[6]]],[[5,[8,4]]]],[[1,3,9],[[5,[3,4]]]],[[1,10,11,3,3,12],[[5,[3,4]]]],[[1,[7,[6]],9],[[5,[8,4]]]],[[[14,[8,[14,[3,13]]]],[14,[3,13]]],15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[15,15],[1,1],[9,9],[16,16],[17,17],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],0,[19,[[5,[18,20]]]],[19,[[5,[18,20]]]],[19,[[5,[18,20]]]],[19,[[5,[18,20]]]],[19,[[5,[18,20]]]],[19,[[5,[18,20]]]],[19,[[5,[18,20]]]],[[[21,[6]]],[[5,[2,22]]]],[[],15],[[],9],[[],16],[[],17],0,[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[-1,[[5,[9]]],24],[-1,[[5,[16]]],24],[-1,[[5,[17]]],24],[23,18],[23,18],[23,18],[23,18],[23,18],[23,18],[23,18],[2,[[5,[[7,[6]],22]]]],0,0,[[2,19],[[5,[18,20]]]],[[4,19],25],[[4,19],25],[[15,19],25],[[1,19],25],[[9,19],[[5,[18,20]]]],[[16,19],[[5,[18,20]]]],[[17,19],[[5,[18,20]]]],[-1,-1,[]],[26,4],[27,4],[22,4],[28,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[1,29],[[5,[30,4]]]],[1,[[7,[30]]]],[[1,29],[[5,[31,4]]]],[-1,[[5,[32,33]]],[]],[-1,[[5,[32,33]]],[]],[-1,[[5,[32,33]]],[]],[-1,[[5,[32,33]]],[]],[-1,[[5,[32,33]]],[]],[-1,[[5,[32,33]]],[]],[-1,[[5,[32,33]]],[]],[[1,29],[[5,[31,34]]]],[[1,8],[[5,[31,4]]]],[2,35],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,[[38,[[0,[37]]]]]],[1,[[5,[31,34]]]],[[36,29],[[5,[30,4]]]],0,[36,[[5,[[7,[6]],4]]]],[[10,11,3,12],[[5,[9,4]]]],[[36,8],[[5,[39,4]]]],0,0,0,0,0,0,0,[[3,[7,[8]]],2],[[36,36,15],1],[[-1,32],[[5,[[40,[-2]],33]]],[],41],[[-1,32],[[5,[[40,[-2]],33]]],[],41],[[-1,32],[[5,[[40,[-2]],33]]],[],41],[[-1,32],[[5,[[40,[-2]],33]]],[],41],[[-1,32],[[5,[[40,[-2]],33]]],[],41],[[-1,32],[[5,[[40,[-2]],33]]],[],41],[[-1,32],[[5,[[40,[-2]],33]]],[],41],[[42,-1,-2],[[5,[18,43]]],44,[[46,[45]]]],[[42,-1,-2],[[5,[18,43]]],44,[[46,[45]]]],[[42,-1,-2],[[5,[18,43]]],44,[[46,[45]]]],[[42,-1,-2],[[5,[18,43]]],44,[[46,[45]]]],[[42,-1,-2],[[5,[18,43]]],44,[[46,[45]]]],[[42,-1,-2],[[5,[18,43]]],44,[[46,[45]]]],[[42,-1,-2],[[5,[18,43]]],44,[[46,[45]]]],[[1,29],[[5,[[7,[39]],4]]]],[[[14,[8,[14,[3,13]]]]],15],[[9,-1],5,47],[[16,-1],5,47],[[17,-1],5,47],[[-1,[40,[-2]]],[[5,[18,33]]],[],41],[[-1,[40,[-2]]],[[5,[18,33]]],[],41],[[-1,[40,[-2]]],[[5,[18,33]]],[],41],[[-1,[40,[-2]]],[[5,[18,33]]],[],41],[[-1,[40,[-2]]],[[5,[18,33]]],[],41],[[-1,[40,[-2]]],[[5,[18,33]]],[],41],[[-1,[40,[-2]]],[[5,[18,33]]],[],41],[4,[[38,[48]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,[[5,[3,22]]]],[-1,3,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"ModuleRepository",0],[3,"AddBlueprint",0],[3,"String",274],[4,"ModuleError",0],[4,"Result",275],[15,"u8"],[3,"Vec",276],[3,"Hash",277],[3,"NamedModuleConfig",0],[3,"ParticleVault",278],[3,"PeerId",279],[3,"ParticleParams",280],[3,"PathBuf",281],[3,"HashMap",282],[3,"EffectorsMode",0],[3,"ModuleConfig",0],[3,"WASIConfig",0],[15,"tuple"],[3,"Formatter",283],[3,"Error",283],[15,"slice"],[3,"Report",284],[15,"usize"],[8,"Deserializer",285],[6,"Result",283],[4,"VaultError",278],[4,"DecodeError",286],[4,"ModuleInfoError",287],[15,"str"],[3,"Blueprint",288],[4,"Value",289],[3,"FdFlags",290],[3,"Error",291],[3,"JError",292],[4,"Ipld",293],[3,"Path",281],[8,"Iterator",294],[4,"Option",295],[6,"ModuleDescriptor",296],[3,"SetFdFlags",290],[8,"AsFilelike",297],[3,"RawCodec",298],[3,"Error",299],[8,"Read",300],[3,"Cid",301],[8,"Extend",302],[8,"Serializer",303],[8,"Error",304],[3,"TypeId",305],[13,"InvalidEffectorMountedBinary",235],[13,"SerializeBlueprint",235],[13,"SerializeConfig",235],[13,"InvalidModuleConfigPath",235],[13,"IncorrectVaultModuleConfig",235],[13,"AddModule",235],[13,"WriteConfig",235],[13,"NoSuchBlueprint",235],[13,"IncorrectBlueprint",235],[13,"NoModuleConfig",235],[13,"IncorrectModuleConfig",235],[13,"WriteBlueprint",235],[13,"ModuleConvertError",235],[13,"ModuleNotFound",235],[13,"ReadModuleInterfaceError",235],[13,"ModuleInvalidBase64",235],[13,"InvalidModulePath",235],[13,"ForbiddenEffector",235],[13,"BlueprintNotFound",235],[13,"EmptyDependenciesList",235],[13,"FacadeShouldBeHash",235],[13,"MaxHeapSizeOverflow",235],[13,"InvalidModuleReference",235]],"b":[[110,"impl-Display-for-ModuleError"],[111,"impl-Debug-for-ModuleError"],[118,"impl-From%3CVaultError%3E-for-ModuleError"],[119,"impl-From%3CDecodeError%3E-for-ModuleError"],[120,"impl-From%3CReport%3E-for-ModuleError"],[121,"impl-From%3CModuleInfoError%3E-for-ModuleError"]]},\
"particle_protocol":{"doc":"","t":"ENDNDENNNNNNNRDNEDNEENNNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMLMMLLLLMLLLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLMMMMMMMMMMMM","n":["CompletionChannel","ConnectionPoolDied","Contact","DecodingError","ExtendedParticle","HandlerMessage","Ignore","InParticle","InvalidKeypair","NotConnected","Ok","Oneshot","OutParticle","PROTOCOL_NAME","Particle","Particle","ParticleError","ProtocolConfig","ProtocolError","ProtocolMessage","SendStatus","SignatureVerificationFailed","SigningFailed","TimedOut","Upgrade","Upgrade","addresses","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","data","deadline","default","default","default","default","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","id","init_peer_id","into","into","into","into","into","into","into","into","into","into_protocol_message","is_expired","linked","new","new","new","outbound_substream_timeout","outlet","particle","peer_id","protocol_info","protocol_info","protocol_info","protocol_info","script","serialize","serialize","serialize","serialize","sign","signature","source","span","time_to_live","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upgrade_inbound","upgrade_inbound","upgrade_outbound","upgrade_outbound","upgrade_timeout","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","err","err","err","given_peer_id","init_peer_id","particle_id","particle_id","particle_id","particle_id","peer_id","after","error"],"q":[[0,"particle_protocol"],[185,"particle_protocol::ParticleError"],[195,"particle_protocol::SendStatus"],[197,"core::option"],[198,"core::result"],[199,"serde::de"],[200,"core::fmt"],[201,"core::fmt"],[202,"tracing::span"],[203,"alloc::sync"],[204,"core::time"],[205,"libp2p_identity::peer_id"],[206,"multiaddr"],[207,"alloc::vec"],[208,"serde::ser"],[209,"fluence_keypair::key_pair"],[210,"core::error"],[211,"alloc::string"],[212,"core::any"],[213,"futures_io::if_std"],[214,"core::marker"],[215,"core::marker"],[216,"futures_io::if_std"]],"d":["","","","","","","","Particle being received from a remote peer. Receive-only, …","","","","","Particle being sent to remote peer. Contains a channel to …","","","","","","","","","","","","Dummy plug. Generated by the <code>OneshotHandler</code> when Inbound …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","base64-encoded","Deadline in milliseconds","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Timeout for outbound substream upgrades.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Timeout for applying the given upgrade on a substream","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,10,0,18,0,0,11,17,18,10,10,11,17,0,0,4,0,0,10,0,0,18,18,10,17,4,6,1,1,10,11,17,4,5,6,18,1,3,10,11,17,4,5,6,18,1,3,4,5,6,1,3,4,5,6,1,3,3,3,10,11,5,3,4,5,6,3,4,6,3,6,6,6,10,11,17,4,4,5,6,6,18,18,1,3,3,10,11,17,17,17,4,5,6,18,1,3,3,3,10,11,17,4,5,6,18,1,3,17,3,1,5,6,1,5,11,1,6,17,17,5,5,3,4,5,6,3,3,3,18,1,3,3,4,5,6,1,3,4,6,18,3,10,11,17,4,5,6,18,1,3,10,11,17,4,5,6,18,1,3,3,10,11,17,4,5,6,18,1,3,5,5,17,17,5,3,10,11,17,4,5,6,18,1,3,36,37,38,39,39,39,36,37,38,37,40,40],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,4],[5,5],[6,6],[1,1],[3,3],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,[3,[[9,[8]]]],[[],10],[[],11],[[],5],[[],3],[-1,[[12,[4]]],13],[-1,[[12,[5]]],13],[-1,[[12,[6]]],13],[-1,[[12,[3]]],13],[[4,4],14],[[6,6],14],[[3,3],14],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[10,15],16],[[11,15],16],[[17,15],16],[[4,15],16],[[4,15],16],[[5,15],16],[[6,15],16],[[6,15],16],[[18,15],16],[[18,15],16],[[1,15],16],[[3,15],16],[[3,15],16],[-1,-1,[]],[-1,-1,[]],[4,17],[-1,-1,[]],[7,17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,[[7,[4,[9,[[19,[10]]]]]]]],[3,14],[[3,[21,[20]]],1],[[22,22],5],[[23,[25,[24]]],6],[[3,20],1],0,[11,[[9,[[19,[10]]]]]],0,0,[17],[-1,[],[]],[5],[-1,[],[]],0,[[4,-1],12,26],[[5,-1],12,26],[[6,-1],12,26],[[3,-1],12,26],[[3,27],[[12,[7,18]]]],0,[18,[[9,[28]]]],0,[3,22],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[[5,-1],[],[31,32,33]],[[-1,34,-2],[],[],[]],[[-1,34,-2],[],[],[]],[[17,-1],[],[31,35,32,33]],0,[3,[[12,[7,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"ExtendedParticle",0],[15,"str"],[3,"Particle",0],[4,"ProtocolMessage",0],[3,"ProtocolConfig",0],[3,"Contact",0],[15,"tuple"],[15,"u64"],[4,"Option",197],[4,"SendStatus",0],[4,"CompletionChannel",0],[4,"Result",198],[8,"Deserializer",199],[15,"bool"],[3,"Formatter",200],[6,"Result",200],[4,"HandlerMessage",0],[4,"ParticleError",0],[3,"Sender",201],[3,"Span",202],[3,"Arc",203],[3,"Duration",204],[3,"PeerId",205],[3,"Multiaddr",206],[3,"Vec",207],[8,"Serializer",208],[4,"KeyPair",209],[8,"Error",210],[3,"String",211],[3,"TypeId",212],[8,"AsyncRead",213],[8,"Send",214],[8,"Unpin",214],[3,"Stream",215],[8,"AsyncWrite",213],[13,"SigningFailed",185],[13,"SignatureVerificationFailed",185],[13,"DecodingError",185],[13,"InvalidKeypair",185],[13,"TimedOut",195]],"b":[[27,"impl-AsRef%3Cstr%3E-for-ExtendedParticle"],[28,"impl-AsRef%3CParticle%3E-for-ExtendedParticle"],[76,"impl-Debug-for-ProtocolMessage"],[77,"impl-Display-for-ProtocolMessage"],[79,"impl-Display-for-Contact"],[80,"impl-Debug-for-Contact"],[81,"impl-Debug-for-ParticleError"],[82,"impl-Display-for-ParticleError"],[84,"impl-Debug-for-Particle"],[85,"impl-Display-for-Particle"],[88,"impl-From%3CProtocolMessage%3E-for-HandlerMessage"],[90,"impl-From%3C()%3E-for-HandlerMessage"]]},\
"particle_services":{"doc":"","t":"NNNNNNNNNNNNNNNNNNNNNNNNNNNEENNNNNDDENNNNNNNNNNNNNEDENNNNNNNNNNNSSNNDNNNLMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMM","n":["AliasAsServiceId","ArgParseError","Array","Array","Boolean","Boolean","ByteArray","ByteArray","CallServiceFailedWrongWorker","CorruptedFaaSInterface","CreateServicesDir","DeserializePersistedService","Engine","F32","F32","F64","F64","FailedToCreateDirectory","Forbidden","ForbiddenAlias","ForbiddenAliasRoot","ForbiddenAliasWorker","Host","I32","I32","I64","I64","IType","IValue","InternalError","ModuleError","NoSuchAlias","NoSuchService","NoSuchServiceWithFunction","ParticleAppServices","ParticleAppServicesConfig","PeerScope","ReadPersistedService","Record","Record","S16","S16","S32","S32","S64","S64","S8","S8","SerializePersistedService","Service","ServiceError","ServiceInfo","ServiceType","Spell","String","String","U16","U16","U32","U32","U64","U64","U8","U8","VARIANT_COUNT","VARIANT_COUNT","VaultError","VaultLink","WasmBackendConfig","WorkerId","WorkerNotFound","WritePersistedService","add_alias","aliases","async_wasm_stack","blueprint_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtins_management_peer_id","call_function","call_service","check_service_worker_id","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","create_persisted_services","create_service","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug_info","default","default","default_service_memory_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","envs","ephemeral_work_dir","epoch_interruption_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_hash","get_hash","get_interface","get_service","get_service_info","get_service_mem_stats","get_service_owner","hash","hash","id","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_spell","list_services","list_services_all","local_peer_id","management_peer_id","max_wasm_stack","metrics","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","owner_id","parse","partial_cmp","particles_vault_dir","peer_scope","persistent_work_dir","references","references","references","references","references","references","references","references","references","remove_service","remove_services","resolve_alias","serialize","serialize","serialize","service_exists","service_type","services_dir","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","source","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_service_id","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vault","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wasm_backend_config","wasm_backtrace","config","err","err","err","err","err","err","err","function","function","particle_id","path","path","path","path","path","peer_scope","reason","service","service_id","service_id","user","worker_id"],"q":[[0,"particle_services"],[391,"particle_services::ServiceError"],[414,"alloc::string"],[415,"libp2p_identity::peer_id"],[416,"core::result"],[417,"serde_json::value"],[418,"alloc::vec"],[419,"core::option"],[420,"core::time"],[421,"particle_execution::function_outcome"],[422,"particle_args::args"],[423,"particle_execution::particle_params"],[424,"core::cmp"],[425,"eyre"],[426,"core::fmt"],[427,"core::fmt"],[428,"core::fmt"],[429,"fluence_app_service::errors"],[430,"particle_args::args_error"],[431,"particle_modules::error"],[432,"system_interface::fs::fd_flags"],[433,"std::io::error"],[434,"core::hash"],[435,"core::marker"],[436,"core::hash"],[437,"particle_args::args_error"],[438,"core::any"],[439,"alloc::rc"],[440,"particle_modules::modules"],[441,"peer_metrics::services_metrics"],[442,"health"],[443,"workers::workers"],[444,"workers::scope"],[445,"std::path"],[446,"std::collections::hash::map"],[447,"bytesize"],[448,"system_interface::fs::fd_flags"],[449,"wast::parser"],[450,"wast"],[451,"libipld_core::raw"],[452,"anyhow"],[453,"std::io"],[454,"cid::cid"],[455,"core::iter::traits::collect"],[456,"serde::ser"],[457,"core::error"],[458,"std::io"]],"d":["","","An array of values of the same type.","A byte array.","Boolean.","Boolean value.","Specialization of arrays for byte vector.","Specialization of array type for byte vector.","","","","","","A 32-bits float.","A 32-bits float.","A 64-bits float.","A 64-bits float.","","","","","","","A 32-bits integer (as defined in WebAssembly core).","A 32-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","Represents the types supported by WIT.","A WIT value.","","","","","","","","","","A record contains record index from interfaces AST.","A record.","A 16-bits signed integer.","A 16-bits signed integer.","A 32-bits signed integer.","A 32-bits signed integer.","A 64-bits signed integer.","A 64-bits signed integer.","A 8-bits signed integer.","A 8-bits signed integer.","","","","","","","A string.","A string.","A 16-bits unsigned integer.","A 16-bits unsigned integer.","A 32-bits unsigned integer.","A 32-bits unsigned integer.","A 64-bits unsigned integer.","A 64-bits unsigned integer.","A 8-bits unsigned integer.","A 8-bits unsigned integer.","","","","","","","","","","","Configures the size of the stacks used for asynchronous …","","","","","","","","","","","","","","","","","","","","key to manage builtins services initialization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures whether DWARF debug information will be emitted …","","","Default heap size in bytes available for the module unless …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opaque environment variables to be passed on each service …","Ephemeral working dir for services","Enables the epoch interruption mechanism.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Peer id of the current node","key that could manage services","Configures the maximum amount of stack space available for …","","","","","","","","","","","","","","","","Dir to store directories shared between services in the …","","Persistent working dir for services","","","","","","","","","","","","","","","","","","Dir to persist info about running services","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","config for the wasmtime backend","Configures whether the errors from the VM should collect …","","","","","","","","","","","","","","","","","","","","","","",""],"i":[6,6,18,19,18,19,18,19,6,6,6,6,6,18,19,18,19,6,6,6,6,6,2,18,19,18,19,0,0,6,6,6,6,6,0,0,0,6,18,19,18,19,18,19,18,19,18,19,6,17,0,0,0,17,18,19,18,19,18,19,18,19,18,19,18,19,6,6,0,2,6,6,1,29,21,29,2,17,29,1,18,6,19,20,21,2,17,29,1,18,6,19,20,21,20,1,1,1,2,17,1,18,19,20,21,2,17,1,18,19,20,21,2,2,1,1,2,17,29,1,18,6,19,20,21,21,19,21,20,2,17,29,1,18,6,19,20,21,2,17,29,1,18,6,19,20,21,2,17,18,2,17,29,1,18,6,19,20,21,20,20,21,2,17,18,19,2,2,2,2,2,17,17,17,17,17,18,18,18,18,18,2,17,29,1,18,6,6,19,20,21,2,17,29,1,18,6,6,6,6,6,19,19,19,19,19,19,19,19,19,19,19,19,19,20,21,2,17,29,1,18,6,19,20,21,2,18,1,1,1,1,1,2,18,29,2,17,29,1,18,6,19,20,21,2,17,29,1,18,6,19,20,21,2,17,29,1,18,6,19,20,21,2,17,29,1,18,6,19,20,21,2,17,29,1,18,6,19,20,21,17,1,1,20,20,21,1,1,20,2,17,29,1,18,6,19,20,21,29,18,2,20,29,20,2,17,29,1,18,6,19,20,21,1,1,1,2,17,18,1,29,20,2,17,29,1,18,6,19,20,21,6,18,2,17,1,18,19,20,21,1,18,6,2,17,29,1,18,6,19,20,21,2,17,29,1,18,6,19,20,21,2,17,29,1,18,6,19,20,21,2,17,29,1,18,6,19,20,21,1,2,17,29,1,18,6,19,20,21,20,21,76,77,78,79,80,76,81,82,83,84,80,77,78,79,81,82,85,84,83,85,80,84,86],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3,3,4],[[7,[5,6]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[1,2,8,8,[10,[9]],[11,[3]],4,12],13],[[1,14,15,16],13],[[1,2,3,8],[[7,[5,6]]]],[2,2],[17,17],[1,1],[18,18],[19,19],[20,20],[21,21],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[2,2],22],[[-1,-2],22,[],[]],[1,[[23,[5]]]],[[1,2,17,3,4],[[7,[3,6]]]],[24,[[7,[5,25]]]],[24,[[7,[5,25]]]],[24,[[7,[5,25]]]],[24,[[7,[5,25]]]],[24,[[7,[5,25]]]],[24,[[7,[5,25]]]],[24,[[7,[5,25]]]],[24,[[7,[5,25]]]],[24,[[7,[5,25]]]],0,[[],19],[[],21],0,[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[-1,[[7,[2]]],27],[-1,[[7,[17]]],27],[-1,[[7,[18]]],27],[26,5],[26,5],[26,5],[26,5],[26,5],[26,5],[26,5],[26,5],[26,5],0,0,0,[[2,2],16],[[17,17],16],[[18,18],16],[[19,19],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[2,24],[[7,[5,25]]]],[[17,24],28],[[29,24],28],[[1,24],28],[[18,24],[[7,[5,25]]]],[[6,24],28],[[6,24],28],[[19,24],[[7,[5,25]]]],[[20,24],28],[[21,24],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[30,6],[-1,-1,[]],[31,6],[32,6],[33,6],[34,19],[35,19],[-1,-1,[]],[36,19],[37,19],[38,19],[39,19],[40,19],[41,19],[42,19],[43,19],[[[10,[34]]],19],[3,19],[-1,-1,[]],[-1,-1,[]],[-1,[[7,[44,45]]],[]],[-1,[[7,[44,45]]],[]],[-1,[[7,[44,45]]],[]],[-1,[[7,[44,45]]],[]],[-1,[[7,[44,45]]],[]],[-1,[[7,[44,45]]],[]],[-1,[[7,[44,45]]],[]],[-1,[[7,[44,45]]],[]],[-1,[[7,[44,45]]],[]],[[-1,-2],41,[46,47],48],[[-1,-2],41,[46,47],48],[[1,2,3,8],[[7,[9,6]]]],[[1,2,3,8],[[7,[[5,[[49,[0]],3]],6]]]],[[1,2,3,8],[[7,[29,6]]]],[[1,2,3,8],[[7,[[10,[9]],50]]]],[[1,2,3,8],[[7,[4,6]]]],[[2,-1],5,51],[[18,-1],5,51],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[52,[-1]]],[[52,[53]]],[]],[[[52,[-1]]],[[52,[53]]],[]],[[[52,[-1]]],[[52,[53]]],[]],[[[52,[-1]]],[[52,[53]]],[]],[[[52,[-1]]],[[52,[53]]],[]],[[[52,[-1]]],[[52,[53]]],[]],[[[52,[-1]]],[[52,[53]]],[]],[[[52,[-1]]],[[52,[53]]],[]],[[[52,[-1]]],[[52,[53]]],[]],[[[49,[-1]]],[[49,[53]]],[]],[[[49,[-1]]],[[49,[53]]],[]],[[[49,[-1]]],[[49,[53]]],[]],[[[49,[-1]]],[[49,[53]]],[]],[[[49,[-1]]],[[49,[53]]],[]],[[[49,[-1]]],[[49,[53]]],[]],[[[49,[-1]]],[[49,[53]]],[]],[[[49,[-1]]],[[49,[53]]],[]],[[[49,[-1]]],[[49,[53]]],[]],[[[54,[-1]]],[[54,[53]]],[]],[[[54,[-1]]],[[54,[53]]],[]],[[[54,[-1]]],[[54,[53]]],[]],[[[54,[-1]]],[[54,[53]]],[]],[[[54,[-1]]],[[54,[53]]],[]],[[[54,[-1]]],[[54,[53]]],[]],[[[54,[-1]]],[[54,[53]]],[]],[[[54,[-1]]],[[54,[53]]],[]],[[[54,[-1]]],[[54,[53]]],[]],[17,16],[[1,2],[[10,[29]]]],[1,[[10,[29]]]],0,0,0,0,[[20,55,[11,[56]],[11,[57]],[49,[58]],59],[[7,[1,6]]]],[[4,60,60,60,[61,[3,3]],4,4,[11,[62]],21],[[7,[20,45]]]],[[-1,44],[[7,[[63,[-2]],45]]],[],64],[[-1,44],[[7,[[63,[-2]],45]]],[],64],[[-1,44],[[7,[[63,[-2]],45]]],[],64],[[-1,44],[[7,[[63,[-2]],45]]],[],64],[[-1,44],[[7,[[63,[-2]],45]]],[],64],[[-1,44],[[7,[[63,[-2]],45]]],[],64],[[-1,44],[[7,[[63,[-2]],45]]],[],64],[[-1,44],[[7,[[63,[-2]],45]]],[],64],[[-1,44],[[7,[[63,[-2]],45]]],[],64],0,[65,[[7,[18,66]]]],[[2,2],[[11,[22]]]],0,0,0,[[67,-1,-2],[[7,[5,68]]],69,[[71,[70]]]],[[67,-1,-2],[[7,[5,68]]],69,[[71,[70]]]],[[67,-1,-2],[[7,[5,68]]],69,[[71,[70]]]],[[67,-1,-2],[[7,[5,68]]],69,[[71,[70]]]],[[67,-1,-2],[[7,[5,68]]],69,[[71,[70]]]],[[67,-1,-2],[[7,[5,68]]],69,[[71,[70]]]],[[67,-1,-2],[[7,[5,68]]],69,[[71,[70]]]],[[67,-1,-2],[[7,[5,68]]],69,[[71,[70]]]],[[67,-1,-2],[[7,[5,68]]],69,[[71,[70]]]],[[1,2,8,8,4,16],[[7,[5,6]]]],[[1,2],[[7,[5,6]]]],[[1,2,3,8],[[7,[3,6]]]],[[2,-1],7,72],[[17,-1],7,72],[[18,-1],7,72],[[1,2,8],16],0,0,[[-1,[63,[-2]]],[[7,[5,45]]],[],64],[[-1,[63,[-2]]],[[7,[5,45]]],[],64],[[-1,[63,[-2]]],[[7,[5,45]]],[],64],[[-1,[63,[-2]]],[[7,[5,45]]],[],64],[[-1,[63,[-2]]],[[7,[5,45]]],[],64],[[-1,[63,[-2]]],[[7,[5,45]]],[],64],[[-1,[63,[-2]]],[[7,[5,45]]],[],64],[[-1,[63,[-2]]],[[7,[5,45]]],[],64],[[-1,[63,[-2]]],[[7,[5,45]]],[],64],[6,[[11,[73]]]],[[18,-1],[[7,[5,45]]],74],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2,3,8],[[7,[3,6]]]],[18,3],[-1,3,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,75,[]],[-1,75,[]],[-1,75,[]],[-1,75,[]],[-1,75,[]],[-1,75,[]],[-1,75,[]],[-1,75,[]],[-1,75,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"ParticleAppServices",0],[4,"PeerScope",0],[3,"String",414],[3,"PeerId",415],[15,"tuple"],[4,"ServiceError",0],[4,"Result",416],[15,"str"],[4,"Value",417],[3,"Vec",418],[4,"Option",419],[3,"Duration",420],[4,"FunctionOutcome",421],[3,"Args",422],[3,"ParticleParams",423],[15,"bool"],[4,"ServiceType",0],[4,"IType",0],[4,"IValue",0],[3,"ParticleAppServicesConfig",0],[3,"WasmBackendConfig",0],[4,"Ordering",424],[6,"Result",425],[3,"Formatter",426],[3,"Error",426],[15,"usize"],[8,"Deserializer",427],[6,"Result",426],[3,"ServiceInfo",0],[4,"VaultError",428],[4,"AppServiceError",429],[4,"ArgsError",430],[4,"ModuleError",431],[15,"u8"],[15,"f32"],[15,"u32"],[15,"i16"],[15,"i64"],[15,"u16"],[15,"i8"],[15,"u64"],[15,"f64"],[15,"i32"],[3,"FdFlags",432],[3,"Error",433],[8,"Hash",434],[8,"Sized",435],[8,"BuildHasher",434],[3,"Arc",436],[3,"JError",430],[8,"Hasher",434],[3,"Box",437],[8,"Any",438],[3,"Rc",439],[3,"ModuleRepository",440],[3,"ServicesMetrics",441],[3,"HealthCheckRegistry",442],[3,"Workers",443],[3,"PeerScopes",444],[3,"PathBuf",445],[3,"HashMap",446],[3,"ByteSize",447],[3,"SetFdFlags",432],[8,"AsFilelike",448],[3,"Parser",449],[3,"Error",450],[3,"RawCodec",451],[3,"Error",452],[8,"Read",453],[3,"Cid",454],[8,"Extend",455],[8,"Serializer",456],[8,"Error",457],[8,"Write",453],[3,"TypeId",438],[13,"SerializePersistedService",391],[13,"ReadPersistedService",391],[13,"DeserializePersistedService",391],[13,"CreateServicesDir",391],[13,"VaultLink",391],[13,"WritePersistedService",391],[13,"FailedToCreateDirectory",391],[13,"NoSuchServiceWithFunction",391],[13,"Forbidden",391],[13,"CallServiceFailedWrongWorker",391],[13,"WorkerNotFound",391]],"b":[[186,"impl-Debug-for-ServiceError"],[187,"impl-Display-for-ServiceError"],[196,"impl-From%3CVaultError%3E-for-ServiceError"],[198,"impl-From%3CAppServiceError%3E-for-ServiceError"],[199,"impl-From%3CArgsError%3E-for-ServiceError"],[200,"impl-From%3CModuleError%3E-for-ServiceError"],[201,"impl-From%3Cu8%3E-for-IValue"],[202,"impl-From%3Cf32%3E-for-IValue"],[204,"impl-From%3Cu32%3E-for-IValue"],[205,"impl-From%3Ci16%3E-for-IValue"],[206,"impl-From%3Ci64%3E-for-IValue"],[207,"impl-From%3Cu16%3E-for-IValue"],[208,"impl-From%3Ci8%3E-for-IValue"],[209,"impl-From%3Cu64%3E-for-IValue"],[210,"impl-From%3Cf64%3E-for-IValue"],[211,"impl-From%3Ci32%3E-for-IValue"],[212,"impl-From%3CVec%3Cu8%3E%3E-for-IValue"],[213,"impl-From%3CString%3E-for-IValue"]]},\
"peer_metrics":{"doc":"","t":"DNDDNNDDDNENNNNNDNDDDNDEENNEDEDDDDNNDNDDDNDEFMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMMMMMLMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMMMMM","n":["Addresses","Builtin","ChainInfo","ChainListenerMetrics","Common","ConnectionFailed","ConnectionPoolMetrics","ConnectivityMetrics","DispatcherMetrics","Fail","FunctionKind","Host","Kademlia","KademliaError","KademliaNotFound","Local","NetworkInfo","NotHappened","NoxInfo","NoxVersion","ParticleExecutorMetrics","ParticleFunction","ParticleLabel","ParticleType","Resolution","Service","Service","ServiceCallStats","ServiceMemoryStat","ServiceType","ServicesMetrics","ServicesMetricsBackend","ServicesMetricsBuiltin","ServicesMetricsExternal","Spell","Spell","SpellMetrics","Success","SystemInfo","VmInfo","VmPoolMetrics","Worker","WorkerLabel","WorkerType","add_info_metrics","air_version","alive_actors","allow_gpu","bootstrap_connected","bootstrap_disconnected","bootstrap_nodes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtin","call_failed_count","call_success_count","call_time_sec","chain_info","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connected_peers","count_resolution","cpus_range","creation_count","creation_failure_count","creation_time_msec","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","default","default","default","default","default","default","default_base_fee","default_priority_fee","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diamond_contract_address","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","epoch_end_window_secs","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expired_particles","external","external_address","external_multiaddresses","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_vms","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_used_memory","get_vm","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","host_ssh_port","http_endpoint","incoming_particle","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","interface","interpretation_failures","interpretation_successes","interpretation_time_sec","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","listen_ip","lock_wait_time_sec","max_batch_count","max_proof_batch_size","max_spell_particle_ttl_sec","measure_memory","memory_metrics","min_batch_count","modules_in_services_count","modules_stats","network_id","network_info","network_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","no_free_vm","node_version","observe_allowed_proofs_settings","observe_builtins","observe_ccp_reply","observe_ccp_request","observe_commiment_status","observe_created","observe_created","observe_created_failed","observe_current_epoch","observe_cus_in_deals","observe_cus_in_deals_added","observe_cus_in_deals_removed","observe_cus_total","observe_epoch_settings","observe_finished_spell","observe_new_block","observe_new_commitment","observe_processed_block","observe_proof_failed","observe_proof_tx_failed","observe_proof_tx_success","observe_proofs_submitted","observe_removed","observe_removed","observe_removed_commitment","observe_service_state","observe_service_state_failed","observe_spell_cast","observe_started_spell","particle_execution_timeout_sec","particle_expired","particle_queue_size","particle_send_failure","particle_send_success","particle_sizes","peer_id","port_range_end","port_range_start","proof_poll_period_secs","public_ip","put_vm","read","received_particles","removal_count","removal_time_msec","send_particle_failed","send_particle_ok","service_call","services_count","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_pool_size","spell_version","start","system_cpu_count","system_info","tcp_port","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_actors_mailbox","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","used_mem","version","vm_info","vm_mem_avg","vm_mem_cma","vm_mem_histo","vm_mem_max","vm_mem_max_value","vm_mem_measures","vm_mem_min","vm_mem_min_value","vm_mem_total","vm_mems","vm_ssh_port","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","websocket_port","with_external_backend","with_external_metrics","with_simple_backend","ws_endpoint","call_time_sec","lock_wait_time_sec","memory_delta_bytes","timestamp","timestamp"],"q":[[0,"peer_metrics"],[824,"peer_metrics::ServiceCallStats"],[829,"prometheus_client::registry"],[830,"core::fmt"],[831,"core::fmt"],[832,"alloc::string"],[833,"prometheus_client::encoding"],[834,"prometheus_client::encoding"],[835,"std::io::error"],[836,"core::hash"],[837,"core::marker"],[838,"core::hash"],[839,"core::hash"],[840,"core::option"],[841,"tokio::sync::mpsc::unbounded"],[842,"core::time"],[843,"tokio::runtime::task::join"],[844,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","Service function call stats to store in memory","","","","The backend creates a separate threads that processes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Service call time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of (srv create) calls","Number of (srv create) failures","How long it took to create a serviceeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Memory metrics","","How many modules a service includes.","Memory used by the modules that belongs to the service","","","","Create a backend with only builtin metrics gathering …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Collect all metrics that are relevant on service creation.","","","","","","","","","","","","","","","","Collect all metrics that are relevant on service removal.","","","","","","","","","","","","","","","","","","","","","Number of (srv remove) calls","How long it took to remove a service","","","","Number of currently running services","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Memory used by the service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create fully a functional backend for both external and …","","","","","","",""],"i":[0,20,0,0,25,6,0,0,0,37,0,18,6,6,6,6,0,15,0,0,0,15,0,0,0,15,20,0,0,0,0,0,0,0,20,25,0,37,0,0,0,18,0,0,0,9,16,12,7,7,13,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,22,21,21,21,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,5,7,11,21,21,21,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,10,11,12,13,14,31,10,10,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,10,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,6,9,10,11,12,13,14,15,17,18,20,25,26,10,6,9,10,11,12,13,14,15,17,18,20,25,26,6,6,6,6,6,9,9,9,9,9,10,10,10,10,10,11,11,11,11,11,12,12,12,12,12,13,13,13,13,13,14,14,14,14,14,15,15,15,15,15,17,17,17,17,17,18,18,18,18,18,20,20,20,20,20,25,25,25,25,25,26,26,26,26,26,8,22,13,13,6,9,10,11,12,13,14,15,17,18,20,37,31,22,25,26,24,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,6,9,10,11,12,13,14,15,17,18,20,25,26,19,24,6,9,10,11,12,13,14,15,17,18,20,25,26,12,10,5,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,12,16,16,16,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,13,21,10,10,11,24,21,10,21,31,10,2,13,50,4,5,7,8,16,17,19,21,31,22,23,24,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,24,9,4,22,4,4,4,21,22,22,4,4,4,4,4,4,23,4,4,4,4,4,4,4,21,22,4,22,22,23,23,11,8,5,7,7,5,10,12,12,10,12,24,19,5,21,21,7,7,16,21,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,24,9,50,11,2,13,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,16,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,19,31,2,2,24,24,24,24,24,24,24,24,24,24,12,2,50,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,37,31,22,23,24,25,26,13,22,50,22,10,59,59,59,59,60],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,[[7,6],3],0,0,0,0,[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[27,[[29,[3,28]]]],[30,10],[[],11],[[],12],[[],13],[[],14],[[],31],0,0,[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],[32,-1,[]],0,[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[[6,33],[[29,[3,28]]]],[[9,34],[[29,[3,28]]]],[[10,34],[[29,[3,28]]]],[[11,34],[[29,[3,28]]]],[[12,34],[[29,[3,28]]]],[[13,34],[[29,[3,28]]]],[[14,33],[[29,[3,28]]]],[[15,33],[[29,[3,28]]]],[[17,34],[[29,[3,28]]]],[[18,33],[[29,[3,28]]]],[[20,33],[[29,[3,28]]]],[[25,33],[[29,[3,28]]]],[[26,34],[[29,[3,28]]]],0,[[6,6],35],[[9,9],35],[[10,10],35],[[11,11],35],[[12,12],35],[[13,13],35],[[14,14],35],[[15,15],35],[[17,17],35],[[18,18],35],[[20,20],35],[[25,25],35],[[26,26],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],0,0,0,0,[[6,27],36],[[9,27],36],[[10,27],36],[[11,27],36],[[12,27],36],[[13,27],36],[[14,27],36],[[15,27],36],[[17,27],36],[[18,27],36],[[20,27],36],[[37,27],36],[[31,27],36],[[22,27],36],[[25,27],36],[[26,27],36],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[-1,[[29,[38,39]]],[]],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[44,40],0,[[6,-1],3,45],[[9,-1],3,45],[[10,-1],3,45],[[11,-1],3,45],[[12,-1],3,45],[[13,-1],3,45],[[14,-1],3,45],[[15,-1],3,45],[[17,-1],3,45],[[18,-1],3,45],[[20,-1],3,45],[[25,-1],3,45],[[26,-1],3,45],0,0,[[5,46,47,48],3],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[24,32,40],3],0,0,0,0,0,0,0,[[19,[49,[0]]],50],[1,4],[1,5],[1,7],[[1,[51,[32]]],8],[1,16],[[18,30],17],[32,19],[1,21],[44,31],[[[51,[21]],[52,[0]],32],22],[1,23],[1,24],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],[[-1,38],[[29,[[53,[-2]],39]]],[],54],0,0,[[4,47,47],3],[[22,35,48],3],[[4,48],3],[4,3],[[4,40],3],[[21,20,48,48],3],[[22,30,20,31,48],3],[22,3],[[4,47],3],[[4,47],3],[[4,47],3],[[4,47],3],[[4,47],3],[[4,47,47],3],[23,3],[[4,40],3],[[4,30],3],[[4,40],3],[4,3],[[4,30],3],[4,3],[[4,40],3],[[21,20,48],3],[[22,20,48],3],[[4,30],3],[[22,30,30,20,31,37],3],[[22,30,[51,[30]],20,37],3],[23,3],[[23,55],3],0,[[8,46],3],0,0,0,0,0,0,0,0,0,0,[[19,30],[[51,[0]]]],0,0,0,[[7,46],3],[[7,46],3],[[16,35,15,[51,[56]]],3],0,[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[-1,[53,[-2]]],[[29,[3,39]]],[],54],[[24,32],3],0,[50,[[57,[3]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[[19,30,30,37],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[56,32,1],[[3,[50,22]]]],0,[32,[[3,[50,22]]]],0,0,0,0,0,0],"c":[],"p":[[3,"Registry",829],[3,"NoxInfo",0],[15,"tuple"],[3,"ChainListenerMetrics",0],[3,"ConnectionPoolMetrics",0],[4,"Resolution",0],[3,"ConnectivityMetrics",0],[3,"DispatcherMetrics",0],[3,"NoxVersion",0],[3,"ChainInfo",0],[3,"SystemInfo",0],[3,"VmInfo",0],[3,"NetworkInfo",0],[3,"Addresses",0],[4,"FunctionKind",0],[3,"ParticleExecutorMetrics",0],[3,"WorkerLabel",0],[4,"WorkerType",0],[3,"ServicesMetricsBuiltin",0],[4,"ServiceType",0],[3,"ServicesMetricsExternal",0],[3,"ServicesMetrics",0],[3,"SpellMetrics",0],[3,"VmPoolMetrics",0],[4,"ParticleType",0],[3,"ParticleLabel",0],[3,"Formatter",830],[3,"Error",830],[4,"Result",831],[3,"String",832],[3,"ServiceMemoryStat",0],[15,"usize"],[3,"LabelValueEncoder",833],[3,"LabelSetEncoder",833],[15,"bool"],[6,"Result",830],[4,"ServiceCallStats",0],[3,"FdFlags",834],[3,"Error",835],[15,"u64"],[8,"Hash",836],[8,"Sized",837],[8,"BuildHasher",836],[3,"MemoryStats",838],[8,"Hasher",836],[15,"str"],[15,"i64"],[15,"f64"],[3,"UnboundedReceiver",839],[3,"ServicesMetricsBackend",0],[4,"Option",840],[3,"UnboundedSender",839],[3,"SetFdFlags",834],[8,"AsFilelike",841],[15,"u32"],[3,"Duration",842],[3,"JoinHandle",843],[3,"TypeId",844],[13,"Success",824],[13,"Fail",824]],"b":[]},\
"server_config":{"doc":"","t":"CDDDDNNCNDNEDDNDNNCEDDDMMMALLLLLLLLLLLLLMFMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLMMMMLLFFFMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMFFFFFFFMFFFFFFFFFFFFLLMLLLLLLLLMMMMFMLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLFFMMMMMMMMMMMMMMMMLMMMMMMMMMFMMMMMMMMMLLLLLLLLLLLLLMLMMLLLLLLLLLLLMFMMMMALLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLMMMMLMMNDNENNDNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDNDNDEDNLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["AquaIpfsConfig","BootstrapConfig","ChainConfig","ChainListenerConfig","ConfigData","Custom","Dar","DeciderConfig","Disabled","KademliaConfig","Kras","Network","NetworkConfig","NodeConfig","Otlp","ResolvedConfig","Stage","Stdout","SystemServicesConfig","TracingConfig","TransportConfig","UnresolvedConfig","VmNetworkConfig","allow_local_addresses","allowed_effectors","aquavm_pool_size","args","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","authors","avm_base_dir","avm_config","ban_cooldown","binary_name","bootstrap","bootstrap_config","bootstrap_delay","bootstrap_frequency","bootstrap_frequency","bootstrap_max_delay","bootstrap_nodes","bootstrap_nodes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bridge_name","builtins_key_pair","ccp_endpoint","chain_config","chain_listener_config","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connection_idle_timeout","connection_idle_timeout","connection_limits","cpus_range","default","default","default_allowed_binaries","default_aquavm_pool_size","default_base_dir","default_base_fee","default_binaries_mapping","default_bootstrap_frequency","default_bootstrap_nodes","default_builtins_keypair_path","default_connection_idle_timeout","default_cpus_range","default_curl_binary_path","default_decider_spell_period_sec","default_effectors","default_effects_queue_buffer_size","default_epoch_end_window","default_execution_timeout","default_health_check_enabled","default_http_port","default_ipfs_binary_path","default_ipfs_multiaddr","default_key_format","default_keypair_path","default_listen_ip","default_management_peer_id","default_max_batch_count","default_max_builtin_metrics_storage_size","default_max_established_per_peer_limit","default_max_proof_batch_size","default_max_spell_particle_ttl","default_metrics_enabled","default_min_batch_count","default_particle_processor_parallelism","default_particle_queue_buffer_size","default_priority_fee","default_processing_timeout","default_proof_poll_period","default_registry_expired_spell_period_sec","default_registry_renew_spell_period_sec","default_registry_replicate_spell_period_sec","default_registry_spell_period_sec","default_service_memory_limit","default_service_memory_limit","default_services_metrics_timer_resolution","default_socket_timeout","default_system_cpu_count","default_system_services","default_tcp_port","default_tokio_metrics_enabled","default_tokio_metrics_poll_histogram_enabled","default_transport","default_websocket_port","default_worker_spell_period_sec","default_workers_queue_buffer_size","default_ws_ping_period","deref","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dev_mode_config","diamond_contract_address","dir_config","effects_queue_buffer","ephemeral_dir","epoch_end_window","eq","eq","eq","equivalent","equivalent","equivalent","external_address","external_addresses","external_multiaddresses","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","health_config","host_ssh_port","http_config","http_endpoint","http_listen_addr","interface","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","kademlia","kademlia_config","key_pair","libp2p_metrics","listen_config","listen_multiaddrs","load_config","load_config_with_args","local_peer_id","management_peer_id","max_batch_count","max_established","max_established_incoming","max_established_outgoing","max_established_per_peer","max_packet_size","max_pending_incoming","max_pending_outgoing","max_proof_batch_size","max_spell_particle_ttl","metrics_config","min_batch_count","network","network_id","new","no_banner","node_config","node_config","node_version","particle_execution_timeout","particle_processor_parallelism","particle_queue_buffer","particle_queue_buffer","peer_fail_threshold","persistent_dir","port_range","print_config","proof_poll_period","protocol_config","protocol_config","protocol_name","public_ip","query_timeout","reconnect_delay","references","references","references","references","references","references","references","references","references","references","references","references","references","replication_factor","resolve","root_key_pair","root_weights","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","services","services_dir","services_envs","socket_timeout","system_cpu_count","system_services","system_services_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","tracing","transport","transport_config","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","version","vm","vm_ip","vm_ssh_port","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet_key","workers_queue_buffer","ws_endpoint","ws_ping_period","zero","endpoint","sample_ratio","All","DevModeArgs","Disabled","EnabledSystemServices","None","Otlp","RootKeyPairArgs","Some","TracingArgs","TracingType","as_","as_","as_","as_","as_","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","command","command_for_update","endpoint","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","references","references","references","references","references","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_possible_value","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","value_variants","vzip","vzip","vzip","vzip","vzip","AquaIpfs","AquaIpfsConfig","ConnectorConfig","Decider","DeciderConfig","Registry","RegistryConfig","ServiceKey","SystemServicesConfig","TrustGraph","all_values","aqua_ipfs","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connector","curl_binary_path","decider","decider_period_sec","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","enable","eq","equivalent","equivalent","equivalent","expired_period_sec","external_api_multiaddr","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_string","get_hash","hash","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","ipfs_binary_path","local_api_multiaddr","references","references","references","references","references","references","registry","registry_period_sec","renew_period_sec","replicate_period_sec","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","vzip","vzip","vzip","vzip","vzip","vzip","worker_ipfs_multiaddr","worker_period_sec"],"q":[[0,"server_config"],[443,"server_config::TracingConfig"],[445,"server_config::args"],[576,"server_config::system_services_config"],[737,"bnum::cast"],[738,"std::path"],[739,"std::path"],[740,"alloc::vec"],[741,"alloc::collections::btree::map"],[742,"multiaddr"],[743,"core::time"],[744,"core_distributor::core_range"],[745,"core::option"],[746,"std::collections::hash::map"],[747,"core::net::ip_addr"],[748,"libp2p_identity::peer_id"],[749,"bytesize"],[750,"fluence_libp2p::transport"],[751,"core::result"],[752,"serde::de"],[753,"core::fmt"],[754,"core::fmt"],[755,"alloc::boxed"],[756,"core::any"],[757,"alloc::sync"],[758,"alloc::rc"],[759,"eyre"],[760,"std::ffi::os_str"],[761,"libp2p_metrics"],[762,"libp2p_identity::keypair"],[763,"libp2p_connection_limits"],[764,"libipld_core::raw"],[765,"anyhow"],[766,"std::io"],[767,"cid::cid"],[768,"core::iter::traits::collect"],[769,"serde::ser"],[770,"core::any"],[771,"clap_builder::parser::matches::arg_matches"],[772,"clap_builder"],[773,"clap_builder::util::id"],[774,"clap_builder::builder::possible_value"],[775,"core::hash"],[776,"core::marker"],[777,"core::hash"]],"d":["","","","","","","","","","see <code>libp2p_kad::KademliaConfig</code>","","","","","","","","","","","","","","","","Number of AVMs to create. By default, <code>num_cpus::get() * 2</code> …","","","","","","","","","","","","","","","","","These are the AquaVM limits that are used by the AquaVM …","Period after which peer ban is lifted","","","","","","","","","Bootstrap nodes to join to the Fluence network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If none, comes from the chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If none, comes from the chain","","","","","","","","Default heap size in bytes available for a WASM service …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defined how much time before epoch end to send all found …","","","","","","","External address to advertise via identify protocol","","External multiaddresses to advertise; more flexible that …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hierarchically loads the configuration using args and envs.","","","","Max number of proofs in a batch for CU to be sent on chain","","","","","","","","Max number of proofs batches to be sent on chain","","","Min number of proofs in a batch for CU to be sent on chain","","","","","","","","","","","","Number of times peer is failed to be discovered before it …","","","","How often to poll proofs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Socket timeout for main transport","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates config with all values to zero, so no delays. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,6,6,0,13,0,6,0,0,0,13,0,6,13,0,0,0,0,0,7,7,7,0,49,42,4,5,6,7,8,9,10,11,12,13,14,42,0,7,5,42,49,7,4,49,7,4,49,7,49,42,4,5,6,7,8,9,10,11,12,13,14,49,42,4,5,6,7,8,9,10,11,12,13,14,11,7,10,7,7,4,5,6,7,8,9,10,11,12,13,14,4,5,6,7,8,9,10,11,12,13,14,49,8,49,7,4,6,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,14,14,42,4,6,8,9,10,11,12,13,7,9,14,7,0,10,6,11,13,11,11,11,7,14,7,4,5,6,6,7,8,9,10,11,12,13,14,49,42,4,5,6,7,8,9,10,11,12,13,14,7,11,7,9,14,11,49,42,4,5,6,7,8,9,10,11,12,13,14,49,42,4,5,6,7,8,9,10,11,12,13,14,49,42,4,5,6,7,8,9,10,11,12,13,14,49,42,4,5,6,7,8,9,10,11,12,13,14,7,49,49,49,7,14,0,0,49,7,10,8,8,8,8,5,8,8,10,7,7,10,7,9,49,12,12,14,49,7,7,49,7,5,0,11,12,10,49,7,5,11,5,4,49,42,4,5,6,7,8,9,10,11,12,13,14,5,12,7,7,4,5,6,7,8,9,10,11,12,13,14,7,0,7,8,7,7,0,4,5,6,7,8,9,10,11,12,13,14,6,12,8,7,49,42,4,5,6,7,8,9,10,11,12,13,14,49,42,4,5,6,7,8,9,10,11,12,13,14,49,42,4,5,6,7,8,9,10,11,12,13,14,49,42,4,5,6,7,8,9,10,11,12,13,14,42,7,11,11,49,42,4,5,6,7,8,9,10,11,12,13,14,9,7,10,10,4,78,78,61,0,60,0,61,60,0,61,0,0,58,59,60,61,62,58,59,62,58,59,62,58,59,60,61,62,58,59,60,61,62,58,59,60,61,62,58,59,60,61,62,62,62,59,58,59,60,61,62,58,59,60,61,62,58,59,62,58,59,62,58,59,62,58,59,60,61,62,58,59,60,61,62,58,59,60,61,62,58,59,60,61,62,58,59,60,61,62,58,59,60,61,62,58,59,60,61,62,60,58,59,60,61,62,58,59,60,61,62,58,59,60,61,62,58,59,60,61,62,58,59,62,58,59,62,60,58,59,60,61,62,31,0,0,31,0,31,0,0,0,31,31,68,31,68,69,70,71,72,31,68,69,70,71,72,31,68,69,70,71,72,31,68,69,70,71,72,31,68,69,70,71,72,68,70,68,71,68,69,70,71,72,31,68,69,70,71,72,68,31,31,31,31,72,69,31,31,68,69,70,71,72,31,68,69,70,71,72,31,31,31,31,68,69,70,71,72,31,68,69,70,71,72,31,68,69,70,71,72,31,68,69,70,71,72,69,69,31,68,69,70,71,72,68,72,72,72,31,68,69,70,71,72,31,68,69,70,71,72,31,31,68,69,70,71,72,31,68,69,70,71,72,31,68,69,70,71,72,31,68,69,70,71,72,31,68,69,70,71,72,71,71],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],0,[2,3],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],0,0,0,0,[[],4],[[],6],[[],[[17,[16]]]],[[],18],[[],3],0,[[],[[19,[16,3]]]],[[],18],[[],[[17,[20]]]],0,[[],21],[[],[[23,[22]]]],[[],3],[[],24],[[],[[25,[16,[15,[16,[25,[16,3]]]]]]]],[[],18],[[],21],[[],21],[[],26],[[],27],[[],3],[[],16],[[],16],0,[[],28],[[],29],[[],18],[[],18],[[],[[23,[24]]]],[[],18],[[],21],[[],26],[[],18],[[],[[23,[18]]]],[[],18],0,[[],21],[[],21],[[],24],[[],24],[[],24],[[],24],[[],30],0,[[],21],[[],21],[[],18],[[],[[17,[31]]]],[[],27],[[],26],[[],26],[[],32],[[],27],[[],24],[[],18],[[],21],[14],[14],0,[-1,[[33,[4]]],34],[-1,[[33,[6]]],34],[-1,[[33,[8]]],34],[-1,[[33,[9]]],34],[-1,[[33,[10]]],34],[-1,[[33,[11]]],34],[-1,[[33,[12]]],34],[-1,[[33,[13]]],34],0,0,0,0,[2,3],0,[[6,6],26],[[11,11],26],[[13,13],26],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],0,[14,[[17,[20]]]],0,[[4,35],36],[[5,35],36],[[6,35],36],[[6,35],36],[[7,35],36],[[8,35],36],[[9,35],36],[[10,35],36],[[11,35],36],[[12,35],36],[[13,35],36],[[14,35],36],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[14,[[23,[37]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],0,0,0,0,0,[14,[[17,[20]]]],[[[23,[42]]],[[43,[12]]]],[[[17,[44]],[23,[42]]],[[43,[12]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[23,[[40,[45]]]],46,14,47,48],49],0,0,0,0,0,0,0,0,0,[2,3],0,0,0,0,0,0,0,0,0,[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],0,[12,[[43,[14]]]],0,0,[[4,-1],33,55],[[5,-1],33,55],[[6,-1],33,55],[[7,-1],33,55],[[8,-1],33,55],[[9,-1],33,55],[[10,-1],33,55],[[11,-1],33,55],[[12,-1],33,55],[[13,-1],33,55],[[14,-1],33,55],0,[2,3],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,16,[]],0,0,0,[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[],4],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[57,57],[57,57],[57,57],[57,57],[57,57],[57,57],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,58],[59,59],[60,60],[61,61],[62,62],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[],57],[[],57],0,[[58,35],36],[[59,35],36],[[60,35],36],[[61,35],36],[[62,35],36],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[63,[[33,[58,64]]]],[63,[[33,[59,64]]]],[63,[[33,[62,64]]]],[63,[[33,[58,64]]]],[63,[[33,[59,64]]]],[63,[[33,[62,64]]]],[[],[[23,[65]]]],[[],[[23,[65]]]],[[],[[23,[65]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[58,-1],33,55],[[59,-1],33,55],[[60,-1],33,55],[[61,-1],33,55],[[62,-1],33,55],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,[[23,[66]]]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[58,63],[[33,[15,64]]]],[[59,63],[[33,[15,64]]]],[[62,63],[[33,[15,64]]]],[[58,63],[[33,[15,64]]]],[[59,63],[[33,[15,64]]]],[[62,63],[[33,[15,64]]]],[[],[[67,[60]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[],[[17,[31]]]],0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[31,31],[68,68],[69,69],[70,70],[71,71],[72,72],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],0,0,0,0,[[],68],[[],69],[[],70],[[],71],[[],72],[-1,[[33,[31]]],34],[-1,[[33,[68]]],34],[-1,[[33,[69]]],34],[-1,[[33,[70]]],34],[-1,[[33,[71]]],34],[-1,[[33,[72]]],34],0,[[31,31],26],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],0,0,[[31,35],36],[[31,35],36],[[68,35],36],[[69,35],36],[[70,35],36],[[71,35],36],[[72,35],36],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[47,[[23,[31]]]],[[-1,-2],73,[74,75],76],[[31,-1],15,77],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[38,[-1]]],[[38,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[40,[-1]]],[[40,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],[[[41,[-1]]],[[41,[39]]],[]],0,0,[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],[[50,-1,-2],[[33,[15,51]]],52,[[54,[53]]]],0,0,0,0,[[31,-1],33,55],[[68,-1],33,55],[[69,-1],33,55],[[70,-1],33,55],[[71,-1],33,55],[[72,-1],33,55],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,16,[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0],"c":[],"p":[[8,"CastFrom",737],[3,"Path",738],[3,"PathBuf",738],[3,"BootstrapConfig",0],[3,"KademliaConfig",0],[4,"Network",0],[3,"NodeConfig",0],[3,"TransportConfig",0],[3,"ChainConfig",0],[3,"ChainListenerConfig",0],[3,"VmNetworkConfig",0],[3,"UnresolvedConfig",0],[4,"TracingConfig",0],[3,"ResolvedConfig",0],[15,"tuple"],[3,"String",739],[3,"Vec",740],[15,"usize"],[3,"BTreeMap",741],[3,"Multiaddr",742],[3,"Duration",743],[3,"CoreRange",744],[4,"Option",745],[15,"u32"],[3,"HashMap",746],[15,"bool"],[15,"u16"],[4,"IpAddr",747],[3,"PeerId",748],[3,"ByteSize",749],[4,"ServiceKey",576],[4,"Transport",750],[4,"Result",751],[8,"Deserializer",752],[3,"Formatter",753],[6,"Result",753],[4,"SocketAddr",754],[3,"Box",755],[8,"Any",756],[3,"Arc",757],[3,"Rc",758],[3,"ConfigData",0],[6,"Result",759],[3,"OsString",760],[3,"Metrics",761],[3,"Keypair",762],[15,"str"],[3,"ConnectionLimits",763],[3,"NetworkConfig",0],[3,"RawCodec",764],[3,"Error",765],[8,"Read",766],[3,"Cid",767],[8,"Extend",768],[8,"Serializer",769],[3,"TypeId",756],[3,"Command",770],[3,"RootKeyPairArgs",445],[3,"TracingArgs",445],[4,"TracingType",445],[4,"EnabledSystemServices",445],[3,"DevModeArgs",445],[3,"ArgMatches",771],[6,"Error",772],[3,"Id",773],[3,"PossibleValue",774],[15,"slice"],[3,"SystemServicesConfig",576],[3,"AquaIpfsConfig",576],[3,"ConnectorConfig",576],[3,"DeciderConfig",576],[3,"RegistryConfig",576],[15,"u64"],[8,"Hash",775],[8,"Sized",776],[8,"BuildHasher",775],[8,"Hasher",775],[13,"Otlp",443]],"b":[[194,"impl-Debug-for-Network"],[195,"impl-Display-for-Network"],[640,"impl-Debug-for-ServiceKey"],[641,"impl-Display-for-ServiceKey"]]},\
"service_modules":{"doc":"","t":"DDDLFFLLLLLLLLLLLLLMMLLLLLLLFLLLLLLLLLLLMLLLFFFFFFFFFMMLLLLLLLLFLLLLLLLLLLLLLL","n":["AddBlueprint","Blueprint","Hash","as_bytes","blueprint_file_name","blueprint_fname","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decode","dependencies","dependencies","deserialize","deserialize","encode","eq","equivalent","equivalent","equivalent","extract_module_file_name","fmt","fmt","fmt","fmt","from","from","from","from_string","get_facade_module","get_ipld","hash","id","into","into","into","is_blueprint","is_module_wasm","is_service","load_module","module_config","module_config_name_hash","module_config_name_json","module_file_name","module_file_name_hash","name","name","new","new","new","references","references","references","serialize","serialize","service_file_name","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"service_modules"],[78,"alloc::vec"],[79,"alloc::string"],[80,"eyre"],[81,"core::result"],[82,"serde::de"],[83,"std::path"],[84,"core::option"],[85,"core::fmt"],[86,"core::fmt"],[87,"libipld_core::ipld"],[88,"core::hash"],[89,"core::convert"],[90,"serde_json::value"],[91,"eyre"],[92,"anyhow"],[93,"std::io"],[94,"cid::cid"],[95,"core::iter::traits::collect"],[96,"serde::ser"],[97,"core::any"]],"d":["","","","","Calculates filename of the blueprint","","","","","","","","","","","","","","","","","","","encode IPLD object with DAG JSON codec","","","","","Return file name with .wasm extension stripped. None if …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if file is named like a blueprint would be","","","","","Calculates filename of the config for a wasm module","Calculates filename of the config for a wasm module, given …","Calculates the name of a wasm module file, given a hash or …","Calculates the name of a wasm module file, given a hash of …","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,0,0,7,4,1,7,4,1,7,4,1,7,4,1,7,7,4,4,1,7,1,1,1,1,0,7,4,1,1,7,4,1,1,4,7,1,4,7,4,1,0,0,0,0,0,0,0,0,0,7,4,7,4,1,7,4,1,4,1,0,7,4,1,7,1,7,4,1,7,4,1,7,4,1],"f":[0,0,0,[1,[[3,[2]]]],[4,5],[6,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,7],[4,4],[1,1],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[[9,[2]]],[[10,[7]]]],0,0,[-1,[[11,[4]]],12],[-1,[[11,[1]]],12],[7,[[10,[[3,[2]]]]]],[[1,1],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[14,[[15,[6]]]],[[7,16],17],[[4,16],17],[[1,16],[[11,[8,18]]]],[[1,16],[[11,[8,18]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,[[11,[1,19]]]],[4,[[15,[1]]]],[7,20],[[1,-1],8,21],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,13],[14,13],[14,13],[[6,-1],[[10,[[3,[2]]]]],[[22,[5]]]],[6,23],[1,5],[1,5],[6,5],[1,5],0,0,[[5,[3,[1]]],7],[7,[[10,[4]]]],[[[9,[2]]],[[11,[1,24]]]],[[25,-1,-2],[[11,[8,26]]],27,[[29,[28]]]],[[25,-1,-2],[[11,[8,26]]],27,[[29,[28]]]],[[25,-1,-2],[[11,[8,26]]],27,[[29,[28]]]],[[4,-1],11,30],[[1,-1],11,30],[6,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,[[10,[5]]]],[-1,5,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]]],"c":[],"p":[[3,"Hash",0],[15,"u8"],[3,"Vec",78],[3,"Blueprint",0],[3,"String",79],[15,"str"],[3,"AddBlueprint",0],[15,"tuple"],[15,"slice"],[6,"Result",80],[4,"Result",81],[8,"Deserializer",82],[15,"bool"],[3,"Path",83],[4,"Option",84],[3,"Formatter",85],[6,"Result",85],[3,"Error",85],[4,"Error",86],[4,"Ipld",87],[8,"Hasher",88],[8,"Into",89],[4,"Value",90],[3,"Report",80],[3,"RawCodec",91],[3,"Error",92],[8,"Read",93],[3,"Cid",94],[8,"Extend",95],[8,"Serializer",96],[3,"TypeId",97]],"b":[[31,"impl-Display-for-Hash"],[32,"impl-Debug-for-Hash"]]},\
"sorcerer":{"doc":"","t":"DDMLLLLLLLLLLLLLLLLLLLLLLLLLFLLFLLLLLLLLMLLLLLFMMLMLLMMMMMLLLMLLLLLLLLLLMM","n":["Sorcerer","SpellInfo","aquamarine","as_","as_","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","debug","debug","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","execute_script","fmt","from","from","get_fd_flags","get_fd_flags","get_spell_info","init","init","install_spell","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","key_storage","new","new_set_fd_flags","new_set_fd_flags","references","references","remove_spell","scopes","script","serialize","services","set_fd_flags","set_fd_flags","spell_event_bus_api","spell_metrics","spell_script_particle_ttl","spell_service_api","spell_storage","start","to_owned","to_owned","trigger_config","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","vzip","vzip","worker_period_sec","workers"],"q":[[0,"sorcerer"],[74,"bnum::cast"],[75,"core::fmt"],[76,"core::fmt"],[77,"serde::de"],[78,"spell_event_bus::api"],[79,"tracing::span"],[80,"alloc::sync"],[81,"core::fmt"],[82,"std::io::error"],[83,"spell_service_api"],[84,"types::peer_scope"],[85,"core::time"],[86,"alloc::string"],[87,"libp2p_identity::peer_id"],[88,"particle_args::args_error"],[89,"particle_services::app_services"],[90,"spell_storage::storage"],[91,"spell_event_bus::api"],[92,"serde_json::value"],[93,"alloc::boxed"],[94,"core::any"],[95,"alloc::rc"],[96,"particle_modules::modules"],[97,"aquamarine::aquamarine"],[98,"server_config::resolved_config"],[99,"workers::workers"],[100,"workers::key_storage"],[101,"workers::scope"],[102,"peer_metrics::spell_metrics"],[103,"core::option"],[104,"particle_builtins::builtins"],[105,"std::collections::hash::map"],[106,"system_interface::fs::fd_flags"],[107,"libipld_core::raw"],[108,"anyhow"],[109,"std::io"],[110,"cid::cid"],[111,"core::iter::traits::collect"],[112,"serde::ser"],[113,"tokio::sync::mpsc::unbounded"],[114,"tokio::runtime::task::join"],[115,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,2,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,3,2,3,2,3,2,3,2,3,0,2,3,0,2,3,2,3,2,3,2,3,2,2,2,3,2,3,0,2,3,3,2,2,3,2,2,2,2,2,2,2,3,3,2,3,2,3,2,3,2,3,2,3,2,2],"f":[0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[3,3],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[5,[[7,[4,6]]]],[5,[[7,[4,6]]]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[-1,[[7,[3]]],9],[8,4],[8,4],[[2,10,[12,[11]]],4],[[3,5],13],[-1,-1,[]],[-1,-1,[]],[-1,[[7,[14,15]]],[]],[-1,[[7,[14,15]]],[]],[[16,17,18,19,20],[[7,[3,21]]]],[[],8],[[],8],[[22,23,24,16,17,19,18,25,19,26,20],[[7,[19,21]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[28]]],[]],[[[27,[-1]]],[[27,[28]]],[]],[[[12,[-1]]],[[12,[28]]],[]],[[[12,[-1]]],[[12,[28]]],[]],[[[29,[-1]]],[[29,[28]]],[]],[[[29,[-1]]],[[29,[28]]],[]],0,[[22,30,31,32,24,[12,[33]],[12,[34]],35,16,[37,[36]]],[[4,[2,[39,[19,38]],19]]]],[[-1,14],[[7,[[40,[-2]],15]]],[],41],[[-1,14],[[7,[[40,[-2]],15]]],[],41],[[42,-1,-2],[[7,[4,43]]],44,[[46,[45]]]],[[42,-1,-2],[[7,[4,43]]],44,[[46,[45]]]],[[47,23,22,24,47,17,20],[[7,[4,21]]]],0,0,[[3,-1],7,48],0,[[-1,[40,[-2]]],[[7,[4,15]]],[],41],[[-1,[40,[-2]]],[[7,[4,15]]],[],41],0,0,0,0,0,[[2,[49,[10]]],[[50,[4]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,51,[]],[-1,51,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0],"c":[],"p":[[8,"CastFrom",74],[3,"Sorcerer",0],[3,"SpellInfo",0],[15,"tuple"],[3,"Formatter",75],[3,"Error",75],[4,"Result",76],[15,"usize"],[8,"Deserializer",77],[3,"TriggerEvent",78],[3,"Span",79],[3,"Arc",80],[6,"Result",75],[3,"FdFlags",81],[3,"Error",82],[3,"SpellServiceApi",83],[4,"PeerScope",84],[3,"Duration",85],[3,"String",86],[3,"PeerId",87],[3,"JError",88],[3,"ParticleAppServices",89],[3,"SpellStorage",90],[3,"SpellEventBusApi",78],[3,"TriggerConfig",91],[4,"Value",92],[3,"Box",93],[8,"Any",94],[3,"Rc",95],[3,"ModuleRepository",96],[3,"AquamarineApi",97],[3,"ResolvedConfig",98],[3,"Workers",99],[3,"KeyStorage",100],[3,"PeerScopes",101],[3,"SpellMetrics",102],[4,"Option",103],[3,"CustomService",104],[3,"HashMap",105],[3,"SetFdFlags",81],[8,"AsFilelike",106],[3,"RawCodec",107],[3,"Error",108],[8,"Read",109],[3,"Cid",110],[8,"Extend",111],[15,"str"],[8,"Serializer",112],[3,"UnboundedReceiver",113],[3,"JoinHandle",114],[3,"TypeId",94]],"b":[]},\
"spell_event_bus":{"doc":"","t":"AAEENNENNRNDENNDGDNNNDDEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDLLLLLLLLLLLLLLLLLL","n":["api","bus","Action","ConfigError","Connected","Disconnected","EventBusError","InvalidEndSec","InvalidPeriod","MAX_PERIOD_SEC","Peer","PeerEvent","PeerEventType","ReplyError","SendError","SpellEventBusApi","SpellId","SpellTriggerConfigs","Start","Subscribe","Timer","TimerEvent","TriggerEvent","TriggerInfo","TriggerInfoAqua","Unsubscribe","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connected","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_user_config","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_hash","hash","info","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_rescheduled","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","peer_id","serialize","serialize","serialize","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","spell_id","start_scheduling","subscribe","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsubscribe","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","action","reason","SpellEventBus","borrow","borrow_mut","debug","deref","deref_mut","drop","from","get_fd_flags","init","into","new","new_set_fd_flags","set_fd_flags","start","try_from","try_into","type_id","vzip"],"q":[[0,"spell_event_bus"],[2,"spell_event_bus::api"],[268,"spell_event_bus::api::EventBusError"],[270,"spell_event_bus::bus"],[289,"core::fmt"],[290,"core::fmt"],[291,"serde::de"],[292,"core::fmt"],[293,"fluence_spell_dtos::trigger_config"],[294,"core::option"],[295,"system_interface::fs::fd_flags"],[296,"std::io::error"],[297,"core::hash"],[298,"core::marker"],[299,"core::hash"],[300,"serde::ser"],[301,"alloc::string"],[302,"core::any"],[303,"peer_metrics::spell_metrics"],[304,"futures_core::stream"],[305,"alloc::vec"],[306,"tokio::sync::mpsc::unbounded"],[307,"tokio::runtime::task::join"]],"d":["","","","","","","","","","Max period is 100 years in secs: 60 sec * 60 min * 24 …","Event is triggered by a peer event.","Event is triggered by connection pool event","Types of events that are available for subscription.","","","","","","Actually start the scheduling","Subscribe a spell to a list of triggers","Event is triggered by timer.","","","","","Remove all subscriptions of a spell","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert user-friendly config to event-bus-friendly config, …","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subscribe a spell to a list of events The spell can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unsubscribe a spell from all events.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,5,5,0,19,19,0,2,0,0,18,18,0,0,0,6,6,2,0,0,0,0,6,1,2,3,4,5,15,6,18,7,19,8,1,2,3,4,5,15,6,18,7,19,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,4,1,2,3,4,5,15,6,18,7,19,8,1,2,3,4,5,15,6,18,7,19,8,1,2,3,4,5,15,6,18,7,19,8,3,4,15,1,2,3,4,5,15,6,18,7,19,8,5,5,5,5,5,5,1,2,3,4,5,15,6,18,18,7,19,19,8,1,2,2,3,4,4,5,15,15,6,18,7,19,8,0,1,2,3,4,5,15,6,18,7,19,8,5,5,1,1,2,3,4,5,15,6,18,7,19,8,1,2,3,4,5,15,6,18,7,19,8,8,1,2,3,4,5,15,6,18,7,19,8,4,3,4,15,1,2,3,4,5,15,6,18,7,19,8,1,7,7,3,1,2,3,4,5,6,7,8,18,19,1,2,3,4,5,15,6,18,7,19,8,1,2,3,4,5,15,6,18,7,19,8,1,2,3,4,5,15,6,18,7,19,8,7,1,2,3,4,5,15,6,18,7,19,8,42,42,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],0,[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[12,[3]]],14],[-1,[[12,[4]]],14],[-1,[[12,[15]]],14],[13,9],[13,9],[13,9],[13,9],[13,9],[13,9],[13,9],[13,9],[13,9],[13,9],[13,9],[[5,5],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[1,10],17],[[2,10],17],[[3,10],17],[[4,10],17],[[5,10],17],[[15,10],17],[[6,10],17],[[18,10],17],[[18,10],17],[[7,10],17],[[19,10],17],[[19,10],17],[[8,10],17],[-1,-1,[]],[15,2],[-1,-1,[]],[-1,-1,[]],[20,4],[-1,-1,[]],[-1,-1,[]],[2,15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[21,[[12,[[22,[8]],19]]]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[[-1,-2],25,[26,27],28],[[5,-1],9,29],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,[[22,[8]]]],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],0,[[3,-1],12,32],[[4,-1],12,32],[[15,-1],12,32],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],0,[7,[[12,[9,18]]]],[[7,33,8],[[12,[9,18]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,34,[]],[-1,34,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[[7,33],[[12,[9,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[10,[[12,[9,11]]]],[13,-1,[]],[13,-1,[]],[13,9],[-1,-1,[]],[-1,[[12,[23,24]]],[]],[[],13],[-1,-2,[],[]],[[[22,[36]],[38,[[37,[4]]]]],[[9,[39,7,[40,[1]]]]]],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[39,[[41,[9]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"TriggerEvent",2],[4,"TriggerInfo",2],[3,"TimerEvent",2],[3,"PeerEvent",2],[4,"PeerEventType",2],[4,"Action",2],[3,"SpellEventBusApi",2],[3,"SpellTriggerConfigs",2],[15,"tuple"],[3,"Formatter",289],[3,"Error",289],[4,"Result",290],[15,"usize"],[8,"Deserializer",291],[3,"TriggerInfoAqua",2],[15,"bool"],[6,"Result",289],[4,"EventBusError",2],[4,"ConfigError",2],[4,"LifecycleEvent",292],[3,"TriggerConfig",293],[4,"Option",294],[3,"FdFlags",295],[3,"Error",296],[15,"u64"],[8,"Hash",297],[8,"Sized",298],[8,"BuildHasher",297],[8,"Hasher",297],[3,"SetFdFlags",295],[8,"AsFilelike",299],[8,"Serializer",300],[6,"SpellId",2],[3,"String",301],[3,"TypeId",302],[3,"SpellMetrics",303],[6,"BoxStream",304],[3,"Vec",305],[3,"SpellEventBus",270],[3,"UnboundedReceiver",306],[3,"JoinHandle",307],[13,"SendError",268]],"b":[[125,"impl-Debug-for-EventBusError"],[126,"impl-Display-for-EventBusError"],[128,"impl-Debug-for-ConfigError"],[129,"impl-Display-for-ConfigError"]]},\
"spell_service_api":{"doc":"","t":"EDNNNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMM","n":["CallError","CallParams","EmptyResult","ExecutionError","OtherError","ResultParseError","ServiceNotFound","SpellServiceApi","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","debug","debug","debug","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","get_counter","get_fd_flags","get_fd_flags","get_fd_flags","get_script","get_string","get_trigger_config","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","local","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","references","references","references","set_counter","set_fd_flags","set_fd_flags","set_fd_flags","set_script","set_string","set_trigger_config","set_trigger_event","store_error","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_name","type_name","update_kv","vzip","vzip","vzip","function_name","function_name","function_name","function_name","function_name","reason","reason","reason","spell_id","spell_id","spell_id","spell_id","spell_id","target_type"],"q":[[0,"spell_service_api"],[96,"spell_service_api::CallError"],[110,"core::fmt"],[111,"core::fmt"],[112,"core::fmt"],[113,"particle_execution::particle_params"],[114,"core::option"],[115,"system_interface::fs::fd_flags"],[116,"std::io::error"],[117,"fluence_spell_dtos::trigger_config"],[118,"alloc::boxed"],[119,"core::any"],[120,"alloc::sync"],[121,"alloc::rc"],[122,"types::peer_scope"],[123,"libp2p_identity::peer_id"],[124,"core::time"],[125,"particle_services::app_services"],[126,"system_interface::fs::fd_flags"],[127,"libipld_core::raw"],[128,"anyhow"],[129,"std::io"],[130,"cid::cid"],[131,"core::iter::traits::collect"],[132,"serde_json::value"],[133,"alloc::vec"],[134,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Load the counter (how many times the spell was run)","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Update the counter (how many times the spell was run) …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,8,8,8,8,8,0,8,1,2,8,1,2,1,2,1,2,8,1,2,8,1,2,8,1,2,8,1,2,8,8,2,8,1,1,2,2,8,1,2,2,2,2,8,1,2,8,1,2,8,1,2,8,1,2,8,1,2,1,1,2,8,1,2,8,1,2,2,8,1,2,2,2,2,2,2,1,2,8,8,1,2,8,1,2,8,1,2,8,1,2,2,8,1,2,36,37,38,39,40,38,39,40,36,37,38,39,40,39],"f":[0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[4,[[6,[3,5]]]],[4,[[6,[3,5]]]],[4,[[6,[3,5]]]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,3],[7,3],[7,3],[[8,4],9],[[8,4],9],[[2,4],9],[-1,-1,[]],[[10,11],1],[-1,-1,[]],[-1,-1,[]],[[2,1],[[6,[[13,[12]],8]]]],[-1,[[6,[14,15]]],[]],[-1,[[6,[14,15]]],[]],[-1,[[6,[14,15]]],[]],[[2,1],[[6,[10,8]]]],[[2,1,10],[[6,[[13,[10]],8]]]],[[2,1],[[6,[16,8]]]],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[-1]]],[[17,[18]]],[]],[[[17,[-1]]],[[17,[18]]],[]],[[[17,[-1]]],[[17,[18]]],[]],[[[19,[-1]]],[[19,[18]]],[]],[[[19,[-1]]],[[19,[18]]],[]],[[[19,[-1]]],[[19,[18]]],[]],[[[20,[-1]]],[[20,[18]]],[]],[[[20,[-1]]],[[20,[18]]],[]],[[[20,[-1]]],[[20,[18]]],[]],[[21,10,22,23],1],[[22,21,10,[13,[10]],23],1],[24,2],[[-1,14],[[6,[[25,[-2]],15]]],[],26],[[-1,14],[[6,[[25,[-2]],15]]],[],26],[[-1,14],[[6,[[25,[-2]],15]]],[],26],[[27,-1,-2],[[6,[3,28]]],29,[[31,[30]]]],[[27,-1,-2],[[6,[3,28]]],29,[[31,[30]]]],[[27,-1,-2],[[6,[3,28]]],29,[[31,[30]]]],[[2,1,12],[[6,[3,8]]]],[[-1,[25,[-2]]],[[6,[3,15]]],[],26],[[-1,[25,[-2]]],[[6,[3,15]]],[],26],[[-1,[25,[-2]]],[[6,[3,15]]],[],26],[[2,1,10],[[6,[3,8]]]],[[2,1,10,10],[[6,[3,8]]]],[[2,1,16],[[6,[3,8]]]],[[2,1,10],[[6,[3,8]]]],[[2,1,[33,[32]]],[[6,[3,8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,10,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[[2,1,32],[[6,[3,8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"CallParams",0],[3,"SpellServiceApi",0],[15,"tuple"],[3,"Formatter",110],[3,"Error",110],[4,"Result",111],[15,"usize"],[4,"CallError",0],[6,"Result",110],[3,"String",112],[3,"ParticleParams",113],[15,"u32"],[4,"Option",114],[3,"FdFlags",115],[3,"Error",116],[3,"TriggerConfig",117],[3,"Box",118],[8,"Any",119],[3,"Arc",120],[3,"Rc",121],[4,"PeerScope",122],[3,"PeerId",123],[3,"Duration",124],[3,"ParticleAppServices",125],[3,"SetFdFlags",115],[8,"AsFilelike",126],[3,"RawCodec",127],[3,"Error",128],[8,"Read",129],[3,"Cid",130],[8,"Extend",131],[4,"Value",132],[3,"Vec",133],[3,"TypeId",119],[15,"str"],[13,"ServiceNotFound",96],[13,"EmptyResult",96],[13,"OtherError",96],[13,"ResultParseError",96],[13,"ExecutionError",96]],"b":[[30,"impl-Debug-for-CallError"],[31,"impl-Display-for-CallError"]]},\
"spell_storage":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["SpellStorage","borrow","borrow_mut","clone","clone_into","create","debug","deref","deref_mut","drop","fmt","from","get_blueprint","get_fd_flags","get_registered_spells","get_registered_spells_by","get_scope","init","into","into_any","into_any_arc","into_any_rc","new_set_fd_flags","references","register_spell","set_fd_flags","to_owned","try_from","try_into","type_id","type_name","unregister_spell","vzip"],"q":[[0,"spell_storage"],[33,"std::path"],[34,"particle_services::app_services"],[35,"particle_modules::modules"],[36,"alloc::string"],[37,"eyre"],[38,"core::fmt"],[39,"core::fmt"],[40,"core::fmt"],[41,"std::io::error"],[42,"types::peer_scope"],[43,"alloc::vec"],[44,"std::collections::hash::map"],[45,"core::option"],[46,"alloc::boxed"],[47,"core::any"],[48,"alloc::sync"],[49,"alloc::rc"],[50,"system_interface::fs::fd_flags"],[51,"libipld_core::raw"],[52,"anyhow"],[53,"std::io"],[54,"cid::cid"],[55,"core::iter::traits::collect"],[56,"core::any"]],"d":["","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[3,4,5],[[7,[[2,[1,6]]]]]],[8,[[10,[2,9]]]],[11,-1,[]],[11,-1,[]],[11,2],[[1,8],12],[-1,-1,[]],[1,6],[-1,[[10,[13,14]]],[]],[1,[[17,[15,[16,[6]]]]]],[[1,15],[[16,[6]]]],[[1,6],[[18,[15]]]],[[],11],[-1,-2,[],[]],[[[19,[-1]]],[[19,[20]]],[]],[[[21,[-1]]],[[21,[20]]],[]],[[[22,[-1]]],[[22,[20]]],[]],[[-1,13],[[10,[[23,[-2]],14]]],[],24],[[25,-1,-2],[[10,[2,26]]],27,[[29,[28]]]],[[1,15,6],2],[[-1,[23,[-2]]],[[10,[2,14]]],[],24],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,30,[]],[-1,31,[]],[[1,15,31],2],[-1,-2,[],[]]],"c":[],"p":[[3,"SpellStorage",0],[15,"tuple"],[3,"Path",33],[3,"ParticleAppServices",34],[3,"ModuleRepository",35],[3,"String",36],[6,"Result",37],[3,"Formatter",38],[3,"Error",38],[4,"Result",39],[15,"usize"],[6,"Result",38],[3,"FdFlags",40],[3,"Error",41],[4,"PeerScope",42],[3,"Vec",43],[3,"HashMap",44],[4,"Option",45],[3,"Box",46],[8,"Any",47],[3,"Arc",48],[3,"Rc",49],[3,"SetFdFlags",40],[8,"AsFilelike",50],[3,"RawCodec",51],[3,"Error",52],[8,"Read",53],[3,"Cid",54],[8,"Extend",55],[3,"TypeId",47],[15,"str"]],"b":[]},\
"system_services":{"doc":"","t":"INDDNIDDEDDDMMLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLMMMLLLLLLLLMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLL","n":["CallService","Created","Deployer","Deployment","Existing","InitService","PackageDistro","ServiceDistro","ServiceStatus","SpellDistro","SystemServiceDistros","Versions","air","aqua_ipfs_version","as_","as_","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","debug","debug","debug","debug","debug","debug","debug","debug","decider_version","default_from","deploy_system_services","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","kv","modules","name","name","name","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","references","references","references","references","references","references","references","references","registry_version","services","services","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","spells","spells","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trigger_config","trust_graph_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","version","versions","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"system_services"],[245,"bnum::cast"],[246,"alloc::string"],[247,"serde_json::value"],[248,"alloc::vec"],[249,"core::future::future"],[250,"alloc::boxed"],[251,"core::pin"],[252,"core::fmt"],[253,"core::fmt"],[254,"server_config::system_services_config"],[255,"eyre"],[256,"core::fmt"],[257,"std::io::error"],[258,"core::any"],[259,"alloc::sync"],[260,"alloc::rc"],[261,"particle_services::app_services"],[262,"particle_modules::modules"],[263,"spell_storage::storage"],[264,"spell_event_bus::api"],[265,"spell_service_api"],[266,"libp2p_identity::peer_id"],[267,"system_interface::fs::fd_flags"],[268,"libipld_core::raw"],[269,"anyhow"],[270,"std::io"],[271,"cid::cid"],[272,"core::iter::traits::collect"],[273,"core::any"]],"d":["Call service functions. Accepts","Id of a newly created service","","Status of package deployment for each services and spells …","Id of a already existing service","Initialization function to initialize services","Package distribution description Contains enough …","Service distribution description that provides enough …","A status of a service/spell after deployment","Spell distribution description that provides enough …","","","The AIR script of the spell","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Marine config of the service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","With overriding existing packages","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Optionally, initialization function for the services.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Initial values for the KV storage of the spell Note that …","WASM modules of the service by their names","High-level name of the package. For the system services …","High-level names of the service used as an alias","The name of the spell which is also used as an alias for …","","","","","","","","","","","","","","","","","","","Statuses of services deployment","List services needed by the package","","","","","","","","","Statuses of spells deployment","List of spells needed by the package","","","","","","","","","The trigger config for the spell","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version of the package, the field is used to display …","","","","","","","","",""],"i":[0,15,0,0,15,0,0,0,0,0,0,0,14,9,8,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,26,8,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,13,8,9,10,11,12,13,14,15,9,10,8,8,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,10,8,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,45,8,9,10,11,12,13,14,15,12,8,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,14,13,12,13,14,8,8,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,9,11,12,8,9,10,11,12,13,14,15,11,12,8,9,10,11,12,13,14,15,14,9,8,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,12,8,8,9,10,11,12,13,14,15],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,2,2,[4,[3]]],[[7,[[6,[5]]]]],[]],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],0,[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],0,[20,[[21,[10]]]],[8,[[21,[16]]]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,16],[22,16],[22,16],[22,16],[22,16],[22,16],[22,16],[22,16],[[10,[4,[12]]],10],[[8,17],23],[[9,17],23],[[10,17],23],[[11,17],23],[[12,17],23],[[13,17],23],[[14,17],23],[[15,17],23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[19,[24,25]]],[]],[-1,[[19,[24,25]]],[]],[-1,[[19,[24,25]]],[]],[-1,[[19,[24,25]]],[]],[-1,[[19,[24,25]]],[]],[-1,[[19,[24,25]]],[]],[-1,[[19,[24,25]]],[]],[-1,[[19,[24,25]]],[]],[[-1,26,11],[[7,[[6,[5]]]]],[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],[[6,[27]]],[]],[[[6,[-1]]],[[6,[27]]],[]],[[[6,[-1]]],[[6,[27]]],[]],[[[6,[-1]]],[[6,[27]]],[]],[[[6,[-1]]],[[6,[27]]],[]],[[[6,[-1]]],[[6,[27]]],[]],[[[6,[-1]]],[[6,[27]]],[]],[[[6,[-1]]],[[6,[27]]],[]],[[[28,[-1]]],[[28,[27]]],[]],[[[28,[-1]]],[[28,[27]]],[]],[[[28,[-1]]],[[28,[27]]],[]],[[[28,[-1]]],[[28,[27]]],[]],[[[28,[-1]]],[[28,[27]]],[]],[[[28,[-1]]],[[28,[27]]],[]],[[[28,[-1]]],[[28,[27]]],[]],[[[28,[-1]]],[[28,[27]]],[]],[[[29,[-1]]],[[29,[27]]],[]],[[[29,[-1]]],[[29,[27]]],[]],[[[29,[-1]]],[[29,[27]]],[]],[[[29,[-1]]],[[29,[27]]],[]],[[[29,[-1]]],[[29,[27]]],[]],[[[29,[-1]]],[[29,[27]]],[]],[[[29,[-1]]],[[29,[27]]],[]],[[[29,[-1]]],[[29,[27]]],[]],0,0,0,0,0,[[30,31,32,33,34,35,35,10],8],[[-1,24],[[19,[[36,[-2]],25]]],[],37],[[-1,24],[[19,[[36,[-2]],25]]],[],37],[[-1,24],[[19,[[36,[-2]],25]]],[],37],[[-1,24],[[19,[[36,[-2]],25]]],[],37],[[-1,24],[[19,[[36,[-2]],25]]],[],37],[[-1,24],[[19,[[36,[-2]],25]]],[],37],[[-1,24],[[19,[[36,[-2]],25]]],[],37],[[-1,24],[[19,[[36,[-2]],25]]],[],37],[[38,-1,-2],[[19,[16,39]]],40,[[42,[41]]]],[[38,-1,-2],[[19,[16,39]]],40,[[42,[41]]]],[[38,-1,-2],[[19,[16,39]]],40,[[42,[41]]]],[[38,-1,-2],[[19,[16,39]]],40,[[42,[41]]]],[[38,-1,-2],[[19,[16,39]]],40,[[42,[41]]]],[[38,-1,-2],[[19,[16,39]]],40,[[42,[41]]]],[[38,-1,-2],[[19,[16,39]]],40,[[42,[41]]]],[[38,-1,-2],[[19,[16,39]]],40,[[42,[41]]]],0,0,0,[[-1,[36,[-2]]],[[19,[16,25]]],[],37],[[-1,[36,[-2]]],[[19,[16,25]]],[],37],[[-1,[36,[-2]]],[[19,[16,25]]],[],37],[[-1,[36,[-2]]],[[19,[16,25]]],[],37],[[-1,[36,[-2]]],[[19,[16,25]]],[],37],[[-1,[36,[-2]]],[[19,[16,25]]],[],37],[[-1,[36,[-2]]],[[19,[16,25]]],[],37],[[-1,[36,[-2]]],[[19,[16,25]]],[],37],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],0,[8,9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[8,"CastFrom",245],[3,"String",246],[4,"Value",247],[3,"Vec",248],[8,"Future",249],[3,"Box",250],[3,"Pin",251],[3,"Deployer",0],[3,"Versions",0],[3,"SystemServiceDistros",0],[3,"Deployment",0],[3,"PackageDistro",0],[3,"ServiceDistro",0],[3,"SpellDistro",0],[4,"ServiceStatus",0],[15,"tuple"],[3,"Formatter",252],[3,"Error",252],[4,"Result",253],[3,"SystemServicesConfig",254],[6,"Result",255],[15,"usize"],[6,"Result",252],[3,"FdFlags",256],[3,"Error",257],[8,"CallService",0],[8,"Any",258],[3,"Arc",259],[3,"Rc",260],[3,"ParticleAppServices",261],[3,"ModuleRepository",262],[3,"SpellStorage",263],[3,"SpellEventBusApi",264],[3,"SpellServiceApi",265],[3,"PeerId",266],[3,"SetFdFlags",256],[8,"AsFilelike",267],[3,"RawCodec",268],[3,"Error",269],[8,"Read",270],[3,"Cid",271],[8,"Extend",272],[3,"TypeId",258],[15,"str"],[8,"InitService",0]],"b":[]},\
"test_constants":{"doc":"","t":"HHHHHH","n":["EXECUTION_TIMEOUT","IDLE_CONNECTION_TIMEOUT","PARTICLE_TTL","SHORT_TIMEOUT","TIMEOUT","TRANSPORT_TIMEOUT"],"q":[[0,"test_constants"]],"d":["","","","","In debug, VM startup time is big, account for that",""],"i":[0,0,0,0,0,0],"f":[0,0,0,0,0,0],"c":[],"p":[],"b":[]},\
"test_utils":{"doc":"","t":"DDLLLLLLLLLLFFLLLLLLLLMLLLLFLLMLLLLLLLLLLLLALLFMMLLFFLLLLLLLLLLLLRDLLLLLLLLLLLLLLLLLLLLLLLL","n":["CreatedService","RetStruct","as_","as_","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_service","create_service_worker","debug","debug","deref","deref","deref_mut","deref_mut","drop","drop","error","fmt","fmt","from","from","get_default_chain_config","get_fd_flags","get_fd_flags","id","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new_set_fd_flags","new_set_fd_flags","pinning","references","references","response_to_return","result","ret_code","set_fd_flags","set_fd_flags","string_result","timeout","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","vzip","vzip","DUMMY","DummyThreadPinner","as_","borrow","borrow_mut","debug","deref","deref_mut","drop","from","get_fd_flags","init","into","into_any","into_any_arc","into_any_rc","new_set_fd_flags","pin_current_thread_to","pin_current_thread_to_cpuset","references","set_fd_flags","try_from","try_into","type_id","type_name","vzip"],"q":[[0,"test_utils"],[65,"test_utils::pinning"],[91,"bnum::cast"],[92,"connected_client::connected_client"],[93,"alloc::vec"],[94,"alloc::string"],[95,"core::fmt"],[96,"core::fmt"],[97,"core::fmt"],[98,"system_interface::fs::fd_flags"],[99,"std::io::error"],[100,"alloc::boxed"],[101,"core::any"],[102,"alloc::sync"],[103,"alloc::rc"],[104,"system_interface::fs::fd_flags"],[105,"libipld_core::raw"],[106,"anyhow"],[107,"std::io"],[108,"cid::cid"],[109,"core::iter::traits::collect"],[110,"fluence_it_types::values"],[111,"core::time"],[112,"eyre"],[113,"core::future::future"],[114,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,2,3,2,3,2,3,2,3,2,3,0,0,2,3,2,3,2,3,2,3,3,2,3,2,3,0,2,3,2,2,3,2,3,2,3,2,3,2,3,2,3,0,2,3,0,3,3,2,3,0,0,2,3,2,3,2,3,2,3,2,3,2,3,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34],"f":[0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[3,3],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[5,6,[8,[7]]],2],[[5,6,[8,[7]],9],2],[10,[[12,[4,11]]]],[10,[[12,[4,11]]]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,4],[13,4],0,[[2,10],14],[[3,10],14],[-1,-1,[]],[-1,-1,[]],[6,15],[-1,[[12,[16,17]]],[]],[-1,[[12,[16,17]]],[]],0,[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[[[18,[-1]]],[[18,[19]]],[]],[[[18,[-1]]],[[18,[19]]],[]],[[[20,[-1]]],[[20,[19]]],[]],[[[20,[-1]]],[[20,[19]]],[]],[[[21,[-1]]],[[21,[19]]],[]],[[[21,[-1]]],[[21,[19]]],[]],[[-1,16],[[12,[[22,[-2]],17]]],[],23],[[-1,16],[[12,[[22,[-2]],17]]],[],23],0,[[24,-1,-2],[[12,[4,25]]],26,[[28,[27]]]],[[24,-1,-2],[[12,[4,25]]],26,[[28,[27]]]],[29,3],0,0,[[-1,[22,[-2]]],[[12,[4,17]]],[],23],[[-1,[22,[-2]]],[[12,[4,17]]],[],23],[3,[[12,[9,9]]]],[[30,-1],[[31,[-2]]],32,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[10,[[12,[4,11]]]],[13,-1,[]],[13,-1,[]],[13,4],[-1,-1,[]],[-1,[[12,[16,17]]],[]],[[],13],[-1,-2,[],[]],[[[18,[-1]]],[[18,[19]]],[]],[[[20,[-1]]],[[20,[19]]],[]],[[[21,[-1]]],[[21,[19]]],[]],[[-1,16],[[12,[[22,[-2]],17]]],[],23],[[34,35],36],[[34,[37,[35]]],36],[[24,-1,-2],[[12,[4,25]]],26,[[28,[27]]]],[[-1,[22,[-2]]],[[12,[4,17]]],[],23],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,33,[]],[-1,6,[]],[-1,-2,[],[]]],"c":[],"p":[[8,"CastFrom",91],[3,"CreatedService",0],[3,"RetStruct",0],[15,"tuple"],[3,"ConnectedClient",92],[15,"str"],[15,"u8"],[3,"Vec",93],[3,"String",94],[3,"Formatter",95],[3,"Error",95],[4,"Result",96],[15,"usize"],[6,"Result",95],[3,"ChainConfig",97],[3,"FdFlags",98],[3,"Error",99],[3,"Box",100],[8,"Any",101],[3,"Arc",102],[3,"Rc",103],[3,"SetFdFlags",98],[8,"AsFilelike",104],[3,"RawCodec",105],[3,"Error",106],[8,"Read",107],[3,"Cid",108],[8,"Extend",109],[4,"IValue",110],[3,"Duration",111],[6,"Result",112],[8,"Future",113],[3,"TypeId",101],[3,"DummyThreadPinner",65],[3,"LogicalCoreId",114],[15,"bool"],[15,"slice"]],"b":[]},\
"toml_utils":{"doc":"","t":"F","n":["table"],"q":[[0,"toml_utils"],[1,"alloc::string"],[2,"alloc::vec"],[3,"toml::value"]],"d":[""],"i":[0],"f":[[[[3,[[2,[1,1]]]]],4]],"c":[],"p":[[3,"String",1],[15,"tuple"],[3,"Vec",2],[6,"Table",3]],"b":[]},\
"toy_vms":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLLLLL","n":["EasyVM","borrow","borrow_mut","call","create_runtime","debug","deref","deref_mut","drop","from","get_fd_flags","init","into","into_any","into_any_arc","into_any_rc","into_effects","memory_stats","new_set_fd_flags","references","set_fd_flags","try_from","try_into","type_id","type_name","vzip"],"q":[[0,"toy_vms"],[26,"avm_interface::particle_parameters"],[27,"avm_interface::call_service_result"],[28,"fluence_keypair::key_pair"],[29,"core::future::future"],[30,"alloc::boxed"],[31,"core::pin"],[32,"alloc::string"],[33,"core::convert"],[34,"core::marker"],[35,"alloc::vec"],[36,"core::time"],[37,"core::option"],[38,"marine_wasmtime_backend"],[39,"core::task::wake"],[40,"core::result"],[41,"core::fmt"],[42,"core::fmt"],[43,"std::io::error"],[44,"core::any"],[45,"alloc::sync"],[46,"alloc::rc"],[47,"avm_interface::raw_outcome"],[48,"aquamarine::particle_effects"],[49,"avm_server::runner"],[50,"system_interface::fs::fd_flags"],[51,"libipld_core::raw"],[52,"anyhow"],[53,"std::io"],[54,"cid::cid"],[55,"core::iter::traits::collect"],[56,"core::any"]],"d":["","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[1,-1,-2,-3,2,3,4],[[7,[[6,[5]]]]],[[9,[8]],10],[[9,[[12,[11]]]],10],[[9,[[12,[11]]]],10]],[[[14,[13]],15,16],[[17,[1]]]],[18,[[17,[19,20]]]],[21,-1,[]],[21,-1,[]],[21,19],[-1,-1,[]],[-1,[[17,[22,23]]],[]],[[],21],[-1,-2,[],[]],[[[6,[-1]]],[[6,[24]]],[]],[[[25,[-1]]],[[25,[24]]],[]],[[[26,[-1]]],[[26,[24]]],[]],[[[17,[27]],8],28],[1,29],[[-1,22],[[17,[[30,[-2]],23]]],[],31],[[32,-1,-2],[[17,[19,33]]],34,[[36,[35]]]],[[-1,[30,[-2]]],[[17,[19,23]]],[],31],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,37,[]],[-1,38,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"EasyVM",0],[3,"ParticleParameters",26],[6,"CallResults",27],[4,"KeyPair",28],[8,"Future",29],[3,"Box",30],[3,"Pin",31],[3,"String",32],[8,"Into",33],[8,"Send",34],[15,"u8"],[3,"Vec",35],[3,"Duration",36],[4,"Option",37],[3,"WasmtimeWasmBackend",38],[3,"Waker",39],[4,"Result",40],[3,"Formatter",41],[15,"tuple"],[3,"Error",41],[15,"usize"],[3,"FdFlags",42],[3,"Error",43],[8,"Any",44],[3,"Arc",45],[3,"Rc",46],[3,"RawAVMOutcome",47],[3,"ParticleEffects",48],[3,"AVMMemoryStats",49],[3,"SetFdFlags",42],[8,"AsFilelike",50],[3,"RawCodec",51],[3,"Error",52],[8,"Read",53],[3,"Cid",54],[8,"Extend",55],[3,"TypeId",44],[15,"str"]],"b":[]},\
"types":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLAFFNEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DealId","as_str","borrow","borrow_mut","clone","clone_into","cmp","deserialize","eq","eq","eq","eq","eq","fmt","fmt","from","from","from","get_contract_address","hash","into","is_valid","normalize","partial_cmp","peer_id","peer_scope","serialize","to_address","to_owned","to_string","try_from","try_into","type_id","vzip","serde","deserialize","serialize","Host","PeerScope","WorkerId","WorkerId","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deserialize","deserialize","eq","eq","fmt","fmt","fmt","from","from","from","hash","hash","into","into","partial_cmp","partial_cmp","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"types"],[34,"types::peer_id"],[35,"types::peer_id::serde"],[37,"types::peer_scope"],[80,"core::cmp"],[81,"core::result"],[82,"serde::de"],[83,"alloc::string"],[84,"core::fmt"],[85,"core::fmt"],[86,"core::option"],[87,"serde::ser"],[88,"core::any"],[89,"libp2p_identity::peer_id"]],"d":["","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","40 hex chars + 2 for “0x” prefix; Deal ID is EVM …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,16,0,0,16,16,17,16,17,16,17,16,17,16,17,16,17,16,17,16,17,17,16,17,17,16,17,16,17,16,17,16,17,16,17,17,16,17,16,17,16,17,16,17],"f":[0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],3,[],[]],[[1,1],4],[-1,[[5,[1]]],6],[[1,1],7],[[1,8],7],[[1,2],7],[[1,8],7],[[1,2],7],[[1,9],10],[[1,9],10],[2,1],[-1,-1,[]],[8,1],[1,8],[[1,-1],3,11],[-1,-2,[],[]],[1,7],[2,8],[[1,1],[[12,[4]]]],0,0,[[1,-1],5,13],[1,8],[-1,-2,[],[]],[-1,8,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,14,[]],[-1,-2,[],[]],0,[-1,[[5,[15]]],6],[[15,-1],5,13],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,16],[17,17],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[16,16],4],[[17,17],4],[-1,[[5,[16]]],6],[-1,[[5,[17]]],6],[[16,16],7],[[17,17],7],[[16,9],10],[[17,9],10],[[17,9],10],[-1,-1,[]],[15,17],[-1,-1,[]],[[16,-1],3,11],[[17,-1],3,11],[-1,-2,[],[]],[-1,-2,[],[]],[[16,16],[[12,[4]]]],[[17,17],[[12,[4]]]],[[16,-1],5,13],[[17,-1],5,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,8,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"DealId",0],[15,"str"],[15,"tuple"],[4,"Ordering",80],[4,"Result",81],[8,"Deserializer",82],[15,"bool"],[3,"String",83],[3,"Formatter",84],[6,"Result",84],[8,"Hasher",85],[4,"Option",86],[8,"Serializer",87],[3,"TypeId",88],[3,"PeerId",89],[4,"PeerScope",37],[3,"WorkerId",37]],"b":[[8,"impl-PartialEq-for-DealId"],[9,"impl-PartialEq%3CString%3E-for-DealId"],[10,"impl-PartialEq%3C%26str%3E-for-%26DealId"],[11,"impl-PartialEq%3CString%3E-for-%26DealId"],[12,"impl-PartialEq%3C%26str%3E-for-DealId"],[13,"impl-Debug-for-DealId"],[14,"impl-Display-for-DealId"],[15,"impl-From%3C%26str%3E-for-DealId"],[17,"impl-From%3CString%3E-for-DealId"],[56,"impl-Display-for-WorkerId"],[57,"impl-Debug-for-WorkerId"]]},\
"uuid_utils":{"doc":"","t":"F","n":["uuid"],"q":[[0,"uuid_utils"],[1,"alloc::string"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[3,"String",1]],"b":[]},\
"vm_network_utils":{"doc":"","t":"NNNDNNDENLLLLLLLLLMLFLLMLLLLLLLLLLLLLFLMMMLLMLLLMLLLLMMLLLLFLLLLLLLLLLLMMMMMMMMM","n":["Clean","DNat","Fwd","IPTables","Init","Interface","NetworkSettings","NetworkSetupError","SNat","append","append_replace","append_unique","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bridge_name","chain_exists","clear_network","clone","clone_into","cmd","delete","delete_all","delete_chain","execute","exists","flush_chain","flush_table","fmt","fmt","fmt","from","from","from","get_default_interface","get_policy","has_check","has_wait","host_ssh_port","insert","insert_unique","interface","into","into","into","is_numeric","list","list_chains","list_table","new_chain","port_range","public_ip","rename_chain","replace","set_numeric","set_policy","setup_network","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vm_ip","vm_ssh_port","chain_name","message","message","message","message","message","message"],"q":[[0,"vm_network_utils"],[73,"vm_network_utils::NetworkSetupError"],[80,"core::error"],[81,"alloc::boxed"],[82,"core::result"],[83,"std::process"],[84,"core::fmt"],[85,"core::fmt"],[86,"alloc::vec"],[87,"core::any"]],"d":["","","","Contains the iptables command and shows if it supports -w …","","","","","","Appends <code>rule</code> to the table/chain.","Appends or replaces <code>rule</code> to the table/chain if it does not …","Appends <code>rule</code> to the table/chain if it does not exist.","","","","","","","","Checks for the existence of the <code>chain</code> in the table. …","IPTables is a Linux-specific tool, so API is …","","","The utility command which must be ‘iptables’ or ‘…","Deletes <code>rule</code> from the table/chain.","Deletes all repetition of the <code>rule</code> from the table/chain.","Deletes a user-defined chain in the table.","Executes a given <code>command</code> on the chain. Returns the command …","Checks for the existence of the <code>rule</code> in the table/chain. …","Flushes (deletes all rules) a chain.","Flushes all chains in a table.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get the default policy for a table/chain.","Indicates if iptables has -C (–check) option","Indicates if iptables has -w (–wait) option","","Inserts <code>rule</code> in the <code>position</code> to the table/chain.","Inserts <code>rule</code> in the <code>position</code> to the table/chain if it does …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates if iptables will be run with -n (–numeric) …","Lists rules in the table/chain.","Lists the name of each chain in the table.","Lists rules in the table.","Creates a new user-defined chain.","","","Renames a chain in the table.","Replaces <code>rule</code> in the <code>position</code> to the table/chain.","Set whether iptables is called with the -n (–numeric) …","Set the default policy for a table/chain.","IPTables is a Linux-specific tool, so API is …","","","","","","","","","","","","","","","","","","","",""],"i":[9,9,9,0,9,9,0,0,9,1,1,1,1,8,9,1,8,9,8,1,0,8,8,1,1,1,1,1,1,1,1,8,9,9,1,8,9,0,1,1,1,8,1,1,8,1,8,9,1,1,1,1,1,8,8,1,1,1,1,0,8,9,1,8,9,1,8,9,1,8,9,8,8,17,18,19,20,21,17,22],"f":[0,0,0,0,0,0,0,0,0,[[1,2,2,2],[[6,[3,[5,[4]]]]]],[[1,2,2,2],[[6,[3,[5,[4]]]]]],[[1,2,2,2],[[6,[3,[5,[4]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[1,2,2],[[6,[7,[5,[4]]]]]],[[8,2],[[6,[3,9]]]],[8,8],[[-1,-2],3,[],[]],0,[[1,2,2,2],[[6,[3,[5,[4]]]]]],[[1,2,2,2],[[6,[3,[5,[4]]]]]],[[1,2,2],[[6,[3,[5,[4]]]]]],[[1,2,2],[[6,[10,[5,[4]]]]]],[[1,2,2,2],[[6,[7,[5,[4]]]]]],[[1,2,2],[[6,[3,[5,[4]]]]]],[[1,2],[[6,[3,[5,[4]]]]]],[[8,11],12],[[9,11],12],[[9,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[6,[13,9]]]],[[1,2,2],[[6,[13,[5,[4]]]]]],0,0,0,[[1,2,2,2,14],[[6,[3,[5,[4]]]]]],[[1,2,2,2,14],[[6,[3,[5,[4]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[1,2,2],[[6,[[15,[13]],[5,[4]]]]]],[[1,2],[[6,[[15,[13]],[5,[4]]]]]],[[1,2],[[6,[[15,[13]],[5,[4]]]]]],[[1,2,2],[[6,[3,[5,[4]]]]]],0,0,[[1,2,2,2],[[6,[3,[5,[4]]]]]],[[1,2,2,2,14],[[6,[3,[5,[4]]]]]],[[1,7],3],[[1,2,2,2],[[6,[3,[5,[4]]]]]],[[8,2],[[6,[3,9]]]],[-1,-2,[],[]],[-1,13,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"IPTables",0],[15,"str"],[15,"tuple"],[8,"Error",80],[3,"Box",81],[4,"Result",82],[15,"bool"],[3,"NetworkSettings",0],[4,"NetworkSetupError",0],[3,"Output",83],[3,"Formatter",84],[6,"Result",84],[3,"String",85],[15,"i32"],[3,"Vec",86],[3,"TypeId",87],[13,"Clean",73],[13,"DNat",73],[13,"SNat",73],[13,"Fwd",73],[13,"Init",73],[13,"Interface",73]],"b":[[32,"impl-Display-for-NetworkSetupError"],[33,"impl-Debug-for-NetworkSetupError"]]},\
"vm_utils":{"doc":"","t":"NNDNNNNNNNNNNNNNDNNNNNNENELLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFFFFLLLLFFFLMLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMM","n":["Blocked","Crashed","CreateVMDomainParams","FailedToConnect","FailedToCreateVMDomain","FailedToGetInfo","FailedToGetPCI","FailedToGetVMId","FailedToRebootVM","FailedToRemoveVMDomain","FailedToResetVM","FailedToResumeVM","FailedToStartVM","FailedToStopVM","FailedToSuspendVM","NoState","NonEmpty","PMSuspended","Paused","Running","Shutdown","Shutoff","UnknownState","VmError","VmNotFound","VmStatus","append","binary_search","binary_search_by","binary_search_by_key","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clone","clone_into","cmp","collect","contains","create_domain","default","eq","eq","extend","first","first_mut","flat_map","flatten","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_slice","from_u32","from_vec","get","get_mut","hash","head","index","index_mut","insert","into","into","into","into","into_iter","into_iter","is_empty","iter","iter_mut","last","last_mut","len","len_nonzero","map","maximum","maximum_by","maximum_by_key","minimum","minimum_by","minimum_by_key","new","new","partial_cmp","pause_vm","pop","push","reboot_vm","remove_domain","reset_vm","resume_vm","singleton","source","split","split_first","start_vm","status_vm","stop_vm","tail","tail","to_owned","to_string","to_string","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_map","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","err","err","err","err","err","err","err","err","err","err","err","name","name","name","name","name","name","name","name","name","name"],"q":[[0,"vm_utils"],[135,"vm_utils::VmError"],[156,"alloc::vec"],[157,"core::result"],[158,"core::cmp"],[159,"core::ops::function"],[160,"core::clone"],[161,"core::cmp"],[162,"core::iter::traits::collect"],[163,"core::cmp"],[164,"core::fmt"],[165,"core::fmt"],[166,"core::hash"],[167,"core::hash"],[168,"core::iter::traits::iterator"],[169,"core::iter::traits::double_ended"],[170,"core::num::nonzero"],[171,"alloc::string"],[172,"std::path"],[173,"ccp_shared::types::core"],[174,"core::cmp"],[175,"core::any"]],"d":["","","","","","","","","","","","","","","","","Non-empty vector.","","","","","","","","","","Append a <code>Vec</code> to the tail of the <code>NonEmpty</code>.","Binary searches this sorted non-empty vector for a given …","Binary searches this sorted non-empty with a comparator …","Binary searches this sorted non-empty vector with a key …","","","","","","","","","Get the capacity of the list.","","","","Attempt to convert an iterator into a <code>NonEmpty</code> vector. …","Check whether an element is contained in the list.","","","","","","Get the first element. Never fails.","Get the mutable reference to the first element. Never …","When we have a function that goes from some <code>T</code> to a …","Flatten nested <code>NonEmpty</code>s into a single one.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Turns a pair of an element and a Vec into a NonEmpty.","Returns the argument unchanged.","Often we have a <code>Vec</code> (or slice <code>&amp;[T]</code>) but want to ensure …","","Often we have a <code>Vec</code> (or slice <code>&amp;[T]</code>) but want to ensure …","Get an element by index.","Get an element by index, mutably.","","","","","Inserts an element at position index within the vector, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Always returns false.","","","Get the last element. Never fails.","Get the last element mutably.","Get the length of the list.","Gets the length of the list as a NonZeroUsize.","A structure preserving <code>map</code>. This is useful for when we …","Returns the maximum element in the non-empty vector.","Returns the element that gives the maximum value with …","Returns the element that gives the maximum value with …","Returns the minimum element in the non-empty vector.","Returns the element that gives the minimum value with …","Returns the element that gives the minimum value with …","","Alias for <code>NonEmpty::singleton</code>.","","","Pop an element from the end of the list.","Push an element to the end of the list.","","","","","Create a new non-empty list with an initial element.","","Deconstruct a <code>NonEmpty</code> into its first, last, and middle …","Deconstruct a <code>NonEmpty</code> into its head and tail. This …","","","","Get the possibly-empty tail of the list.","","","","","Truncate the list to a certain size. Must be greater than <code>0</code>…","","","","","","","","","A structure preserving, fallible mapping function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[18,18,0,16,16,16,16,16,16,16,16,16,16,16,16,18,0,18,18,18,18,18,18,0,16,0,1,1,1,1,15,16,18,1,15,16,18,1,1,1,1,1,1,1,0,1,18,1,1,1,1,1,1,15,16,16,18,18,1,15,16,16,18,1,1,1,18,1,1,1,1,1,1,1,1,15,16,18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,15,1,1,0,1,1,0,0,0,0,1,16,1,1,0,0,0,1,1,1,16,18,1,15,16,18,1,15,16,18,1,1,15,16,18,1,15,16,18,1,38,39,40,41,42,43,44,45,46,47,48,40,41,42,43,49,44,45,46,47,48],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]],[2,[-1]]],3,[]],[[[1,[-1]],-1],[[5,[4,4]]],6],[[[1,[-1]],-2],[[5,[4,4]]],[],7],[[[1,[-1]],-2,-3],[[5,[4,4]]],[],6,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],4,[]],[[[1,[-1]]],[[1,[-1]]],8],[[-1,-2],3,[],[]],[[[1,[-1]],[1,[-1]]],9,6],[-1,[[10,[[1,[-2]]]]],11,[]],[[[1,[-1]],-1],12,13],[[14,15],[[5,[3,16]]]],[[],[[1,[-1]]],17],[[18,18],12],[[[1,[-1]],[1,[-1]]],12,13],[[[1,[-1]],-2],3,[],11],[[[1,[-1]]],-1,[]],[[[1,[-1]]],-1,[]],[[[1,[-1]],-2],[[1,[-3]]],[],7,[]],[[[1,[[1,[-1]]]]],[[1,[-1]]],[]],[[15,19],20],[[16,19],20],[[16,19],20],[[18,19],20],[[18,19],20],[[[1,[-1]],19],[[5,[3,21]]],22],[-1,-1,[]],[-1,-1,[]],[23,16],[-1,-1,[]],[[[3,[-1,[2,[-1]]]]],[[1,[-1]]],[]],[-1,-1,[]],[[[24,[-1]]],[[10,[[1,[-1]]]]],8],[25,18],[[[2,[-1]]],[[10,[[1,[-1]]]]],[]],[[[1,[-1]],4],[[10,[-1]]],[]],[[[1,[-1]],4],[[10,[-1]]],[]],[[[1,[-1]],-2],3,26,27],0,[[[1,[-1]],4],-1,[]],[[[1,[-1]],4],-1,[]],[[[1,[-1]],4,-1],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[],[]],[[[1,[-1]]],[],[]],[[[1,[-1]]],12,[]],[[[1,[-1]]],[[28,[-1]]],[]],[[[1,[-1]]],[[0,[29,30]]],[]],[[[1,[-1]]],-1,[]],[[[1,[-1]]],-1,[]],[[[1,[-1]]],4,[]],[[[1,[-1]]],31,[]],[[[1,[-1]],-2],[[1,[-3]]],[],7,[]],[[[1,[-1]]],-1,6],[[[1,[-1]],-2],-1,[],7],[[[1,[-1]],-2],-1,[],7],[[[1,[-1]]],-1,6],[[[1,[-1]],-2],-1,[],7],[[[1,[-1]],-2],-1,[],7],[[32,33,[1,[34]],4,32,12],15],[-1,[[1,[-1]]],[]],[[[1,[-1]],[1,[-1]]],[[10,[9]]],35],[[14,14],[[5,[3,16]]]],[[[1,[-1]]],[[10,[-1]]],[]],[[[1,[-1]],-1],3,[]],[[14,14],[[5,[3,16]]]],[[14,14],[[5,[3,16]]]],[[14,14],[[5,[3,16]]]],[[14,14],[[5,[3,16]]]],[-1,[[1,[-1]]],[]],[16,[[10,[36]]]],[[[1,[-1]]],[[3,[-1,[24,[-1]],-1]]],[]],[[[1,[-1]]],[[3,[-1,[24,[-1]]]]],[]],[[14,14],[[5,[25,16]]]],[[14,14],[[5,[18,16]]]],[[14,14],[[5,[3,16]]]],[[[1,[-1]]],[[24,[-1]]],[]],0,[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[[[1,[-1]],4],3,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[1,[-1]],-2],[[5,[[1,[-3]],-4]]],[],7,[],[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"NonEmpty",0],[3,"Vec",156],[15,"tuple"],[15,"usize"],[4,"Result",157],[8,"Ord",158],[8,"FnMut",159],[8,"Clone",160],[4,"Ordering",158],[4,"Option",161],[8,"IntoIterator",162],[15,"bool"],[8,"PartialEq",158],[15,"str"],[3,"CreateVMDomainParams",0],[4,"VmError",0],[8,"Default",163],[4,"VmStatus",0],[3,"Formatter",164],[6,"Result",164],[3,"Error",164],[8,"Debug",164],[4,"PciError",165],[15,"slice"],[15,"u32"],[8,"Hash",166],[8,"Hasher",166],[3,"Iter",167],[8,"Iterator",168],[8,"DoubleEndedIterator",169],[3,"NonZeroUsize",170],[3,"String",171],[3,"PathBuf",172],[3,"LogicalCoreId",173],[8,"PartialOrd",158],[8,"Error",174],[3,"TypeId",175],[13,"FailedToConnect",135],[13,"FailedToCreateVMDomain",135],[13,"FailedToRemoveVMDomain",135],[13,"FailedToStartVM",135],[13,"VmNotFound",135],[13,"FailedToStopVM",135],[13,"FailedToRebootVM",135],[13,"FailedToResetVM",135],[13,"FailedToGetInfo",135],[13,"FailedToSuspendVM",135],[13,"FailedToResumeVM",135],[13,"FailedToGetVMId",135]],"b":[[54,"impl-Display-for-VmError"],[55,"impl-Debug-for-VmError"],[56,"impl-Debug-for-VmStatus"],[57,"impl-Display-for-VmStatus"],[79,"impl-IntoIterator-for-%26NonEmpty%3CT%3E"],[80,"impl-IntoIterator-for-NonEmpty%3CT%3E"]]},\
"workers":{"doc":"","t":"DNINNNNNNNENNNNDENNDNNDNNDNNNNNNNDNNNNNDNNDNNDDENNNKLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLKLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM","n":["CUID","CannotExtractRSASecretKey","CoreDistributor","CreateKeypairsDir","CreateRuntime","CreateWorkerKeyPair","CreateWorkersDir","DeserializePersistedKeypair","DeserializePersistedWorker","DirectoryListError","Event","FailedToAssignCores","FailedToCopyVMImage","FailedToNotifySubsystem","FeatureDisabled","KeyStorage","KeyStorageError","KeypairNotFound","KeypairNotFound","PeerScopes","PersistedKeypairDecodingError","PersistedKeypairInvalidKeyFormat","PersistentCoreDistributor","ReadPersistedKeypair","ReadPersistedWorker","Receiver","RemoveErrorPersistedKeypair","RemoveErrorPersistedWorker","RemoveWorkerKeyPair","SerializePersistedKeypair","SerializePersistedWorker","VMAlreadyExists","VMImageNotFile","VmConfig","VmError","VmNetworkError","VmNotFound","WorkerAlreadyExists","WorkerCreated","WorkerId","WorkerNotFound","WorkerNotFoundByDeal","WorkerParams","WorkerRemoved","WorkerStorageDirectory","Workers","WorkersConfig","WorkersError","WriteErrorPersistedKeypair","WriteErrorPersistedWorker","WrongAssignment","acquire_worker_cores","acquire_worker_cores","activate_worker","allow_gpu","as_ref","blocking_recv","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cleanup_cache","cleanup_cache","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","compare","compare","create_key_pair","create_vm","create_worker","deactivate_worker","default","deserialize","deserialize","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hex","from_path","from_path","from_path","from_str","get_deal_id","get_host_peer_id","get_keypair","get_runtime_handle","get_system_cpu_assignment","get_system_cpu_assignment","get_worker_assignment","get_worker_creator","get_worker_id","get_worker_key_pair","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_host","is_management","is_worker_active","libvirt_uri","list_workers","network","new","new","new","new","new","partial_cmp","partial_cmp","poll_recv","poll_recv_many","reboot_vm","recv","recv_many","release_worker_cores","release_worker_cores","remove_key_pair","remove_worker","reset_vm","root_key_pair","scope","serialize","serialize","shutdown","source","source","start_vm","status_vm","stop_vm","to_owned","to_owned","to_owned","to_owned","to_peer_id","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_recv","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","thread_count","worker_id","worker_id","err","err","err","err","err","err","err","err","err","path","path","path","path","path","path","path","path","worker_id","deal_id","err","err","err","err","err","err","err","err","err","err","err","err","image","image","path","path","path","path","path","path","worker_id","worker_id","worker_id","worker_id","worker_id"],"q":[[0,"workers"],[320,"workers::Event"],[323,"workers::KeyStorageError"],[341,"workers::WorkersError"],[367,"core_distributor::types"],[368,"core_distributor::types"],[369,"core::result"],[370,"core::option"],[371,"core::cmp"],[372,"fluence_keypair::key_pair"],[373,"std::path"],[374,"alloc::string"],[375,"serde::de"],[376,"core::iter::traits::collect"],[377,"core::fmt"],[378,"core::fmt"],[379,"vm_network_utils"],[380,"vm_utils::vm_utils"],[381,"core::convert"],[382,"std::path"],[383,"core_distributor::core_range"],[384,"core_distributor::strategy"],[385,"cpu_utils::cpu_topology"],[386,"alloc::sync"],[387,"core_distributor::persistence"],[388,"core_distributor::errors"],[389,"types::deal_id"],[390,"types::peer_scope"],[391,"tokio::runtime::handle"],[392,"core_distributor::types"],[393,"alloc::boxed"],[394,"core::any"],[395,"alloc::rc"],[396,"alloc::vec"],[397,"vm_network_utils"],[398,"core::task::poll"],[399,"serde::ser"],[400,"core::error"],[401,"vm_utils::vm_utils"],[402,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","Represents information about various peer IDs.","","","<code>PersistentCoreDistributor</code> is a CPU core distributor …","","","Receives values from the associated <code>Sender</code>.","","","","","","","","","","","","","","","","","","","","Manages a collection of workers.","","","","","","","","Activates the worker with the specified <code>worker_id</code>.","","","Blocking receive to call outside of asynchronous contexts.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes the receiving half of a channel without dropping it.","","","","","","","Creates a new worker with the given <code>deal_id</code> and initial …","Deactivates the worker with the specified <code>worker_id</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Loads the state from <code>file_name</code> if exists. If not creates a …","Creates a <code>Workers</code> instance by loading persisted worker …","","Retrieves the deal ID associated with the specified worker …","","","","","","Retrieves the assignment associated with the specified …","Retrieves the creator <code>PeerId</code> associated with the specified …","Retrieves the worker ID associated with the specified …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks the activation status of the worker with the …","Uri to the libvirt API","Retrieves a list of all worker IDs.","","","","","","","","","Polls to receive the next message on this channel.","Polls to receive multiple messages on this channel, …","","Receives the next value for this receiver.","Receives the next values for this receiver and extends …","","","","Removes a worker with the specified <code>worker_id</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to receive the next value for this receiver.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,21,0,21,9,9,9,21,9,21,0,9,9,9,9,0,0,21,9,0,21,21,0,21,9,0,21,9,9,21,9,9,9,0,9,9,9,9,32,0,9,9,0,32,9,0,0,0,21,9,9,47,5,6,17,10,13,19,5,24,7,6,46,21,9,10,16,32,17,13,19,5,24,7,6,46,21,9,10,16,32,17,13,47,5,7,10,16,17,7,10,16,17,13,7,10,7,10,19,6,6,6,10,7,10,10,10,7,10,7,7,7,10,10,10,7,7,21,21,9,9,10,10,16,32,17,13,19,5,24,7,7,6,46,21,9,9,9,10,16,32,17,13,10,19,5,6,10,6,16,19,6,47,5,6,6,6,19,7,10,19,5,24,7,6,46,21,9,10,16,32,17,13,19,5,24,7,6,46,21,9,10,16,32,17,13,19,5,24,7,6,46,21,9,10,16,32,17,13,19,5,24,7,6,46,21,9,10,16,32,17,13,16,16,6,17,6,17,24,46,10,16,17,7,10,13,13,6,13,13,47,5,19,6,6,19,16,7,10,6,21,9,6,6,6,7,10,16,17,16,7,21,9,10,19,5,24,7,6,46,21,9,10,16,32,17,13,19,5,24,7,6,46,21,9,10,16,32,17,13,13,19,5,24,7,6,46,21,9,10,16,32,17,13,19,5,24,7,6,46,21,9,10,16,32,17,13,19,5,24,7,6,46,21,9,10,16,32,17,13,67,67,68,69,70,71,72,73,74,75,76,77,69,70,71,72,73,75,76,77,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,90,79,82,83,85,86,87,86,87,88,89,92],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],[[4,[2,3]]],[]],[[5,1],[[4,[2,3]]]],[[6,7],[[4,[8,9]]]],0,[10,[[12,[11]]]],[[[13,[-1]]],[[14,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[15,[10]]],8,[]],[[5,[15,[10]]],8],[7,7],[10,10],[16,16],[17,17],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[[13,[-1]]],8,[]],[[7,7],18],[[10,10],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[19,[[4,[20,21]]]],[[6,7,22],[[4,[23,9]]]],[[6,24],[[4,[7,9]]]],[[6,7],[[4,[8,9]]]],[[],10],[-1,[[4,[7]]],25],[-1,[[4,[10]]],25],[10,-1,[[27,[26]]]],[10,-1,[[27,[26]]]],[[7,7],28],[[10,10],28],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[7,29],[[4,[8,30]]]],[[7,29],[[4,[8,30]]]],[[21,29],31],[[21,29],31],[[9,29],31],[[9,29],31],[[10,29],[[4,[8,30]]]],[[10,29],[[4,[8,30]]]],[[16,29],31],[[32,29],31],[[17,29],31],[[[13,[-1]],29],[[4,[8,30]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[33,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[34,9],[35,9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[4,[10]]],[[36,[[15,[11]]]]]],[[37,20],[[38,[19]]]],[[37,39,40,41,42],[[4,[[8,[[43,[5]],44]],45]]]],[[46,37,[43,[19]],[43,[47]],[43,[48]]],[[38,[[8,[6,[13,[32]]]]]]]],[49,[[4,[10]]]],[[6,7],[[4,[50,9]]]],[16,33],[[19,51],[[14,[20]]]],[[6,7],[[14,[52]]]],[-1,53,[]],[5,53],[[6,7],[[4,[2,9]]]],[[6,7],[[4,[33,9]]]],[[6,50],[[4,[7,9]]]],[[19,7],[[14,[20]]]],[[7,-1],8,54],[[10,-1],8,54],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[56]]],[]],[[[55,[-1]]],[[55,[56]]],[]],[[[55,[-1]]],[[55,[56]]],[]],[[[55,[-1]]],[[55,[56]]],[]],[[[55,[-1]]],[[55,[56]]],[]],[[[55,[-1]]],[[55,[56]]],[]],[[[55,[-1]]],[[55,[56]]],[]],[[[55,[-1]]],[[55,[56]]],[]],[[[55,[-1]]],[[55,[56]]],[]],[[[55,[-1]]],[[55,[56]]],[]],[[[55,[-1]]],[[55,[56]]],[]],[[[55,[-1]]],[[55,[56]]],[]],[[[55,[-1]]],[[55,[56]]],[]],[[[43,[-1]]],[[43,[56]]],[]],[[[43,[-1]]],[[43,[56]]],[]],[[[43,[-1]]],[[43,[56]]],[]],[[[43,[-1]]],[[43,[56]]],[]],[[[43,[-1]]],[[43,[56]]],[]],[[[43,[-1]]],[[43,[56]]],[]],[[[43,[-1]]],[[43,[56]]],[]],[[[43,[-1]]],[[43,[56]]],[]],[[[43,[-1]]],[[43,[56]]],[]],[[[43,[-1]]],[[43,[56]]],[]],[[[43,[-1]]],[[43,[56]]],[]],[[[43,[-1]]],[[43,[56]]],[]],[[[43,[-1]]],[[43,[56]]],[]],[[[57,[-1]]],[[57,[56]]],[]],[[[57,[-1]]],[[57,[56]]],[]],[[[57,[-1]]],[[57,[56]]],[]],[[[57,[-1]]],[[57,[56]]],[]],[[[57,[-1]]],[[57,[56]]],[]],[[[57,[-1]]],[[57,[56]]],[]],[[[57,[-1]]],[[57,[56]]],[]],[[[57,[-1]]],[[57,[56]]],[]],[[[57,[-1]]],[[57,[56]]],[]],[[[57,[-1]]],[[57,[56]]],[]],[[[57,[-1]]],[[57,[56]]],[]],[[[57,[-1]]],[[57,[56]]],[]],[[[57,[-1]]],[[57,[56]]],[]],[[16,33],28],[[16,33],28],[[6,7],28],0,[6,[[58,[7]]]],0,[[50,33,[58,[10]]],24],[[39,[14,[17]]],46],[[[12,[11]]],10],[[33,33,33,[43,[19]]],16],[[23,28,59],17],[[7,7],[[14,[18]]]],[[10,10],[[14,[18]]]],[[[13,[-1]],60],[[61,[[14,[-1]]]]],[]],[[[13,[-1]],60,[58,[-1]],39],[[61,[39]]],[]],[[6,7],[[4,[8,9]]]],[[[13,[-1]]],[[14,[-1]]],[]],[[[13,[-1]],[58,[-1]],39],39,[]],[[-1,[15,[10]]],8,[]],[[5,[15,[10]]],8],[[19,7],[[4,[8,21]]]],[[6,7],[[4,[8,9]]]],[[6,7],[[4,[8,9]]]],0,[[16,33],[[4,[51,0]]]],[[7,-1],4,62],[[10,-1],4,62],[6,8],[21,[[14,[63]]]],[9,[[14,[63]]]],[[6,7],[[4,[8,9]]]],[[6,7],[[4,[64,9]]]],[[6,7],[[4,[8,9]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[16,51],33],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[13,[-1]]],[[4,[-1,65]]],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"AcquireRequest",367],[3,"Assignment",367],[4,"AcquireError",368],[4,"Result",369],[3,"PersistentCoreDistributor",0],[3,"Workers",0],[3,"WorkerId",0],[15,"tuple"],[4,"WorkersError",0],[3,"CUID",0],[15,"u8"],[15,"array"],[3,"Receiver",0],[4,"Option",370],[15,"slice"],[3,"PeerScopes",0],[3,"VmConfig",0],[4,"Ordering",371],[3,"KeyStorage",0],[4,"KeyPair",372],[4,"KeyStorageError",0],[3,"Path",373],[3,"String",374],[3,"WorkerParams",0],[8,"Deserializer",375],[15,"char"],[8,"FromIterator",376],[15,"bool"],[3,"Formatter",377],[3,"Error",377],[6,"Result",377],[4,"Event",0],[3,"PeerId",378],[4,"NetworkSetupError",379],[4,"VmError",380],[8,"AsRef",381],[3,"PathBuf",373],[6,"Result",382],[15,"usize"],[3,"CoreRange",383],[4,"AcquireStrategy",384],[8,"CPUTopology",385],[3,"Arc",386],[3,"PersistenceTask",387],[4,"LoadingError",368],[3,"WorkersConfig",0],[8,"CoreDistributor",0],[8,"ThreadPinner",388],[15,"str"],[3,"DealId",389],[4,"PeerScope",390],[3,"Handle",391],[3,"SystemAssignment",367],[8,"Hasher",392],[3,"Box",393],[8,"Any",394],[3,"Rc",395],[3,"Vec",396],[3,"NetworkSettings",379],[3,"Context",397],[4,"Poll",398],[8,"Serializer",399],[8,"Error",400],[4,"VmStatus",380],[4,"TryRecvError",401],[3,"TypeId",394],[13,"WorkerCreated",320],[13,"WorkerRemoved",320],[13,"ReadPersistedKeypair",323],[13,"DirectoryListError",323],[13,"DeserializePersistedKeypair",323],[13,"PersistedKeypairDecodingError",323],[13,"PersistedKeypairInvalidKeyFormat",323],[13,"SerializePersistedKeypair",323],[13,"WriteErrorPersistedKeypair",323],[13,"RemoveErrorPersistedKeypair",323],[13,"CreateKeypairsDir",323],[13,"WorkerAlreadyExists",341],[13,"CreateWorkersDir",341],[13,"CreateWorkerKeyPair",341],[13,"RemoveWorkerKeyPair",341],[13,"ReadPersistedWorker",341],[13,"DeserializePersistedWorker",341],[13,"SerializePersistedWorker",341],[13,"WriteErrorPersistedWorker",341],[13,"WorkerStorageDirectory",341],[13,"RemoveErrorPersistedWorker",341],[13,"CreateRuntime",341],[13,"FailedToAssignCores",341],[13,"FailedToCopyVMImage",341],[13,"VMImageNotFile",341],[13,"FailedToNotifySubsystem",341]],"b":[[115,"impl-Display-for-WorkerId"],[116,"impl-Debug-for-WorkerId"],[117,"impl-Debug-for-KeyStorageError"],[118,"impl-Display-for-KeyStorageError"],[119,"impl-Display-for-WorkersError"],[120,"impl-Debug-for-WorkersError"],[121,"impl-Debug-for-CUID"],[122,"impl-Display-for-CUID"],[136,"impl-From%3CNetworkSetupError%3E-for-WorkersError"],[137,"impl-From%3CVmError%3E-for-WorkersError"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
