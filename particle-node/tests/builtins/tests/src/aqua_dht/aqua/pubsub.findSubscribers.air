(xor
 (seq
  (seq
   (seq
    (seq
     (seq
      (seq
       (seq
        (seq
         (seq
          (call %init_peer_id% ("getDataSrv" "-relay-") [] -relay-)
          (call %init_peer_id% ("getDataSrv" "node_id") [] node_id)
         )
         (call %init_peer_id% ("getDataSrv" "topic") [] topic)
        )
        (call -relay- ("op" "noop") [])
       )
       (xor
        (seq
         (call node_id ("op" "string_to_b58") [topic] k)
         (call node_id ("kad" "neighborhood") [k [] []] nodes)
        )
        (seq
         (seq
          (call -relay- ("op" "noop") [])
          (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 1])
         )
         (call -relay- ("op" "noop") [])
        )
       )
      )
      (call -relay- ("op" "noop") [])
     )
     (fold nodes n
      (par
       (seq
        (xor
         (seq
          (call n ("peer" "timestamp_sec") [] t)
          (call n ("aqua-dht" "get_values") [topic t] $res)
         )
         (null)
        )
        (call node_id ("op" "noop") [])
       )
       (seq
        (call -relay- ("op" "noop") [])
        (next n)
       )
      )
     )
    )
    (xor
     (call node_id ("aqua-dht" "merge_two") [$res.$.[0].result! $res.$.[1].result!] v)
     (seq
      (call -relay- ("op" "noop") [])
      (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 2])
     )
    )
   )
   (call -relay- ("op" "noop") [])
  )
  (xor
   (call %init_peer_id% ("callbackSrv" "response") [v.$.result!])
   (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 3])
  )
 )
 (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 4])
)
