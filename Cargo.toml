[workspace]
members = [
    "crates/libp2p",
    "crates/control-macro",
    "crates/waiting-queues",
    "crates/local-vm",
    "crates/uuid-utils",
    "crates/test-utils",
    "crates/fs-utils",
    "crates/log-utils",
    "crates/config-utils",
    "crates/service-modules",
    "crates/ivalue-utils",
    "crates/particle-args",
    "crates/json-utils",
    "crates/server-config",
    "crates/kademlia",
    "crates/async-unlock",
    "crates/now-millis",
    "crates/toml-utils",
    "crates/air-interpreter-fs",
    "crates/builtins-deployer",
    "crates/created-swarm",
    "crates/toy-vms",
    "crates/connected-client",
    "crates/test-constants",
    "crates/peer-metrics",
    "crates/spell-event-bus",
    "crates/key-manager",
    "sorcerer",
    "crates/builtins-tests",
    "crates/particle-node-tests",
    "particle-node",
    "aquamarine",
    "particle-protocol",
    "particle-services",
    "particle-builtins",
    "particle-modules",
    "connection-pool",
    "script-storage",
    "spell-storage",
    "particle-execution",
]
exclude = [
    "particle-node/tests/tetraplets",
]

[workspace.dependencies]
fluence-libp2p = { path = "crates/libp2p" }
control-macro = { path = "crates/control-macro" }
waiting-queues = { path = "crates/waiting-queues" }
local-vm = { path = "crates/local-vm" }
uuid-utils = { path = "crates/uuid-utils" }
test-utils = { path = "crates/test-utils" }
fs-utils = { path = "crates/fs-utils" }
log-utils = { path = "crates/log-utils" }
config-utils = { path = "crates/config-utils" }
service-modules = { path = "crates/service-modules" }
ivalue-utils = { path = "crates/ivalue-utils" }
particle-args = { path = "crates/particle-args" }
json-utils = { path = "crates/json-utils" }
server-config = { path = "crates/server-config" }
kademlia = { path = "crates/kademlia" }
async-unlock = { path = "crates/async-unlock" }
now-millis = { path = "crates/now-millis" }
toml-utils = { path = "crates/toml-utils" }
air-interpreter-fs = { path = "crates/air-interpreter-fs" }
builtins-deployer = { path = "crates/builtins-deployer" }
created-swarm = { path = "crates/created-swarm" }
toy-vms = { path = "crates/toy-vms" }
connected-client = { path = "crates/connected-client" }
test-constants = { path = "crates/test-constants" }
peer-metrics = { path = "crates/peer-metrics" }
spell-event-bus = { path = "crates/spell-event-bus" }
key-manager = { path = "crates/key-manager" }
sorcerer = { path = "sorcerer" }
builtins-tests = { path = "crates/builtins-tests" }
particle-node = { path = "particle-node" }
aquamarine = { path = "aquamarine" }
particle-protocol = { path = "particle-protocol" }
particle-services = { path = "particle-services" }
particle-builtins = { path = "particle-builtins" }
particle-modules = { path = "particle-modules" }
connection-pool = { path = "connection-pool" }
script-storage = { path = "script-storage" }
spell-storage = { path = "spell-storage" }
particle-execution = { path = "particle-execution" }

# spell
fluence-spell-dtos = "=0.5.9"
fluence-spell-distro = "=0.5.9"

# marine
fluence-app-service = "0.25.3"
marine-utils = "0.5.0"
marine-it-parser = "0.12.1"

# avm
avm-server = "0.31.0"
air-interpreter-wasm = "=0.38.0"

# libp2p
libp2p = { version = "0.51.2", features = ["noise", "tcp", "dns", "websocket", "yamux", "mplex", "tokio", "kad", "ping", "identify", "macros"] }
libp2p-core = { version = "0.39.1", default-features = false, features = ["secp256k1"] }
libp2p-metrics = { version = "0.12.0", features = ["kad"] }
libp2p-noise = "0.42.1"
libp2p-swarm = { version = "0.42.1" }
libp2p-identity = { version = "0.1.1" }
multihash = "0.17.0"
prometheus-client = "0.19.0"

eyre = "0.6.8"
base64 = "0.21.0"
bs58 = "0.4.0"
fluence-keypair = "0.10.0"
parking_lot = "0.12.1"
tokio = { version = "1.25.0", features = ["full", "tracing"] }
tokio-stream = { version = "0.1.12" }
tokio-util = { version = "0.7.7" }
uuid = { version = "1.3.0", features = ["v4"] }
derivative = "2.2.0"
serde_json = "1.0.96"
fstrings = "0.2.3"
maplit = "1.0.2"
log = "0.4.17"
tracing = { version = "0.1.37", default-features = false, features = ["log"] }
tracing-subscriber = "0.3.16"
futures = "0.3.28"
thiserror = "1.0.40"
serde = "1.0.160"
toml = "0.5.10"
itertools = "0.10.5"
humantime-serde = "1.1.1"

# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies, but not for our code:
[profile.dev.package."*"]
opt-level = 3
codegen-units = 256

[profile.dev.package.clap]
debug-assertions = false

[profile.release]
strip = true
lto = false
codegen-units = 1 # Reduce number of codegen units to increase optimizations

[profile.profiling]
inherits = "release"
debug = true
strip = false
lto = false
