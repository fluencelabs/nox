syntax = "proto3";

package proto3;

message PartSetHeader {
    int32 Total = 1;
    bytes Hash = 2;
}

message BlockID {
    bytes Hash = 1;
    PartSetHeader PartsHeader = 2;
}

message Timestamp {
    int64 seconds = 1;
    int32 nanos = 2;
}

message Vote {
    int32 Type = 1; // it should be of `byte` type, actually, so int32 may be incorrect. TODO: check
    int64 Height = 2;
    int32 Round = 3;
    BlockID BlockID = 4;
    Timestamp time = 5;
    bytes ValidatorAddress = 6;
    int32 ValidatorIndex = 7;
    bytes Signature = 8;
}

// ======================= from Tendermint's block.proto
message Header {
    // basic block info
    Version Version = 1;
    string ChainID = 2;
    int64 Height = 3;
    Timestamp Time = 4;
    int64 NumTxs = 5;
    int64 TotalTxs = 6;

    // prev block info
    BlockID LastBlockID = 7;

    // hashes of block data
    bytes LastCommitHash = 8; // commit from validators from the last block
    bytes DataHash = 9; // transactions

    // hashes from the app output from the prev block
    bytes ValidatorsHash = 10; // validators for the current block
    bytes NextValidatorsHash = 11; // validators for the next block
    bytes ConsensusHash = 12; // consensus params for current block
    bytes AppHash = 13; // state after txs from the previous block
    bytes LastResultsHash = 14; // root hash of all results from the txs from the previous block

    // consensus info
    bytes EvidenceHash = 15; // evidence included in the block
    bytes ProposerAddress = 16; // original proposer of the block
}

message Version {
    uint64 Block = 1;
    uint64 App = 2;
}